{"version":3,"file":"static/webpack/static/development/pages/room/[name].js.739534e7262c5186dc7c.hot-update.js","sources":["webpack:///./pages/room/[name].js"],"sourcesContent":["import React, { Component } from 'react'\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\n//Components\n// import defaultBcg from '../images/room-1.jpeg'\nimport Banner from '../../components/Banner'\n//Context\nimport { RoomContext, RoomProvider } from '../../context'\nimport StyledHero from '../../components/StyledHero'\nimport Loading from '../../components/Loading'\n//SEO\nimport Head from 'next/head';\n\nclass room extends Component {\n    \n    static getInitialProps= async ({query}) => {\n        const res = await fetch('https://test-project-react.herokuapp.com/hotel-rooms');\n        const data = await res.json();\n        const room = data.find(room => room.slug === query.name);\n        return {query,room}\n    }\n    constructor(props){\n        super(props)\n        this.state={\n            slug: this.props.query.name,\n            room: this.props.room\n        }\n    }\n    static contextType = RoomContext;\n        \n    render() {\n        \n        if (!room) {\n            return <Loading/>\n        }\n        const { name,description,capacity,size,price,extras,breakfast,pets,images } = this.state.room\n        const roomimages = images.map(image => image.url);\n        const [mainImg,...defaultImg] = roomimages\n        console.log\n        return (\n            <>\n            <Head>\n                <title>{name}</title>\n                <meta name=\"title\" content={name}/>\n                <meta name=\"description\" content={description}/>\n                <meta property=\"og:description\" content={description}/>\n                <meta property=\"og:image\" content={mainImg}/>\n                <meta property=\"og:title\" content={name}/>\n            </Head>\n            <StyledHero img={mainImg}>\n                <Banner title={`${name} room`}>\n                    <Link href=\"/rooms\">\n                        <a  className=\"btn-primary\">back to rooms</a>\n                    </Link>\n                </Banner>\n            </StyledHero>\n            <section className=\"single-room\">\n                <div className=\"single-room-images\">\n                { defaultImg.map((item,index) => {\n                   return <img key={index} src={item} alt={name}/>\n                }) }\n                </div>\n                <div className=\"single-room-info\">\n                    <article className=\"description\">\n                        <h3>Details</h3>\n                        <p>{description}</p>\n                    </article>\n                    <article className=\"info\">\n                        <h3>Info</h3>\n                        <h6>price: ${price}</h6>\n                        <h6>size: ${size} sqm</h6>\n                        <h6>max capacity: {capacity} pax</h6>\n                        <h6>{pets?\"pets allows\":\"no pets allowed\"}</h6>\n                        <h6>{breakfast && \"free breakfast included\"}</h6>\n                    </article>\n                </div>\n            </section>\n            <section className=\"room-extras\">\n                <h6>extras</h6>\n                <ul className=\"extras\">\n                    {extras.map((item,index) => {\n                        return <li key={index}>- {item}</li>\n                    })}\n                </ul>\n            </section>\n            </>\n        )\n    }\n}\n\nexport default room;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAQA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AACA;AAOA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;;;;AA1EA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAHA;AAIA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AA4EA;;;;A","sourceRoot":""}