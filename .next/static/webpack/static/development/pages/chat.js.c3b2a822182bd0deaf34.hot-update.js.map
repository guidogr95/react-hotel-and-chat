{"version":3,"file":"static/webpack/static/development/pages/chat.js.c3b2a822182bd0deaf34.hot-update.js","sources":["webpack:///./components/ChatList.js"],"sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nimport jwt from 'jsonwebtoken';\n\nexport default class ChatList extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeWindow: '',\n            checkedChats: [],\n            checkAll: false\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        \n        if ( (prevProps.currentUser !== this.props.currentUser) && this.props.currentUser !== null && this.props.currentUser.rooms.length > 1) {\n            const chatWindow = this.props.currentUser.rooms.find(room => room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4' )\n            this.context.changeWindow(chatWindow.id)\n        }\n\n        if ( this.state.checkedChats.length === 0 && this.state.checkAll ) {\n            this.setState({ checkAll: false })\n        }\n    }\n\n    switchChat = (event) => {\n        this.context.changeWindow(event.target.value)\n    }\n\n    addCheckedChat = (chatRoom) => {\n        this.setState({\n            checkedChats: [...this.state.checkedChats, chatRoom]\n        })\n    }\n\n    removeCheckedChat = (chatRoom) => {\n        const filtered = this.state.checkedChats.filter(room => room.id !== chatRoom.id)        \n        console.log(filtered)\n        this.setState({\n            checkedChats: filtered\n        })\n    }\n\n    deleteChats = () => {\n\n        this.state.checkedChats.map(chat => {\n            this.props.currentUser.deleteRoom({ roomId: chat.id })\n            .then(() => {\n                console.log(`Deleted room with ID: ${chat.id}`)\n            })\n            .catch(err => {\n                console.log(`Error deleted room ${chat.id}: ${err}`)\n            })\n        })\n    }\n\n    handleCheckAll = () => {\n        const isCheckAll = !this.state.checkAll\n        this.setState({ checkAll: !this.state.checkAll })\n\n        console.log(isCheckAll)\n        if (isCheckAll)  {\n            const allRooms = this.props.currentUser.rooms.filter(room => room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45')\n            this.setState({ checkedChats: allRooms })\n        } else {\n            this.setState({ checkedChats: [] })\n        }\n    }\n\n    getToken = (userId) => {\n        const token = jwt.sign({ instance: 'fe088103-8b4d-4e06-a93c-4d2fb3f963be', iss: 'api_keys/d6b63c39-9c58-459d-a34b-a8d39eb6124d', sub: userId, su: true }, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=', { expiresIn: '1h' });\n        return token\n    }\n\n    seeList = () => {\n        console.log(this.state.checkedChats)\n    }\n\n    render() {\n        const { currentUser } = this.props\n        return (\n            <div className=\"chat-list-container\">\n                <div>\n                    <input type=\"checkbox\" name=\"checkAll\" id=\"chat-checkbox\" checked={this.state.checkAll} onChange={this.handleCheckAll}/>\n                    <button onClick={this.getToken} >Delete Chats</button>\n                    <button onClick={this.deleteChats} >Delete Chats</button>\n                </div>\n                <ul className=\"chatrooms-container\">\n\n                {\n                    currentUser ?\n                    Object.values(currentUser.rooms).map((room, index) => {\n                        if ( room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45' ) {\n                            return (\n                                <ChatRoomButton key={index} room={room} see={this.seeList} clearAll={this.clearAll} checkAll={this.state.checkAll} onClick={this.switchChat} check={this.addCheckedChat} uncheck={this.removeCheckedChat}  />\n                            )\n                        }\n                    }) : 'Loading...'\n                }\n                </ul>\n            </div>\n        )\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAsBA;AACA;AACA;AAxBA;AA0BA;AACA;AADA;AAGA;AACA;AA9BA;AAgCA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAtCA;AAyCA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAnDA;AAqDA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAhEA;AAkEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AArEA;AAuEA;AACA;AACA;AAvEA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAuDA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAKA;;;;AApGA;AACA;AADA;AACA;;;;;A","sourceRoot":""}