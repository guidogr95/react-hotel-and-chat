{"version":3,"file":"static/webpack/static/development/pages/chat.js.38b69e3f5e25aa3ecbf4.hot-update.js","sources":["webpack:///./components/ChatList.js"],"sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nimport jwt from 'jsonwebtoken';\nimport axios from 'axios';\nimport RSC from 'react-scrollbars-custom'\n\nexport default class ChatList extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeWindow: '',\n            checkedChats: [],\n            checkAll: false,\n            loaded: false\n        }\n    }\n\n    componentDidUpdate() {\n        \n        if ( Object.keys(this.context.currentUser).length > 0 && !this.state.loaded ) {\n        const chatWindow = this.context.currentUser.rooms.reverse().find(room => room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45' )\n        if ( !chatWindow ) {\n\n        } else {\n            this.context.changeWindow(chatWindow.id)\n        }\n        this.setState({loaded:true})\n        }\n\n        if ( this.state.checkedChats.length === 0 && this.state.checkAll ) {\n            this.setState({ checkAll: false })\n        }\n    }\n\n    useForceUpdate = () => {\n        this.setState({counter: this.state.counter + 1})\n    }\n\n    switchChat = (id) => {\n        this.context.changeWindow(id)\n    }\n\n    addCheckedChat = (chatRoom) => {\n        this.setState({\n            checkedChats: [...this.state.checkedChats, chatRoom]\n        })\n    }\n\n    removeCheckedChat = (chatRoom) => {\n        const filtered = this.state.checkedChats.filter(room => room.id !== chatRoom.id)\n        this.setState({\n            checkedChats: filtered\n        })\n    }\n\n    deleteChats = () => {\n        const length = this.state.checkedChats.length;\n        let loop = 0; \n        this.state.checkedChats.map(chat => {\n            try {\n                const token = this.getToken();\n                axios({\n                    url: `https://us1.pusherplatform.io/services/chatkit_scheduler/v1/fe088103-8b4d-4e06-a93c-4d2fb3f963be/users/${chat.createdByUserId}`,\n                    method: 'put',\n                    headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`,}\n                })\n                .then(res => console.log(res))\n                .catch(err => console.log(err));\n            } catch(err) {\n                console.log(err)\n            }\n            this.context.currentUser.deleteRoom({ roomId: chat.id })\n            .then(() => {\n                console.log(`Deleted room with ID: ${chat.id}`);\n                this.setState({ checkAll: false })\n                loop += 1\n                if ( loop === length ) {\n                    this.setState({ checkedChats: [] })\n                }\n            })\n            .catch(err => {\n                console.log(`Error deleted room ${chat.id}: ${err}`)\n            })\n        })\n    }\n\n    handleCheckAll = () => {\n        const isCheckAll = !this.state.checkAll\n        this.setState({ checkAll: !this.state.checkAll })\n        if (isCheckAll)  {\n            const allRooms = this.context.currentUser.rooms.filter(room => room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45')\n            this.setState({ checkedChats: allRooms })\n        } else {\n            this.setState({ checkedChats: [] })\n        }\n    }\n\n    getToken = (userId) => {\n        const token = jwt.sign({ instance: 'fe088103-8b4d-4e06-a93c-4d2fb3f963be', iss: 'api_keys/d6b63c39-9c58-459d-a34b-a8d39eb6124d', sub: userId, su: true }, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=', { expiresIn: '1h' });\n        return token\n    }\n\n    render() {\n        \n        const { currentUser } = this.context\n        \n        return (\n            <div className=\"chat-list-container\">\n                <div className=\"chat-list-settings\" >\n                    <input type=\"checkbox\" name=\"checkAll\" id=\"chat-checkbox\" checked={this.state.checkAll} onChange={this.handleCheckAll}/>\n                    <label htmlFor=\"chat-checkbox\"></label>\n                    <button className=\"btn-primary\" onClick={this.deleteChats} >Delete</button>\n                </div>\n                <RSC className=\"chatlist-box\">\n                    <ul className=\"chatrooms-container\">\n\n                    {\n                        Object.keys(currentUser).length > 0 ?\n                        Object.values(currentUser.rooms).reverse().map(room => {\n                            if ( room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45' ) {\n                                return (\n                                    <ChatRoomButton key={room.id} room={room} checkAll={this.state.checkAll} onClick={this.switchChat} check={this.addCheckedChat} uncheck={this.removeCheckedChat}  />\n                                )\n                            }\n                        }) : 'Loading...'\n                    }\n                    </ul>\n                </RSC>\n            </div>\n        )\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA4BA;AAAA;AAAA;AACA;AACA;AA9BA;AAgCA;AACA;AACA;AAlCA;AAoCA;AACA;AADA;AAGA;AACA;AAxCA;AA0CA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA/CA;AAiDA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA9EA;AAgFA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAzFA;AA2FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AA5FA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAsEA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAMA;;;;AA7HA;AACA;AADA;AACA;;;;;A","sourceRoot":""}