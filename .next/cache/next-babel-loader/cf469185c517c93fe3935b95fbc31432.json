{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nimport jwt from 'jsonwebtoken';\n\nvar ChatList = /*#__PURE__*/function (_Component) {\n  _inherits(ChatList, _Component);\n\n  function ChatList(props) {\n    var _this;\n\n    _classCallCheck(this, ChatList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"switchChat\", function (event) {\n      _this.context.changeWindow(event.target.value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addCheckedChat\", function (chatRoom) {\n      _this.setState({\n        checkedChats: [].concat(_toConsumableArray(_this.state.checkedChats), [chatRoom])\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeCheckedChat\", function (chatRoom) {\n      var filtered = _this.state.checkedChats.filter(function (room) {\n        return room.id !== chatRoom.id;\n      });\n\n      console.log(filtered);\n\n      _this.setState({\n        checkedChats: filtered\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteChats\", function () {\n      _this.state.checkedChats.map(function (chat) {\n        _this.props.currentUser.deleteRoom({\n          roomId: chat.id\n        }).then(function () {\n          console.log(\"Deleted room with ID: \".concat(chat.id));\n        })[\"catch\"](function (err) {\n          console.log(\"Error deleted room \".concat(chat.id, \": \").concat(err));\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCheckAll\", function () {\n      var isCheckAll = !_this.state.checkAll;\n\n      _this.setState({\n        checkAll: !_this.state.checkAll\n      });\n\n      console.log(isCheckAll);\n\n      if (isCheckAll) {\n        var allRooms = _this.props.currentUser.rooms.filter(function (room) {\n          return room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45';\n        });\n\n        _this.setState({\n          checkedChats: allRooms\n        });\n      } else {\n        _this.setState({\n          checkedChats: []\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getToken\", function () {\n      var token = jwt.sign({\n        instance: 'fe088103-8b4d-4e06-a93c-4d2fb3f963be',\n        iss: 'api_keys/d6b63c39-9c58-459d-a34b-a8d39eb6124d',\n        sub: 'send6388',\n        su: true\n      }, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=', {\n        expiresIn: '1h'\n      });\n      var decoded = jwt.verify(token, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=');\n      console.log(decoded);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"seeList\", function () {\n      console.log(_this.state.checkedChats);\n    });\n\n    _this.state = {\n      activeWindow: '',\n      checkedChats: [],\n      checkAll: false\n    };\n    return _this;\n  }\n\n  _createClass(ChatList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.currentUser !== this.props.currentUser && this.props.currentUser !== null && this.props.currentUser.rooms.length > 1) {\n        var chatWindow = this.props.currentUser.rooms.find(function (room) {\n          return room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4';\n        });\n        this.context.changeWindow(chatWindow.id);\n      }\n\n      if (this.state.checkedChats.length === 0 && this.state.checkAll) {\n        this.setState({\n          checkAll: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var currentUser = this.props.currentUser;\n      return __jsx(\"div\", {\n        className: \"chat-list-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: \"checkAll\",\n        id: \"chat-checkbox\",\n        checked: this.state.checkAll,\n        onChange: this.handleCheckAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        onClick: this.getToken,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Delete Chats\"), __jsx(\"button\", {\n        onClick: this.deleteChats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Delete Chats\")), __jsx(\"ul\", {\n        className: \"chatrooms-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, currentUser ? _Object$values(currentUser.rooms).map(function (room, index) {\n        if (room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45') {\n          return __jsx(ChatRoomButton, {\n            key: index,\n            room: room,\n            see: _this2.seeList,\n            clearAll: _this2.clearAll,\n            checkAll: _this2.state.checkAll,\n            onClick: _this2.switchChat,\n            check: _this2.addCheckedChat,\n            uncheck: _this2.removeCheckedChat,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          });\n        }\n      }) : 'Loading...'));\n    }\n  }]);\n\n  return ChatList;\n}(Component);\n\n_defineProperty(ChatList, \"contextType\", RoomContext);\n\nexport { ChatList as default };","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatList.js"],"names":["Component","RoomContext","ChatRoomButton","jwt","ChatList","props","event","context","changeWindow","target","value","chatRoom","setState","checkedChats","state","filtered","filter","room","id","console","log","map","chat","currentUser","deleteRoom","roomId","then","err","isCheckAll","checkAll","allRooms","rooms","token","sign","instance","iss","sub","su","expiresIn","decoded","verify","activeWindow","prevProps","length","chatWindow","find","handleCheckAll","getToken","deleteChats","index","seeList","clearAll","switchChat","addCheckedChat","removeCheckedChat"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,cAAhB;;IAEqBC,Q;;;AAEjB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;;AADe,iEAqBN,UAACC,KAAD,EAAW;AACpB,YAAKC,OAAL,CAAaC,YAAb,CAA0BF,KAAK,CAACG,MAAN,CAAaC,KAAvC;AACH,KAvBkB;;AAAA,qEAyBF,UAACC,QAAD,EAAc;AAC3B,YAAKC,QAAL,CAAc;AACVC,QAAAA,YAAY,+BAAM,MAAKC,KAAL,CAAWD,YAAjB,IAA+BF,QAA/B;AADF,OAAd;AAGH,KA7BkB;;AAAA,wEA+BC,UAACA,QAAD,EAAc;AAC9B,UAAMI,QAAQ,GAAG,MAAKD,KAAL,CAAWD,YAAX,CAAwBG,MAAxB,CAA+B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYP,QAAQ,CAACO,EAAzB;AAAA,OAAnC,CAAjB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,YAAKH,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAEE;AADJ,OAAd;AAGH,KArCkB;;AAAA,kEAuCL,YAAM;AAEhB,YAAKD,KAAL,CAAWD,YAAX,CAAwBQ,GAAxB,CAA4B,UAAAC,IAAI,EAAI;AAChC,cAAKjB,KAAL,CAAWkB,WAAX,CAAuBC,UAAvB,CAAkC;AAAEC,UAAAA,MAAM,EAAEH,IAAI,CAACJ;AAAf,SAAlC,EACCQ,IADD,CACM,YAAM;AACRP,UAAAA,OAAO,CAACC,GAAR,iCAAqCE,IAAI,CAACJ,EAA1C;AACH,SAHD,WAIO,UAAAS,GAAG,EAAI;AACVR,UAAAA,OAAO,CAACC,GAAR,8BAAkCE,IAAI,CAACJ,EAAvC,eAA8CS,GAA9C;AACH,SAND;AAOH,OARD;AASH,KAlDkB;;AAAA,qEAoDF,YAAM;AACnB,UAAMC,UAAU,GAAG,CAAC,MAAKd,KAAL,CAAWe,QAA/B;;AACA,YAAKjB,QAAL,CAAc;AAAEiB,QAAAA,QAAQ,EAAE,CAAC,MAAKf,KAAL,CAAWe;AAAxB,OAAd;;AAEAV,MAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAZ;;AACA,UAAIA,UAAJ,EAAiB;AACb,YAAME,QAAQ,GAAG,MAAKzB,KAAL,CAAWkB,WAAX,CAAuBQ,KAAvB,CAA6Bf,MAA7B,CAAoC,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAY,sCAAhB;AAAA,SAAxC,CAAjB;;AACA,cAAKN,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAEiB;AAAhB,SAAd;AACH,OAHD,MAGO;AACH,cAAKlB,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACH;AACJ,KA/DkB;;AAAA,+DAiER,YAAM;AACb,UAAMmB,KAAK,GAAG7B,GAAG,CAAC8B,IAAJ,CAAS;AAAEC,QAAAA,QAAQ,EAAE,sCAAZ;AAAoDC,QAAAA,GAAG,EAAE,+CAAzD;AAA0GC,QAAAA,GAAG,EAAE,UAA/G;AAA2HC,QAAAA,EAAE,EAAE;AAA/H,OAAT,EAAgJ,8CAAhJ,EAAgM;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAhM,CAAd;AAEA,UAAMC,OAAO,GAAGpC,GAAG,CAACqC,MAAJ,CAAWR,KAAX,EAAkB,8CAAlB,CAAhB;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYmB,OAAZ;AAEH,KAvEkB;;AAAA,8DAyET,YAAM;AACZpB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKN,KAAL,CAAWD,YAAvB;AACH,KA3EkB;;AAEf,UAAKC,KAAL,GAAa;AACT2B,MAAAA,YAAY,EAAE,EADL;AAET5B,MAAAA,YAAY,EAAE,EAFL;AAGTgB,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAFe;AAOlB;;;;uCAEkBa,S,EAAW;AAE1B,UAAMA,SAAS,CAACnB,WAAV,KAA0B,KAAKlB,KAAL,CAAWkB,WAAtC,IAAsD,KAAKlB,KAAL,CAAWkB,WAAX,KAA2B,IAAjF,IAAyF,KAAKlB,KAAL,CAAWkB,WAAX,CAAuBQ,KAAvB,CAA6BY,MAA7B,GAAsC,CAApI,EAAuI;AACnI,YAAMC,UAAU,GAAG,KAAKvC,KAAL,CAAWkB,WAAX,CAAuBQ,KAAvB,CAA6Bc,IAA7B,CAAkC,UAAA5B,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAY,sCAAhB;AAAA,SAAtC,CAAnB;AACA,aAAKX,OAAL,CAAaC,YAAb,CAA0BoC,UAAU,CAAC1B,EAArC;AACH;;AAED,UAAK,KAAKJ,KAAL,CAAWD,YAAX,CAAwB8B,MAAxB,KAAmC,CAAnC,IAAwC,KAAK7B,KAAL,CAAWe,QAAxD,EAAmE;AAC/D,aAAKjB,QAAL,CAAc;AAAEiB,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACH;AACJ;;;6BA0DQ;AAAA;;AAAA,UACGN,WADH,GACmB,KAAKlB,KADxB,CACGkB,WADH;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,EAAE,EAAC,eAA1C;AAA0D,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWe,QAA9E;AAAwF,QAAA,QAAQ,EAAE,KAAKiB,cAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAQ,QAAA,OAAO,EAAE,KAAKC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGI;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,CADJ,EAMI;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGIzB,WAAW,GACX,eAAcA,WAAW,CAACQ,KAA1B,EAAiCV,GAAjC,CAAqC,UAACJ,IAAD,EAAOgC,KAAP,EAAiB;AAClD,YAAKhC,IAAI,CAACC,EAAL,KAAY,sCAAjB,EAA0D;AACtD,iBACI,MAAC,cAAD;AAAgB,YAAA,GAAG,EAAE+B,KAArB;AAA4B,YAAA,IAAI,EAAEhC,IAAlC;AAAwC,YAAA,GAAG,EAAE,MAAI,CAACiC,OAAlD;AAA2D,YAAA,QAAQ,EAAE,MAAI,CAACC,QAA1E;AAAoF,YAAA,QAAQ,EAAE,MAAI,CAACrC,KAAL,CAAWe,QAAzG;AAAmH,YAAA,OAAO,EAAE,MAAI,CAACuB,UAAjI;AAA6I,YAAA,KAAK,EAAE,MAAI,CAACC,cAAzJ;AAAyK,YAAA,OAAO,EAAE,MAAI,CAACC,iBAAvL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACJ,OAND,CADW,GAON,YAVT,CANJ,CADJ;AAsBH;;;;EAvGiCtD,S;;gBAAjBI,Q,iBACIH,W;;SADJG,Q","sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nimport jwt from 'jsonwebtoken';\n\nexport default class ChatList extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeWindow: '',\n            checkedChats: [],\n            checkAll: false\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        \n        if ( (prevProps.currentUser !== this.props.currentUser) && this.props.currentUser !== null && this.props.currentUser.rooms.length > 1) {\n            const chatWindow = this.props.currentUser.rooms.find(room => room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4' )\n            this.context.changeWindow(chatWindow.id)\n        }\n\n        if ( this.state.checkedChats.length === 0 && this.state.checkAll ) {\n            this.setState({ checkAll: false })\n        }\n    }\n\n    switchChat = (event) => {\n        this.context.changeWindow(event.target.value)\n    }\n\n    addCheckedChat = (chatRoom) => {\n        this.setState({\n            checkedChats: [...this.state.checkedChats, chatRoom]\n        })\n    }\n\n    removeCheckedChat = (chatRoom) => {\n        const filtered = this.state.checkedChats.filter(room => room.id !== chatRoom.id)        \n        console.log(filtered)\n        this.setState({\n            checkedChats: filtered\n        })\n    }\n\n    deleteChats = () => {\n\n        this.state.checkedChats.map(chat => {\n            this.props.currentUser.deleteRoom({ roomId: chat.id })\n            .then(() => {\n                console.log(`Deleted room with ID: ${chat.id}`)\n            })\n            .catch(err => {\n                console.log(`Error deleted room ${chat.id}: ${err}`)\n            })\n        })\n    }\n\n    handleCheckAll = () => {\n        const isCheckAll = !this.state.checkAll\n        this.setState({ checkAll: !this.state.checkAll })\n\n        console.log(isCheckAll)\n        if (isCheckAll)  {\n            const allRooms = this.props.currentUser.rooms.filter(room => room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45')\n            this.setState({ checkedChats: allRooms })\n        } else {\n            this.setState({ checkedChats: [] })\n        }\n    }\n\n    getToken = () => {\n        const token = jwt.sign({ instance: 'fe088103-8b4d-4e06-a93c-4d2fb3f963be', iss: 'api_keys/d6b63c39-9c58-459d-a34b-a8d39eb6124d', sub: 'send6388', su: true }, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=', { expiresIn: '1h' });\n\n        const decoded = jwt.verify(token, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=');\n        console.log(decoded);\n\n    }\n\n    seeList = () => {\n        console.log(this.state.checkedChats)\n    }\n\n    render() {\n        const { currentUser } = this.props\n        return (\n            <div className=\"chat-list-container\">\n                <div>\n                    <input type=\"checkbox\" name=\"checkAll\" id=\"chat-checkbox\" checked={this.state.checkAll} onChange={this.handleCheckAll}/>\n                    <button onClick={this.getToken} >Delete Chats</button>\n                    <button onClick={this.deleteChats} >Delete Chats</button>\n                </div>\n                <ul className=\"chatrooms-container\">\n\n                {\n                    currentUser ?\n                    Object.values(currentUser.rooms).map((room, index) => {\n                        if ( room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45' ) {\n                            return (\n                                <ChatRoomButton key={index} room={room} see={this.seeList} clearAll={this.clearAll} checkAll={this.state.checkAll} onClick={this.switchChat} check={this.addCheckedChat} uncheck={this.removeCheckedChat}  />\n                            )\n                        }\n                    }) : 'Loading...'\n                }\n                </ul>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}