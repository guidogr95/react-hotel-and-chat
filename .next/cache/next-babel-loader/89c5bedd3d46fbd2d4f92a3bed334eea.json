{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nexport default class ChatList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"switchChat\", event => {\n      console.log(event.target.name);\n      this.context.changeWindow(event.target.name);\n    });\n\n    this.state = {\n      activeWindow: ''\n    };\n  }\n\n  componentDidMount() {\n    this.context.changeWindow(this.state.activeWindow);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      console.log(this.props.e); // this.setState({\n      //     activeWindow: this.props.currentUser.rooms[1].id\n      // })\n    }\n  }\n\n  render() {\n    const {\n      currentUser\n    } = this.props;\n    return __jsx(\"ul\", {\n      className: \"chatrooms-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, currentUser ? Object.values(currentUser.rooms).map((room, index) => {\n      if (room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4') {\n        return __jsx(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          name: room.id,\n          onClick: this.switchChat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, room.id));\n      }\n    }) : 'Loading...');\n  }\n\n}\n\n_defineProperty(ChatList, \"contextType\", RoomContext);","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatList.js"],"names":["Component","RoomContext","ChatList","constructor","props","event","console","log","target","name","context","changeWindow","state","activeWindow","componentDidMount","componentDidUpdate","prevProps","e","render","currentUser","Object","values","rooms","map","room","index","id","switchChat"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAE5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,wCAoBLC,KAAD,IAAW;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,IAAzB;AACA,WAAKC,OAAL,CAAaC,YAAb,CAA0BN,KAAK,CAACG,MAAN,CAAaC,IAAvC;AACH,KAvBkB;;AAEf,SAAKG,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,OAAL,CAAaC,YAAb,CAA0B,KAAKC,KAAL,CAAWC,YAArC;AACH;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAKA,SAAS,KAAK,KAAKZ,KAAxB,EAAgC;AAC5BE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWa,CAAvB,EAD4B,CAE5B;AACA;AACA;AACH;AACJ;;AAODC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKf,KAA7B;AACA,WACI;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIe,WAAW,GACXC,MAAM,CAACC,MAAP,CAAcF,WAAW,CAACG,KAA1B,EAAiCC,GAAjC,CAAqC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClD,UAAKD,IAAI,CAACE,EAAL,KAAY,sCAAjB,EAA0D;AACtD,eACI;AAAI,UAAA,GAAG,EAAED,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,IAAI,EAAED,IAAI,CAACE,EAAd;AAAkB,UAAA,OAAO,EAAE,KAAKC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8CH,IAAI,CAACE,EAAnD,CADJ,CADJ;AAKH;AACJ,KARD,CADW,GASN,YAXT,CADJ;AAgBH;;AA7C2C;;gBAA3BxB,Q,iBACID,W","sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\n\nexport default class ChatList extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeWindow: ''\n        }\n    }\n\n    componentDidMount() {\n        this.context.changeWindow(this.state.activeWindow)\n    }\n\n    componentDidUpdate(prevProps) {\n        if ( prevProps !== this.props ) {\n            console.log(this.props.e)\n            // this.setState({\n            //     activeWindow: this.props.currentUser.rooms[1].id\n            // })\n        }\n    }\n\n    switchChat = (event) => {\n        console.log(event.target.name)\n        this.context.changeWindow(event.target.name)\n    }\n\n    render() {\n        const { currentUser } = this.props\n        return (\n            <ul className=\"chatrooms-container\">\n            {\n                currentUser ?\n                Object.values(currentUser.rooms).map((room, index) => {\n                    if ( room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4' ) {\n                        return (\n                            <li key={index}>\n                                <p name={room.id} onClick={this.switchChat} >{room.id}</p>\n                            </li>\n                        )\n                    }\n                }) : 'Loading...'\n            }\n            </ul>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}