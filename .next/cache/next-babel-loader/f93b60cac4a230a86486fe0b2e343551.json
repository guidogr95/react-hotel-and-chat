{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport UsernameForm from './UsernameForm';\nimport ChatWidgetHeader from './ChatWidgetHeader';\nimport ChatScreen from './ChatScreen';\nexport default class ChatScreenDisplay extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChat\", () => {\n      if (this.props.currentScreen === 'WhatIsYourUsernameScreen') {\n        return __jsx(UsernameForm, {\n          onSubmit: this.props.onSubmit\n        });\n      } else if (this.props.currentScreen === 'ChatScreen' && this.state.userId !== '' && this.state.currentUsername !== '') {\n        return __jsx(ChatScreen, {\n          currentUsername: this.state.currentUsername,\n          userId: this.state.userId\n        });\n      }\n    });\n\n    this.state = {\n      userId: '',\n      currentUsername: ''\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId && prevProps.currentUsername !== this.props.currentUsername) {\n      console.log('updated', this.props);\n      this.setState({\n        userId: this.props.userId,\n        currentUsername: this.props.currentUsername\n      });\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: this.props.show ? \"chat-screen-display\" : \"chat-screen-display inactive\"\n    }, __jsx(ChatWidgetHeader, null), this.handleChat());\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}