{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/pages/chat.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useContext, useEffect } from 'react';\nimport chatImg from '../images/chat.jpg';\nimport loading from '../images/gif/loading-arrow.gif';\nimport axios from 'axios';\nimport { RoomContext } from '../context';\nimport Link from 'next/link';\nexport default function chat() {\n  var context = useContext(RoomContext);\n\n  var _useState = useState({}),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  var _useState2 = useState(false),\n      btnDisabled = _useState2[0],\n      setbtnDisabled = _useState2[1];\n\n  var _useState3 = useState({}),\n      errors = _useState3[0],\n      setErrors = _useState3[1];\n\n  var style = {\n    backgroundImage: \"url(\" + chatImg + \")\",\n    height: 600,\n    width: \"100%\",\n    padding: \"150px 0 150px 0\"\n  };\n\n  var handleChange = function handleChange(event) {\n    return setInput(_objectSpread({}, input, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  useEffect(function () {\n    context.updateCredentials(true);\n  }, []);\n\n  var handleSubmit = function handleSubmit(event) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            setbtnDisabled(true);\n            axios({\n              url: 'http://localhost:8000/api/users/login',\n              method: 'POST',\n              data: _JSON$stringify({\n                email: input.email,\n                password: input.password\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(function (res) {\n              setbtnDisabled(false);\n              context.updateCredentials(false, res.data.userId, res.data.email, res.data.token);\n            })[\"catch\"](function (err) {\n              console.log(err);\n              setErrors(_objectSpread({}, errors, {\n                error: \"No se pudo conectar. Revise sus credenciales\"\n              }));\n              setbtnDisabled(false);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var renderForm = function renderForm() {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Login to Chat\"), _Object$values(errors).map(function (err, index) {\n      return __jsx(\"div\", {\n        key: index,\n        className: \"login-err\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, err);\n    }), __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Email\"), __jsx(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Password\"), __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      disabled: btnDisabled,\n      className: btnDisabled ? \"btn-primary submit-btn disabled\" : \"btn-primary submit-btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, btnDisabled ? __jsx(\"img\", {\n      className: \"loading-login\",\n      src: loading,\n      alt: \"loading spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }) : \"Loading\")));\n  };\n\n  var renderLoggedin = function renderLoggedin() {\n    return __jsx(\"div\", {\n      className: \"signed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"You are logged in\"), __jsx(Link, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"btn-primary signed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Go Home\")));\n  };\n\n  if (context.authenticated === null) {\n    return __jsx(\"div\", {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"log-box loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      className: \"loading-spinner\",\n      src: loading,\n      alt: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })));\n  }\n\n  return __jsx(\"div\", {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"log-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, context.authenticated ? renderLoggedin() : renderForm()));\n}","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/pages/chat.js"],"names":["useState","useContext","useEffect","chatImg","loading","axios","RoomContext","Link","chat","context","input","setInput","btnDisabled","setbtnDisabled","errors","setErrors","style","backgroundImage","height","width","padding","handleChange","event","target","name","value","updateCredentials","handleSubmit","preventDefault","url","method","data","email","password","headers","then","res","userId","token","err","console","log","error","renderForm","map","index","renderLoggedin","authenticated"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from 'react'\nimport chatImg from '../images/chat.jpg'\nimport loading from '../images/gif/loading-arrow.gif'\nimport axios from 'axios';\nimport { RoomContext } from '../context'\nimport Link from 'next/link';\n\n\nexport default function chat() {\n    const context = useContext(RoomContext);\n    const [input, setInput] = useState({});\n    const [btnDisabled, setbtnDisabled] = useState(false);\n    const [errors, setErrors] = useState({});\n    const style = {\n        backgroundImage: \"url(\"+ chatImg + \")\",\n        height: 600,\n        width: \"100%\",\n        padding: \"150px 0 150px 0\"\n    };\n    const handleChange = (event) => setInput({\n        ...input,\n        [event.target.name]: event.target.value\n    });\n\n    useEffect(() => {\n        context.updateCredentials(true);\n    }, [])\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setbtnDisabled(true);\n        axios({\n            url: 'http://localhost:8000/api/users/login',\n            method: 'POST',\n            data: JSON.stringify({\n                email: input.email,\n                password: input.password\n            }),\n            headers: { 'Content-Type': 'application/json'}\n        })\n        .then(res => {\n            setbtnDisabled(false);\n            context.updateCredentials(false, res.data.userId, res.data.email, res.data.token);\n        })\n        .catch(err => {\n            console.log(err);\n            setErrors({\n                ...errors,\n                error: \"No se pudo conectar. Revise sus credenciales\"\n            })\n            setbtnDisabled(false);\n        })\n    }\n    const renderForm = () => {\n        return (\n            <React.Fragment>\n                <h3>Login to Chat</h3>\n                {\n                Object.values(errors).map((err, index) => {\n                    return <div key={index} className=\"login-err\">{err}</div>\n                })\n                }\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={handleChange}/>\n\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={handleChange}/>\n                    <button disabled={btnDisabled} className={btnDisabled?\"btn-primary submit-btn disabled\":\"btn-primary submit-btn\"} type=\"submit\">{\n                        btnDisabled ?\n                        <img className=\"loading-login\" src={loading} alt=\"loading spinner\"/>:\n                        \"Loading\"\n                    }</button>\n                </form>\n            </React.Fragment>\n        )\n    }\n    const renderLoggedin = () => {\n        return (\n            <div className=\"signed\">\n                <h3>You are logged in</h3>\n                <Link href=\"/\">\n                    <a className=\"btn-primary signed\">\n                        Go Home\n                    </a>\n                </Link>\n            </div>\n        )\n    }\n    if (context.authenticated === null) {\n        return (\n            <div style={style}>\n                <div className=\"log-box loading\">\n                <img className=\"loading-spinner\" src={loading} alt=\"loading\"/>\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div style={style}>\n            <div className=\"log-box\">\n                {\n                    context.authenticated ?\n                        renderLoggedin() :\n                        renderForm()\n                }\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}