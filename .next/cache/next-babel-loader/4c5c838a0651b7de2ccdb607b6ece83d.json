{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatBoard.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport ChatInstance from './ChatInstance';\nexport default class ChatBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: this.props.currentUser\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.currentUser);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentUser !== this.props.currentUser) {\n      console.log(this.props.currentUser);\n      this.setState({\n        currentUser: this.props.currentUser\n      });\n    }\n  }\n\n  render() {\n    const {\n      currentUser\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"chat-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, currentUser && currentUser !== null ? Object.values(currentUser.rooms).map(room => {\n      return __jsx(ChatInstance, {\n        key: room.id,\n        roomInfo: room,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }) : 'Loading');\n  }\n\n}","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatBoard.js"],"names":["React","Component","ChatInstance","ChatBoard","constructor","props","state","currentUser","componentDidMount","console","log","componentDidUpdate","prevProps","setState","render","Object","values","rooms","map","room","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAC7CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE;AADf,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWE,WAAvB;AACH;;AAEDI,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAKA,SAAS,CAACL,WAAV,KAA0B,KAAKF,KAAL,CAAWE,WAA1C,EAAwD;AACpDE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWE,WAAvB;AACA,WAAKM,QAAL,CAAc;AACVN,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE;AADd,OAAd;AAGH;AACJ;;AACDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEP,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACA,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQC,WAAW,IAAIA,WAAW,KAAK,IAA/B,GACAQ,MAAM,CAACC,MAAP,CAAcT,WAAW,CAACU,KAA1B,EAAiCC,GAAjC,CAAsCC,IAAD,IAAU;AAC3C,aAAO,MAAC,YAAD;AAAc,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAxB;AAA4B,QAAA,QAAQ,EAAED,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,CADA,GAGK,SALb,CADJ;AAUH;;AAhC4C","sourcesContent":["import React, { Component } from 'react'\nimport ChatInstance from './ChatInstance'\n\nexport default class ChatBoard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentUser: this.props.currentUser\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props.currentUser)\n    }\n\n    componentDidUpdate(prevProps) {\n        if ( prevProps.currentUser !== this.props.currentUser ) {\n            console.log(this.props.currentUser)\n            this.setState({\n                currentUser: this.props.currentUser\n            })\n        }\n    }\n    render() {\n        const { currentUser } = this.state\n        return (\n            <div className=\"chat-board\">\n                {\n                    currentUser && currentUser !== null ?\n                    Object.values(currentUser.rooms).map((room) => {\n                        return <ChatInstance key={room.id} roomInfo={room}  />\n                    }) : 'Loading'\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}