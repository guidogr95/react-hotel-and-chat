{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/pages/room/[name].js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; //Components\n// import defaultBcg from '../images/room-1.jpeg'\n\nimport Banner from '../../components/Banner'; //Context\n\nimport { RoomContext, RoomProvider } from '../../context';\nimport StyledHero from '../../components/StyledHero';\nimport Loading from '../../components/Loading'; //SEO\n\nimport Head from 'next/head';\n\nclass room extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      slug: this.props.query.name,\n      room: this.props.room\n    };\n  }\n\n  render() {\n    if (!room) {\n      return __jsx(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    }\n\n    const {\n      name,\n      description,\n      capacity,\n      size,\n      price,\n      extras,\n      breakfast,\n      pets,\n      images\n    } = this.state.room;\n    const roomimages = images.map(image => image.url);\n    const [mainImg, ...defaultImg] = roomimages;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, name), __jsx(\"meta\", {\n      name: \"title\",\n      content: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      name: \"description\",\n      content: description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      property: \"og:description\",\n      content: description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      property: \"og:image\",\n      content: mainImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), __jsx(StyledHero, {\n      img: mainImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(Banner, {\n      title: `${name} room`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/rooms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"back to rooms\")))), __jsx(\"section\", {\n      className: \"single-room\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"single-room-images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, defaultImg.map((item, index) => {\n      return __jsx(\"img\", {\n        key: index,\n        src: item,\n        alt: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    })), __jsx(\"div\", {\n      className: \"single-room-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(\"article\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Details\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, description)), __jsx(\"article\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Info\"), __jsx(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"price: $\", price), __jsx(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"size: $\", size, \" sqm\"), __jsx(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"max capacity: \", capacity, \" pax\"), __jsx(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, pets ? \"pets allows\" : \"no pets allowed\"), __jsx(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, breakfast && \"free breakfast included\")))), __jsx(\"section\", {\n      className: \"room-extras\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"extras\"), __jsx(\"ul\", {\n      className: \"extras\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, extras.map((item, index) => {\n      return __jsx(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"- \", item);\n    }))));\n  }\n\n}\n\n_defineProperty(room, \"getInitialProps\", async ({\n  query\n}) => {\n  const res = await fetch('https://graphql.datocms.com/', {\n    method: \"POST\",\n    body: JSON.stringify({\n      query: `{ allRooms {\n                    id\n                    name\n                    slug\n                    price\n                    roomtype\n                    size\n                    capacity\n                    breakfast\n                    pets\n                    featured\n                    description\n                    extras\n                    images {\n                      url\n                    }\n                  } }`\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': 'Bearer f3341f2f85860e06446a5e86bfd392'\n    }\n  });\n  const data = await res.json();\n  console.log(data.data.allRooms);\n  const room = data.find(room => room.slug === query.name);\n  return {\n    query,\n    room\n  };\n});\n\n_defineProperty(room, \"contextType\", RoomContext);\n\nexport default room;","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/pages/room/[name].js"],"names":["React","Component","Link","fetch","Banner","RoomContext","RoomProvider","StyledHero","Loading","Head","room","constructor","props","state","slug","query","name","render","description","capacity","size","price","extras","breakfast","pets","images","roomimages","map","image","url","mainImg","defaultImg","item","index","res","method","body","JSON","stringify","headers","data","json","console","log","allRooms","find"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\n//Components\n// import defaultBcg from '../images/room-1.jpeg'\nimport Banner from '../../components/Banner'\n//Context\nimport { RoomContext, RoomProvider } from '../../context'\nimport StyledHero from '../../components/StyledHero'\nimport Loading from '../../components/Loading'\n//SEO\nimport Head from 'next/head';\n\nclass room extends Component {\n    \n    static getInitialProps= async ({query}) => {\n        const res = await fetch('https://graphql.datocms.com/',{\n            method: \"POST\",\n            body: JSON.stringify({\n                query: `{ allRooms {\n                    id\n                    name\n                    slug\n                    price\n                    roomtype\n                    size\n                    capacity\n                    breakfast\n                    pets\n                    featured\n                    description\n                    extras\n                    images {\n                      url\n                    }\n                  } }`\n            }),\n            headers: {\n                'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer f3341f2f85860e06446a5e86bfd392'\n            }\n        });\n        const data = await res.json();\n        console.log(data.data.allRooms)\n        const room = data.find(room => room.slug === query.name);\n        return {query,room}\n    }\n    constructor(props){\n        super(props)\n        this.state={\n            slug: this.props.query.name,\n            room: this.props.room\n        }\n    }\n    static contextType = RoomContext;\n        \n    render() {\n        \n        if (!room) {\n            return <Loading/>\n        }\n        const { name,description,capacity,size,price,extras,breakfast,pets,images } = this.state.room\n        const roomimages = images.map(image => image.url);\n        const [mainImg,...defaultImg] = roomimages;\n        return (\n            <>\n            <Head>\n                <title>{name}</title>\n                <meta name=\"title\" content={name}/>\n                <meta name=\"description\" content={description}/>\n                <meta property=\"og:description\" content={description}/>\n                <meta property=\"og:image\" content={mainImg}/>\n                <meta property=\"og:title\" content={name}/>\n            </Head>\n            <StyledHero img={mainImg}>\n                <Banner title={`${name} room`}>\n                    <Link href=\"/rooms\">\n                        <a  className=\"btn-primary\">back to rooms</a>\n                    </Link>\n                </Banner>\n            </StyledHero>\n            <section className=\"single-room\">\n                <div className=\"single-room-images\">\n                { defaultImg.map((item,index) => {\n                   return <img key={index} src={item} alt={name}/>\n                }) }\n                </div>\n                <div className=\"single-room-info\">\n                    <article className=\"description\">\n                        <h3>Details</h3>\n                        <p>{description}</p>\n                    </article>\n                    <article className=\"info\">\n                        <h3>Info</h3>\n                        <h6>price: ${price}</h6>\n                        <h6>size: ${size} sqm</h6>\n                        <h6>max capacity: {capacity} pax</h6>\n                        <h6>{pets?\"pets allows\":\"no pets allowed\"}</h6>\n                        <h6>{breakfast && \"free breakfast included\"}</h6>\n                    </article>\n                </div>\n            </section>\n            <section className=\"room-extras\">\n                <h6>extras</h6>\n                <ul className=\"extras\">\n                    {extras.map((item,index) => {\n                        return <li key={index}>- {item}</li>\n                    })}\n                </ul>\n            </section>\n            </>\n        )\n    }\n}\n\nexport default room;"]},"metadata":{},"sourceType":"module"}