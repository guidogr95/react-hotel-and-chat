{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nimport { FaAsterisk, FaIgloo } from \"react-icons/fa\";\n\nvar ChatRoomButton = /*#__PURE__*/function (_Component) {\n  _inherits(ChatRoomButton, _Component);\n\n  function ChatRoomButton(props) {\n    var _this;\n\n    _classCallCheck(this, ChatRoomButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatRoomButton).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState({\n        checked: !_this.state.checked\n      });\n\n      var target = event.target;\n\n      if (target.checked) {\n        _this.props.check(_this.props.room);\n      } else {\n        _this.props.uncheck(_this.props.room);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChatSwitch\", function () {\n      _this.props.onClick(_this.props.room.id);\n\n      _this.props.setChatListActive();\n    });\n\n    _this.state = {\n      checked: false\n    };\n    return _this;\n  }\n\n  _createClass(ChatRoomButton, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.checkAll !== this.props.checkAll) {\n        if (this.props.checkAll && this.state.checked) {} else if (this.props.checkAll && !this.state.checked) {\n          this.setState({\n            checked: !this.state.checked\n          });\n        } else if (!this.props.checkAll && this.state.checked) {\n          this.setState({\n            checked: !this.state.checked\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dateRaw = this.props.room.id;\n      var Date = dateRaw.slice(0, 10);\n      var Time = dateRaw.slice(11, 16);\n      var id = this.props.room.id.replace(/\\s/g, '');\n      return __jsx(React.Fragment, null, __jsx(\"li\", {\n        onClick: this.handleChatSwitch,\n        className: this.context.activeWindow === this.props.room.id ? \"chat-room active\" : \"chat-room\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: this.props.room.id,\n        id: id,\n        checked: this.state.checked,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        htmlFor: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"chat-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.room.name), this.props.room.unreadCount > 0 ? __jsx(FaAsterisk, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }) : ''), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, Date, \" \", Time))));\n    }\n  }]);\n\n  return ChatRoomButton;\n}(Component);\n\n_defineProperty(ChatRoomButton, \"contextType\", RoomContext);\n\nexport { ChatRoomButton as default };","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js"],"names":["Component","RoomContext","FaAsterisk","FaIgloo","ChatRoomButton","props","event","setState","checked","state","target","check","room","uncheck","onClick","id","setChatListActive","prevProps","checkAll","dateRaw","Date","slice","Time","replace","handleChatSwitch","context","activeWindow","handleChange","name","unreadCount"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\nimport { FaAsterisk, FaIgloo } from \"react-icons/fa\";\n\n\nexport default class ChatRoomButton extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            checked: false\n        }\n    }\n\n    handleChange = event => {\n        this.setState({ checked: !this.state.checked })\n        const target = event.target;\n        if(target.checked) {\n            this.props.check(this.props.room)\n        } else {\n            this.props.uncheck(this.props.room)\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n\n        if (prevProps.checkAll !== this.props.checkAll) {\n            if ( this.props.checkAll && this.state.checked ) {\n            } else if ( this.props.checkAll && !this.state.checked ) {\n                this.setState({ checked: !this.state.checked })\n            } else if ( !this.props.checkAll && this.state.checked ) {\n                this.setState({ checked: !this.state.checked })\n            }\n        }\n        \n    }\n\n    handleChatSwitch = () => {\n        this.props.onClick(this.props.room.id);\n        this.props.setChatListActive();\n    }\n    \n    render() {\n        const dateRaw = this.props.room.id\n        const Date = dateRaw.slice(0,10)\n        const Time = dateRaw.slice(11,16)\n        const id  = this.props.room.id.replace(/\\s/g,'')\n        return (\n            <>\n            <li onClick={this.handleChatSwitch} className={ this.context.activeWindow === this.props.room.id ? \"chat-room active\" : \"chat-room\" }>\n                <input type=\"checkbox\" name={this.props.room.id} id={id} checked={this.state.checked} onChange={this.handleChange}/>\n                <label htmlFor={id}></label>\n                <div className=\"chat-info\">\n                    <div>\n                        <h5>{this.props.room.name}</h5>\n                        {this.props.room.unreadCount > 0 ? <FaAsterisk/> : ''}\n                    </div>\n                    <p>{Date} {Time}</p>\n                </div>\n            </li>\n        </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}