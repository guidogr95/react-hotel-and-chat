{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport UsernameForm from './UsernameForm';\nimport ChatScreen from './ChatScreen';\nimport ChatScreenDisplay from './ChatScreenDisplay';\nimport axios from 'axios';\nimport { RoomContext } from '../context';\nimport format from 'date-format';\nimport { MdChat, MdClear } from \"react-icons/md\";\nexport default class ChatComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", username => {\n      const dateRaw = format.asString(new Date());\n      const date = dateRaw.slice(0, 10);\n      const time = dateRaw.slice(11, 19);\n      axios({\n        url: 'https://express-login.now.sh/chat/users',\n        method: 'POST',\n        data: JSON.stringify({\n          username,\n          date: `${date} ${time}`\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        console.log(res.data.userId);\n        console.log('success');\n        this.setState({\n          currentUsername: username,\n          currentScreen: 'ChatScreen',\n          userId: res.data.userId\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n\n    _defineProperty(this, \"toggleModal\", () => {\n      this.setState({\n        modalShow: !this.state.modalShow\n      });\n    });\n\n    this.state = {\n      currentScreen: 'WhatIsYourUsernameScreen',\n      currentUsername: '',\n      userId: '',\n      modalShow: false\n    };\n  }\n\n  render() {\n    if (this.context.authenticated || this.context.authenticated === null) {\n      return __jsx(\"div\", null);\n    } else {\n      return __jsx(\"div\", {\n        className: \"chat-component chat-icon\"\n      }, __jsx(\"div\", {\n        className: \"chat-component-wrapper\"\n      }, __jsx(ChatScreenDisplay, {\n        show: this.state.modalShow,\n        onSubmit: this.handleSubmit,\n        currentScreen: this.state.currentScreen,\n        currentUsername: this.state.currentUsername,\n        userId: this.state.userId\n      }), __jsx(\"div\", {\n        className: \"chat-icon-wrapper\",\n        onClick: this.toggleModal\n      }, __jsx(\"div\", {\n        className: \"modal-icon\"\n      }, __jsx(MdClear, {\n        className: this.state.modalShow ? \"cross\" : \"cross hide\"\n      })), __jsx(\"div\", {\n        className: \"modal-icon\"\n      }, __jsx(MdChat, {\n        className: this.state.modalShow ? \"chat hide\" : \"chat\"\n      })))));\n    }\n  }\n\n}\n\n_defineProperty(ChatComponent, \"contextType\", RoomContext);","map":null,"metadata":{},"sourceType":"module"}