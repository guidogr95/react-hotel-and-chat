{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatBoard.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport ChatInstance from './ChatInstance';\n\nvar ChatBoard = /*#__PURE__*/function (_Component) {\n  _inherits(ChatBoard, _Component);\n\n  function ChatBoard(props) {\n    var _this;\n\n    _classCallCheck(this, ChatBoard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatBoard).call(this, props));\n    _this.state = {\n      currentUser: _this.props.currentUser\n    };\n    return _this;\n  }\n\n  _createClass(ChatBoard, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.currentUser !== this.props.currentUser) {\n        this.setState({\n          currentUser: this.props.currentUser\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentUser = this.state.currentUser;\n      return __jsx(\"div\", {\n        className: \"chat-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, currentUser && currentUser !== null ? _Object$values(currentUser.rooms).map(function (room) {\n        if (room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4') {\n          return __jsx(ChatInstance, {\n            id: room.id,\n            key: room.id,\n            roomInfo: room,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          });\n        }\n      }) : 'Loading');\n    }\n  }]);\n\n  return ChatBoard;\n}(Component);\n\nexport { ChatBoard as default };","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatBoard.js"],"names":["React","Component","ChatInstance","ChatBoard","props","state","currentUser","prevProps","setState","rooms","map","room","id"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;IAEqBC,S;;;AACjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,MAAKF,KAAL,CAAWE;AADf,KAAb;AAFe;AAKlB;;;;uCAEkBC,S,EAAW;AAC1B,UAAKA,SAAS,CAACD,WAAV,KAA0B,KAAKF,KAAL,CAAWE,WAA1C,EAAwD;AACpD,aAAKE,QAAL,CAAc;AACVF,UAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE;AADd,SAAd;AAGH;AACJ;;;6BACQ;AAAA,UACGA,WADH,GACmB,KAAKD,KADxB,CACGC,WADH;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQA,WAAW,IAAIA,WAAW,KAAK,IAA/B,GACA,eAAcA,WAAW,CAACG,KAA1B,EAAiCC,GAAjC,CAAqC,UAACC,IAAD,EAAU;AAC3C,YAAKA,IAAI,CAACC,EAAL,KAAY,sCAAjB,EAA0D;AACtD,iBAAO,MAAC,YAAD;AAAc,YAAA,EAAE,EAAED,IAAI,CAACC,EAAvB;AAA2B,YAAA,GAAG,EAAED,IAAI,CAACC,EAArC;AAAyC,YAAA,QAAQ,EAAED,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ,OAJD,CADA,GAKK,SAPb,CADJ;AAYH;;;;EA7BkCV,S;;SAAlBE,S","sourcesContent":["import React, { Component } from 'react'\nimport ChatInstance from './ChatInstance'\n\nexport default class ChatBoard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentUser: this.props.currentUser\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if ( prevProps.currentUser !== this.props.currentUser ) {\n            this.setState({\n                currentUser: this.props.currentUser\n            })\n        }\n    }\n    render() {\n        const { currentUser } = this.state\n        return (\n            <div className=\"chat-board\">\n                {\n                    currentUser && currentUser !== null ?\n                    Object.values(currentUser.rooms).map((room) => {\n                        if ( room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4' ) {\n                            return <ChatInstance id={room.id} key={room.id} roomInfo={room}  />\n                        }\n                    }) : 'Loading'\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}