{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nexport default class ChatList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"switchChat\", event => {\n      this.context.changeWindow(event.target.value);\n    });\n\n    this.state = {\n      activeWindow: ''\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentUser !== this.props.currentUser && this.props.currentUser !== null && this.props.currentUser.rooms.length > 1) {\n      const chatWindow = this.props.currentUser.rooms.find(room => room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4');\n      console.log(chatWindow.id);\n      this.context.changeWindow(this.props.currentUser.rooms[1].id);\n    }\n  }\n\n  render() {\n    const {\n      currentUser\n    } = this.props;\n    return __jsx(\"ul\", {\n      className: \"chatrooms-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, currentUser ? Object.values(currentUser.rooms).map((room, index) => {\n      if (room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4') {\n        return __jsx(\"li\", {\n          key: room.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          value: room.id,\n          onClick: this.switchChat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, room.id));\n      }\n    }) : 'Loading...');\n  }\n\n}\n\n_defineProperty(ChatList, \"contextType\", RoomContext);","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatList.js"],"names":["Component","RoomContext","ChatList","constructor","props","event","context","changeWindow","target","value","state","activeWindow","componentDidUpdate","prevProps","currentUser","rooms","length","chatWindow","find","room","id","console","log","render","Object","values","map","index","switchChat"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAE5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,wCAgBLC,KAAD,IAAW;AACpB,WAAKC,OAAL,CAAaC,YAAb,CAA0BF,KAAK,CAACG,MAAN,CAAaC,KAAvC;AACH,KAlBkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAE1B,QAAMA,SAAS,CAACC,WAAV,KAA0B,KAAKV,KAAL,CAAWU,WAAtC,IAAsD,KAAKV,KAAL,CAAWU,WAAX,KAA2B,IAAjF,IAAyF,KAAKV,KAAL,CAAWU,WAAX,CAAuBC,KAAvB,CAA6BC,MAA7B,GAAsC,CAApI,EAAuI;AACnI,YAAMC,UAAU,GAAG,KAAKb,KAAL,CAAWU,WAAX,CAAuBC,KAAvB,CAA6BG,IAA7B,CAAkCC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAY,sCAAtD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,UAAU,CAACG,EAAvB;AACA,WAAKd,OAAL,CAAaC,YAAb,CAA0B,KAAKH,KAAL,CAAWU,WAAX,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgCK,EAA1D;AACH;AACJ;;AAMDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA;AAAF,QAAkB,KAAKV,KAA7B;AACA,WACI;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIU,WAAW,GACXU,MAAM,CAACC,MAAP,CAAcX,WAAW,CAACC,KAA1B,EAAiCW,GAAjC,CAAqC,CAACP,IAAD,EAAOQ,KAAP,KAAiB;AAClD,UAAKR,IAAI,CAACC,EAAL,KAAY,sCAAjB,EAA0D;AACtD,eACI;AAAI,UAAA,GAAG,EAAED,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,KAAK,EAAED,IAAI,CAACC,EAApB;AAAwB,UAAA,OAAO,EAAE,KAAKQ,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoDT,IAAI,CAACC,EAAzD,CADJ,CADJ;AAKH;AACJ,KARD,CADW,GASN,YAXT,CADJ;AAgBH;;AAxC2C;;gBAA3BlB,Q,iBACID,W","sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\n\nexport default class ChatList extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeWindow: ''\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        \n        if ( (prevProps.currentUser !== this.props.currentUser) && this.props.currentUser !== null && this.props.currentUser.rooms.length > 1) {\n            const chatWindow = this.props.currentUser.rooms.find(room => room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4' )\n            console.log(chatWindow.id)\n            this.context.changeWindow(this.props.currentUser.rooms[1].id)\n        }\n    }\n\n    switchChat = (event) => {\n        this.context.changeWindow(event.target.value)\n    }\n\n    render() {\n        const { currentUser } = this.props\n        return (\n            <ul className=\"chatrooms-container\">\n            {\n                currentUser ?\n                Object.values(currentUser.rooms).map((room, index) => {\n                    if ( room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4' ) {\n                        return (\n                            <li key={room.id}>\n                                <button value={room.id} onClick={this.switchChat} >{room.id}</button>\n                            </li>\n                        )\n                    }\n                }) : 'Loading...'\n            }\n            </ul>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}