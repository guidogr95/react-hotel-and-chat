{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nimport { FaAsterisk, FaIgloo } from \"react-icons/fa\";\nexport default class ChatRoomButton extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        checked: !this.state.checked\n      });\n      const target = event.target;\n\n      if (target.checked) {\n        this.props.check(this.props.room);\n      } else {\n        this.props.uncheck(this.props.room);\n      }\n    });\n\n    _defineProperty(this, \"handleChatSwitch\", () => {\n      this.props.onClick(this.props.room.id);\n      this.props.setChatListActive();\n    });\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.checkAll !== this.props.checkAll) {\n      if (this.props.checkAll && this.state.checked) {} else if (this.props.checkAll && !this.state.checked) {\n        this.setState({\n          checked: !this.state.checked\n        });\n      } else if (!this.props.checkAll && this.state.checked) {\n        this.setState({\n          checked: !this.state.checked\n        });\n      }\n    }\n  }\n\n  render() {\n    const dateRaw = this.props.room.id;\n    const Date = dateRaw.slice(0, 10);\n    const Time = dateRaw.slice(11, 16);\n    const id = this.props.room.id.replace(/\\s/g, '');\n    return __jsx(React.Fragment, null, __jsx(\"li\", {\n      onClick: this.handleChatSwitch,\n      className: this.context.activeWindow === this.props.room.id ? \"chat-room active\" : \"chat-room\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: this.props.room.id,\n      id: id,\n      checked: this.state.checked,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"chat-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.room.name), this.props.room.unreadCount > 0 ? __jsx(FaAsterisk, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }) : ''), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, Date, \" \", Time))));\n  }\n\n}\n\n_defineProperty(ChatRoomButton, \"contextType\", RoomContext);","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js"],"names":["Component","RoomContext","FaAsterisk","FaIgloo","ChatRoomButton","constructor","props","event","setState","checked","state","target","check","room","uncheck","onClick","id","setChatListActive","componentDidUpdate","prevProps","checkAll","render","dateRaw","Date","slice","Time","replace","handleChatSwitch","context","activeWindow","handleChange","name","unreadCount"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\nimport { FaAsterisk, FaIgloo } from \"react-icons/fa\";\n\n\nexport default class ChatRoomButton extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            checked: false\n        }\n    }\n\n    handleChange = event => {\n        this.setState({ checked: !this.state.checked })\n        const target = event.target;\n        if(target.checked) {\n            this.props.check(this.props.room)\n        } else {\n            this.props.uncheck(this.props.room)\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n\n        if (prevProps.checkAll !== this.props.checkAll) {\n            if ( this.props.checkAll && this.state.checked ) {\n            } else if ( this.props.checkAll && !this.state.checked ) {\n                this.setState({ checked: !this.state.checked })\n            } else if ( !this.props.checkAll && this.state.checked ) {\n                this.setState({ checked: !this.state.checked })\n            }\n        }\n        \n    }\n\n    handleChatSwitch = () => {\n        this.props.onClick(this.props.room.id);\n        this.props.setChatListActive();\n    }\n    \n    render() {\n        const dateRaw = this.props.room.id\n        const Date = dateRaw.slice(0,10)\n        const Time = dateRaw.slice(11,16)\n        const id  = this.props.room.id.replace(/\\s/g,'')\n        return (\n            <>\n            <li onClick={this.handleChatSwitch} className={ this.context.activeWindow === this.props.room.id ? \"chat-room active\" : \"chat-room\" }>\n                <input type=\"checkbox\" name={this.props.room.id} id={id} checked={this.state.checked} onChange={this.handleChange}/>\n                <label htmlFor={id}></label>\n                <div className=\"chat-info\">\n                    <div>\n                        <h5>{this.props.room.name}</h5>\n                        {this.props.room.unreadCount > 0 ? <FaAsterisk/> : ''}\n                    </div>\n                    <p>{Date} {Time}</p>\n                </div>\n            </li>\n        </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}