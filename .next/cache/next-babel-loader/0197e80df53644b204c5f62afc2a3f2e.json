{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nimport jwt from 'jsonwebtoken';\nimport axios from 'axios';\nimport RSC from 'react-scrollbars-custom';\nexport default class ChatList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"useForceUpdate\", () => {\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    });\n\n    _defineProperty(this, \"switchChat\", event => {\n      this.context.changeWindow(event.target.value);\n    });\n\n    _defineProperty(this, \"addCheckedChat\", chatRoom => {\n      this.setState({\n        checkedChats: [...this.state.checkedChats, chatRoom]\n      });\n    });\n\n    _defineProperty(this, \"removeCheckedChat\", chatRoom => {\n      const filtered = this.state.checkedChats.filter(room => room.id !== chatRoom.id);\n      this.setState({\n        checkedChats: filtered\n      });\n    });\n\n    _defineProperty(this, \"deleteChats\", () => {\n      const length = this.state.checkedChats.length;\n      let loop = 0;\n      this.state.checkedChats.map(chat => {\n        try {\n          const token = this.getToken();\n          axios({\n            url: `https://us1.pusherplatform.io/services/chatkit_scheduler/v1/fe088103-8b4d-4e06-a93c-4d2fb3f963be/users/${chat.createdByUserId}`,\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n          }).then(res => console.log(res)).catch(err => console.log(err));\n        } catch (err) {\n          console.log(err);\n        }\n\n        this.context.currentUser.deleteRoom({\n          roomId: chat.id\n        }).then(() => {\n          console.log(`Deleted room with ID: ${chat.id}`);\n          this.setState({\n            checkAll: false\n          });\n          loop += 1;\n\n          if (loop === length) {\n            this.setState({\n              checkedChats: []\n            });\n          }\n        }).catch(err => {\n          console.log(`Error deleted room ${chat.id}: ${err}`);\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleCheckAll\", () => {\n      const isCheckAll = !this.state.checkAll;\n      this.setState({\n        checkAll: !this.state.checkAll\n      });\n\n      if (isCheckAll) {\n        const allRooms = this.context.currentUser.rooms.filter(room => room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45');\n        this.setState({\n          checkedChats: allRooms\n        });\n      } else {\n        this.setState({\n          checkedChats: []\n        });\n      }\n    });\n\n    _defineProperty(this, \"getToken\", userId => {\n      const token = jwt.sign({\n        instance: 'fe088103-8b4d-4e06-a93c-4d2fb3f963be',\n        iss: 'api_keys/d6b63c39-9c58-459d-a34b-a8d39eb6124d',\n        sub: userId,\n        su: true\n      }, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=', {\n        expiresIn: '1h'\n      });\n      return token;\n    });\n\n    this.state = {\n      activeWindow: '',\n      checkedChats: [],\n      checkAll: false,\n      loaded: false\n    };\n  }\n\n  componentDidUpdate() {\n    if (Object.keys(this.context.currentUser).length > 0 && !this.state.loaded) {\n      const chatWindow = this.context.currentUser.rooms.find(room => room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45');\n\n      if (!chatWindow) {} else {\n        this.context.changeWindow(chatWindow.id);\n      }\n\n      this.setState({\n        loaded: true\n      });\n    }\n\n    if (this.state.checkedChats.length === 0 && this.state.checkAll) {\n      this.setState({\n        checkAll: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      currentUser\n    } = this.context;\n    return __jsx(\"div\", {\n      className: \"chat-list-container\"\n    }, __jsx(\"div\", {\n      className: \"chat-list-settings\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"checkAll\",\n      id: \"chat-checkbox\",\n      checked: this.state.checkAll,\n      onChange: this.handleCheckAll\n    }), __jsx(\"label\", {\n      htmlFor: \"chat-checkbox\"\n    }), __jsx(\"button\", {\n      className: \"btn-primary\",\n      onClick: this.deleteChats\n    }, \"Delete Chats\")), __jsx(RSC, {\n      className: \"chatlist-box\"\n    }, __jsx(\"ul\", {\n      className: \"chatrooms-container\"\n    }, Object.keys(currentUser).length > 0 ? Object.values(currentUser.rooms).map(room => {\n      if (room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45') {\n        return __jsx(ChatRoomButton, {\n          key: room.id,\n          room: room,\n          checkAll: this.state.checkAll,\n          onClick: this.switchChat,\n          check: this.addCheckedChat,\n          uncheck: this.removeCheckedChat\n        });\n      }\n    }) : 'Loading...')));\n  }\n\n}\n\n_defineProperty(ChatList, \"contextType\", RoomContext);","map":null,"metadata":{},"sourceType":"module"}