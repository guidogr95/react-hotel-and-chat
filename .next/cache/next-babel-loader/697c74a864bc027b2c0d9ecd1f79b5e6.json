{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nimport jwt from 'jsonwebtoken';\nimport axios from 'axios';\nimport RSC from 'react-scrollbars-custom';\n\nvar ChatList = /*#__PURE__*/function (_Component) {\n  _inherits(ChatList, _Component);\n\n  function ChatList(props) {\n    var _this;\n\n    _classCallCheck(this, ChatList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"useForceUpdate\", function () {\n      _this.setState({\n        counter: _this.state.counter + 1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"switchChat\", function (event) {\n      _this.context.changeWindow(event.target.value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addCheckedChat\", function (chatRoom) {\n      _this.setState({\n        checkedChats: [].concat(_toConsumableArray(_this.state.checkedChats), [chatRoom])\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeCheckedChat\", function (chatRoom) {\n      var filtered = _this.state.checkedChats.filter(function (room) {\n        return room.id !== chatRoom.id;\n      });\n\n      _this.setState({\n        checkedChats: filtered\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteChats\", function () {\n      var length = _this.state.checkedChats.length;\n      var loop = 0;\n\n      _this.state.checkedChats.map(function (chat) {\n        try {\n          var token = _this.getToken();\n\n          axios({\n            url: \"https://us1.pusherplatform.io/services/chatkit_scheduler/v1/fe088103-8b4d-4e06-a93c-4d2fb3f963be/users/\".concat(chat.createdByUserId),\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"Bearer \".concat(token)\n            }\n          }).then(function (res) {\n            return console.log(res);\n          })[\"catch\"](function (err) {\n            return console.log(err);\n          });\n        } catch (err) {\n          console.log(err);\n        }\n\n        _this.context.currentUser.deleteRoom({\n          roomId: chat.id\n        }).then(function () {\n          console.log(\"Deleted room with ID: \".concat(chat.id));\n\n          _this.setState({\n            checkAll: false\n          });\n\n          loop += 1;\n\n          if (loop === length) {\n            _this.setState({\n              checkedChats: []\n            });\n          }\n        })[\"catch\"](function (err) {\n          console.log(\"Error deleted room \".concat(chat.id, \": \").concat(err));\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCheckAll\", function () {\n      var isCheckAll = !_this.state.checkAll;\n\n      _this.setState({\n        checkAll: !_this.state.checkAll\n      });\n\n      if (isCheckAll) {\n        var allRooms = _this.context.currentUser.rooms.filter(function (room) {\n          return room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45';\n        });\n\n        _this.setState({\n          checkedChats: allRooms\n        });\n      } else {\n        _this.setState({\n          checkedChats: []\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getToken\", function (userId) {\n      var token = jwt.sign({\n        instance: 'fe088103-8b4d-4e06-a93c-4d2fb3f963be',\n        iss: 'api_keys/d6b63c39-9c58-459d-a34b-a8d39eb6124d',\n        sub: userId,\n        su: true\n      }, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=', {\n        expiresIn: '1h'\n      });\n      return token;\n    });\n\n    _this.state = {\n      activeWindow: '',\n      checkedChats: [],\n      checkAll: false,\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(ChatList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (_Object$keys(this.context.currentUser).length > 0 && !this.state.loaded) {\n        var chatWindow = this.context.currentUser.rooms.find(function (room) {\n          return room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45';\n        });\n\n        if (!chatWindow) {} else {\n          this.context.changeWindow(chatWindow.id);\n        }\n\n        this.setState({\n          loaded: true\n        });\n      }\n\n      if (this.state.checkedChats.length === 0 && this.state.checkAll) {\n        this.setState({\n          checkAll: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var currentUser = this.context.currentUser;\n      return __jsx(\"div\", {\n        className: \"chat-list-container\"\n      }, __jsx(\"div\", {\n        className: \"chat-list-settings\"\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: \"checkAll\",\n        id: \"chat-checkbox\",\n        checked: this.state.checkAll,\n        onChange: this.handleCheckAll\n      }), __jsx(\"label\", {\n        htmlFor: \"chat-checkbox\"\n      }), __jsx(\"button\", {\n        className: \"btn-primary\",\n        onClick: this.deleteChats\n      }, \"Delete Chats\")), __jsx(RSC, {\n        className: \"chatlist-box\"\n      }, __jsx(\"ul\", {\n        className: \"chatrooms-container\"\n      }, _Object$keys(currentUser).length > 0 ? _Object$values(currentUser.rooms).map(function (room) {\n        if (room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45') {\n          return __jsx(ChatRoomButton, {\n            key: room.id,\n            room: room,\n            checkAll: _this2.state.checkAll,\n            onClick: _this2.switchChat,\n            check: _this2.addCheckedChat,\n            uncheck: _this2.removeCheckedChat\n          });\n        }\n      }) : 'Loading...')));\n    }\n  }]);\n\n  return ChatList;\n}(Component);\n\n_defineProperty(ChatList, \"contextType\", RoomContext);\n\nexport { ChatList as default };","map":null,"metadata":{},"sourceType":"module"}