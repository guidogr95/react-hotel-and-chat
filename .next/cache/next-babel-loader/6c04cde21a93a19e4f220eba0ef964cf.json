{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nimport jwt from 'jsonwebtoken';\nimport axios from 'axios';\nexport default class ChatList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"useForceUpdate\", () => {\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    });\n\n    _defineProperty(this, \"switchChat\", event => {\n      this.context.changeWindow(event.target.value);\n    });\n\n    _defineProperty(this, \"addCheckedChat\", chatRoom => {\n      this.setState({\n        checkedChats: [...this.state.checkedChats, chatRoom]\n      });\n    });\n\n    _defineProperty(this, \"removeCheckedChat\", chatRoom => {\n      const filtered = this.state.checkedChats.filter(room => room.id !== chatRoom.id);\n      this.setState({\n        checkedChats: filtered\n      });\n    });\n\n    _defineProperty(this, \"deleteChats\", () => {\n      this.state.checkedChats.map(chat => {\n        try {\n          const token = this.getToken();\n          axios({\n            url: `https://us1.pusherplatform.io/services/chatkit_scheduler/v1/fe088103-8b4d-4e06-a93c-4d2fb3f963be/users/${chat.createdByUserId}`,\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n          }).then(res => console.log(res)).catch(err => console.log(err));\n        } catch (err) {\n          console.log(err);\n        }\n\n        this.props.currentUser.deleteRoom({\n          roomId: chat.id\n        }).then(() => {\n          console.log(`Deleted room with ID: ${chat.id}`);\n          this.setState({\n            checkAll: false\n          });\n        }).catch(err => {\n          console.log(`Error deleted room ${chat.id}: ${err}`);\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleCheckAll\", () => {\n      const isCheckAll = !this.state.checkAll;\n      this.setState({\n        checkAll: !this.state.checkAll\n      });\n      console.log(isCheckAll);\n\n      if (isCheckAll) {\n        const allRooms = this.props.currentUser.rooms.filter(room => room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45');\n        this.setState({\n          checkedChats: allRooms\n        });\n      } else {\n        this.setState({\n          checkedChats: []\n        });\n      }\n    });\n\n    _defineProperty(this, \"getToken\", userId => {\n      const token = jwt.sign({\n        instance: 'fe088103-8b4d-4e06-a93c-4d2fb3f963be',\n        iss: 'api_keys/d6b63c39-9c58-459d-a34b-a8d39eb6124d',\n        sub: userId,\n        su: true\n      }, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=', {\n        expiresIn: '1h'\n      });\n      return token;\n    });\n\n    _defineProperty(this, \"seeList\", () => {\n      console.log(this.state.chatRooms);\n    });\n\n    this.state = {\n      activeWindow: '',\n      checkedChats: [],\n      checkAll: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.currentUser !== this.props.currentUser && this.props.currentUser !== null && this.props.currentUser.rooms.length > 1) {\n      const chatWindow = this.props.currentUser.rooms.find(room => room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4');\n      this.context.changeWindow(chatWindow.id);\n    }\n\n    if (this.state.checkedChats.length === 0 && this.state.checkAll) {\n      this.setState({\n        checkAll: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      currentUser\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"chat-list-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"checkAll\",\n      id: \"chat-checkbox\",\n      checked: this.state.checkAll,\n      onChange: this.handleCheckAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: this.getToken,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Delete Chats\"), __jsx(\"button\", {\n      onClick: this.deleteChats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Delete Chats\")), __jsx(\"ul\", {\n      className: \"chatrooms-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, currentUser ? Object.values(this.props.currentUser.rooms).map((room, index) => {\n      if (room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45') {\n        return __jsx(ChatRoomButton, {\n          key: index,\n          room: room,\n          see: this.seeList,\n          clearAll: this.clearAll,\n          checkAll: this.state.checkAll,\n          onClick: this.switchChat,\n          check: this.addCheckedChat,\n          uncheck: this.removeCheckedChat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        });\n      }\n    }) : 'Loading...'));\n  }\n\n}\n\n_defineProperty(ChatList, \"contextType\", RoomContext);","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatList.js"],"names":["Component","RoomContext","ChatRoomButton","jwt","axios","ChatList","constructor","props","setState","counter","state","event","context","changeWindow","target","value","chatRoom","checkedChats","filtered","filter","room","id","map","chat","token","getToken","url","createdByUserId","method","headers","then","res","console","log","catch","err","currentUser","deleteRoom","roomId","checkAll","isCheckAll","allRooms","rooms","userId","sign","instance","iss","sub","su","expiresIn","chatRooms","activeWindow","componentDidUpdate","prevProps","prevState","length","chatWindow","find","render","handleCheckAll","deleteChats","Object","values","index","seeList","clearAll","switchChat","addCheckedChat","removeCheckedChat"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nimport jwt from 'jsonwebtoken';\nimport axios from 'axios';\n\nexport default class ChatList extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeWindow: '',\n            checkedChats: [],\n            checkAll: false\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        \n        \n        if ( (prevProps.currentUser !== this.props.currentUser) && this.props.currentUser !== null && this.props.currentUser.rooms.length > 1) {\n            const chatWindow = this.props.currentUser.rooms.find(room => room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4' )\n            this.context.changeWindow(chatWindow.id)\n        }\n\n        if ( this.state.checkedChats.length === 0 && this.state.checkAll ) {\n            this.setState({ checkAll: false })\n        }\n    }\n\n    useForceUpdate = () => {\n        this.setState({counter: this.state.counter + 1})\n    }\n\n    switchChat = (event) => {\n        this.context.changeWindow(event.target.value)\n    }\n\n    addCheckedChat = (chatRoom) => {\n        this.setState({\n            checkedChats: [...this.state.checkedChats, chatRoom]\n        })\n    }\n\n    removeCheckedChat = (chatRoom) => {\n        const filtered = this.state.checkedChats.filter(room => room.id !== chatRoom.id)\n        this.setState({\n            checkedChats: filtered\n        })\n    }\n\n    deleteChats = () => {\n\n        this.state.checkedChats.map(chat => {\n            try {\n                const token = this.getToken();\n                axios({\n                    url: `https://us1.pusherplatform.io/services/chatkit_scheduler/v1/fe088103-8b4d-4e06-a93c-4d2fb3f963be/users/${chat.createdByUserId}`,\n                    method: 'put',\n                    headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`,}\n                })\n                .then(res => console.log(res))\n                .catch(err => console.log(err));\n            } catch(err) {\n                console.log(err)\n            }\n            this.props.currentUser.deleteRoom({ roomId: chat.id })\n            .then(() => {\n                console.log(`Deleted room with ID: ${chat.id}`);\n                this.setState({ checkAll: false })\n            })\n            .catch(err => {\n                console.log(`Error deleted room ${chat.id}: ${err}`)\n            })\n        })\n    }\n\n    handleCheckAll = () => {\n        const isCheckAll = !this.state.checkAll\n        this.setState({ checkAll: !this.state.checkAll })\n\n        console.log(isCheckAll)\n        if (isCheckAll)  {\n            const allRooms = this.props.currentUser.rooms.filter(room => room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45')\n            this.setState({ checkedChats: allRooms })\n        } else {\n            this.setState({ checkedChats: [] })\n        }\n    }\n\n    getToken = (userId) => {\n        const token = jwt.sign({ instance: 'fe088103-8b4d-4e06-a93c-4d2fb3f963be', iss: 'api_keys/d6b63c39-9c58-459d-a34b-a8d39eb6124d', sub: userId, su: true }, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=', { expiresIn: '1h' });\n        return token\n    }\n\n    seeList = () => {\n        console.log(this.state.chatRooms)\n    }\n\n    render() {\n        const { currentUser } = this.props\n        return (\n            <div className=\"chat-list-container\">\n                <div>\n                    <input type=\"checkbox\" name=\"checkAll\" id=\"chat-checkbox\" checked={this.state.checkAll} onChange={this.handleCheckAll}/>\n                    <button onClick={this.getToken} >Delete Chats</button>\n                    <button onClick={this.deleteChats} >Delete Chats</button>\n                </div>\n                <ul className=\"chatrooms-container\">\n\n                {\n                    currentUser ?\n                    Object.values(this.props.currentUser.rooms).map((room, index) => {\n                        if ( room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45' ) {\n                            return (\n                                <ChatRoomButton key={index} room={room} see={this.seeList} clearAll={this.clearAll} checkAll={this.state.checkAll} onClick={this.switchChat} check={this.addCheckedChat} uncheck={this.removeCheckedChat}  />\n                            )\n                        }\n                    }) : 'Loading...'\n                }\n                </ul>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}