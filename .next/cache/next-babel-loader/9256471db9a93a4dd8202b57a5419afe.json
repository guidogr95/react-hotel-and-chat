{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatComponent.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport UsernameForm from './UsernameForm';\nimport ChatScreen from './ChatScreen';\nimport axios from 'axios';\nimport { RoomContext } from '../context';\nexport default class ChatComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", username => {\n      axios({\n        url: 'http://localhost:3001/users',\n        method: 'POST',\n        data: JSON.stringify({\n          username\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        console.log(res.data.userId);\n        console.log('success');\n        this.setState({\n          currentUsername: username,\n          currentScreen: 'ChatScreen',\n          userId: res.data.userId\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n\n    _defineProperty(this, \"handleChat\", () => {\n      if (this.state.currentScreen === 'WhatIsYourUsernameScreen') {\n        return __jsx(UsernameForm, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      } else if (this.state.currentScreen === 'ChatScreen') {\n        return __jsx(ChatScreen, {\n          currentUsername: this.state.currentUsername,\n          userId: this.state.userId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      }\n    });\n\n    this.state = {\n      currentScreen: 'WhatIsYourUsernameScreen',\n      currentUsername: '',\n      userId: ''\n    };\n  }\n\n  render() {\n    if (this.context.authenticated || this.context.authenticated === null) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    } else {\n      return __jsx(\"div\", {\n        className: \"chat-component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.handleChat());\n    }\n  }\n\n}\n\n_defineProperty(ChatComponent, \"contextType\", RoomContext);","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatComponent.js"],"names":["Component","UsernameForm","ChatScreen","axios","RoomContext","ChatComponent","constructor","props","username","url","method","data","JSON","stringify","headers","then","res","console","log","userId","setState","currentUsername","currentScreen","catch","err","state","handleSubmit","render","context","authenticated","handleChat"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,eAAe,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AACjDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,0CASHC,QAAD,IAAc;AACzBL,MAAAA,KAAK,CAAC;AACFM,QAAAA,GAAG,EAAE,6BADH;AAEFC,QAAAA,MAAM,EAAE,MAFN;AAGFC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBL,UAAAA;AADiB,SAAf,CAHJ;AAMFM,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AANP,OAAD,CAAL,CAOGC,IAPH,CAOQC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,IAAJ,CAASQ,MAArB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAKE,QAAL,CAAc;AACVC,UAAAA,eAAe,EAAEb,QADP;AAEVc,UAAAA,aAAa,EAAE,YAFL;AAGVH,UAAAA,MAAM,EAAEH,GAAG,CAACL,IAAJ,CAASQ;AAHP,SAAd;AAKH,OAfD,EAeGI,KAfH,CAeSC,GAAG,IAAI;AACZP,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,OAjBD;AAkBH,KA5BkB;;AAAA,wCA8BN,MAAM;AACf,UAAK,KAAKC,KAAL,CAAWH,aAAX,KAA6B,0BAAlC,EAA+D;AAC3D,eAAO,MAAC,YAAD;AAAc,UAAA,QAAQ,EAAE,KAAKI,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,MAEO,IAAK,KAAKD,KAAL,CAAWH,aAAX,KAA6B,YAAlC,EAAiD;AACpD,eAAO,MAAC,UAAD;AAAY,UAAA,eAAe,EAAE,KAAKG,KAAL,CAAWJ,eAAxC;AAAyD,UAAA,MAAM,EAAE,KAAKI,KAAL,CAAWN,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ,KApCkB;;AAEf,SAAKM,KAAL,GAAY;AACRH,MAAAA,aAAa,EAAE,0BADP;AAERD,MAAAA,eAAe,EAAE,EAFT;AAGRF,MAAAA,MAAM,EAAE;AAHA,KAAZ;AAKH;;AA+BDQ,EAAAA,MAAM,GAAG;AACL,QAAK,KAAKC,OAAL,CAAaC,aAAb,IAA8B,KAAKD,OAAL,CAAaC,aAAb,KAA+B,IAAlE,EAAyE;AACrE,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH,KAFD,MAEO;AACH,aACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,UAAL,EADL,CADJ;AAKH;AACJ;;AAjDgD;;gBAAhCzB,a,iBASID,W","sourcesContent":["import { Component } from 'react'\nimport UsernameForm from './UsernameForm'\nimport ChatScreen from './ChatScreen'\nimport axios from 'axios'\nimport { RoomContext } from '../context';\n\nexport default class ChatComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state= {\n            currentScreen: 'WhatIsYourUsernameScreen',\n            currentUsername: '',\n            userId: ''\n        }\n    }\n    static contextType = RoomContext;\n    handleSubmit = (username) => {\n        axios({\n            url: 'http://localhost:3001/users',\n            method: 'POST',\n            data: JSON.stringify({\n                username\n            }),\n            headers: { 'Content-Type': 'application/json' }\n        }).then(res => {\n            console.log(res.data.userId)\n            console.log('success')\n            this.setState({\n                currentUsername: username,\n                currentScreen: 'ChatScreen',\n                userId: res.data.userId\n            })\n        }).catch(err => {\n            console.log(err);  \n        })\n    }\n    \n    handleChat = () => {\n        if ( this.state.currentScreen === 'WhatIsYourUsernameScreen' ) {\n            return <UsernameForm onSubmit={this.handleSubmit}/>         \n        } else if ( this.state.currentScreen === 'ChatScreen' ) {\n            return <ChatScreen currentUsername={this.state.currentUsername} userId={this.state.userId} />\n        }\n    }\n    \n    render() {\n        if ( this.context.authenticated || this.context.authenticated === null ) {\n            return (<div></div>)\n        } else {\n            return (\n                <div className=\"chat-component\">\n                    {this.handleChat()}\n                </div>\n            )\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}