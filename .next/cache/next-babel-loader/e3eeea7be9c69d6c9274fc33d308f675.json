{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/context.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport items from './data';\nimport axios from 'axios';\nconst RoomContext = React.createContext(); // \n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false\n    });\n\n    _defineProperty(this, \"formatData\", items => {\n      let tempItems = items.data.map(item => {\n        let id = item.id;\n        let images = item.images.map(image => image.url);\n\n        let room = _objectSpread({}, item, {\n          images,\n          id\n        });\n\n        return room;\n      });\n      return tempItems;\n    });\n\n    _defineProperty(this, \"getRoom\", slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms); //callback function ^\n    });\n\n    _defineProperty(this, \"filterRooms\", () => {\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        minSize,\n        maxSize,\n        breakfast,\n        pets\n      } = this.state; //all the rooms\n\n      let tempRooms = [...rooms]; //transform value\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); //filter by type\n\n      if (type !== 'all') {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } //filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } //filter by price\n\n\n      tempRooms = tempRooms.filter(room => room.price <= price); //filter extras\n\n      if (breakfast) {\n        tempRooms = tempRooms.filter(room => room.breakfast === true);\n      }\n\n      if (pets) {\n        tempRooms = tempRooms.filter(room => room.pets === true);\n      }\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    });\n  }\n\n  componentDidMount() {\n    const self = this;\n    const APITOKEN = 'f3341f2f85860e06446a5e86bfd392';\n    axios({\n      url: 'https://graphql.datocms.com/',\n      method: 'post',\n      data: {\n        query: `\n                allRooms {\n                    name\n                    slug\n                    price\n                    roomtype\n                    size\n                    capacity\n                    breakfast\n                    pets\n                    featured\n                    description\n                    extras\n                    images {\n                      url\n                    }\n                  }\n                `\n      },\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `Bearer ${APITOKEN}`\n      }\n    }).then(function (response) {\n      // handle success\n      console.log(response);\n      let rooms = self.formatData(response.data.allRooms);\n      let featuredRooms = rooms.filter(room => room.featured === true);\n      let maxPrice = Math.max(...rooms.map(item => item.price));\n      let maxSize = Math.max(...rooms.map(item => item.size));\n      self.setState({\n        rooms,\n        featuredRooms,\n        sortedRooms: rooms,\n        loading: false,\n        price: maxPrice,\n        maxPrice,\n        maxSize\n      });\n      return rooms;\n    }).catch(error => {\n      console.log(error);\n    }); // let rooms = this.formatData(items);\n    // let featuredRooms = rooms.filter(room => room.featured === true);\n    // let maxPrice = Math.max(...rooms.map(item => item.price));\n    // let maxSize = Math.max(...rooms.map(item => item.size));\n    // this.setState({\n    //     rooms,\n    //     featuredRooms,\n    //     sortedRooms: rooms,\n    //     loading: false,\n    //     price: maxPrice,\n    //     maxPrice,\n    //     maxSize\n    // })\n  }\n\n  render() {\n    return __jsx(RoomContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return __jsx(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, value => __jsx(Component, _extends({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/context.js"],"names":["React","Component","items","axios","RoomContext","createContext","RoomProvider","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","tempItems","data","map","item","id","images","image","url","room","slug","tempRooms","state","find","event","target","value","checked","name","setState","filterRooms","pets","parseInt","filter","componentDidMount","self","APITOKEN","method","query","headers","then","response","console","log","formatData","allRooms","featured","Math","max","size","catch","error","render","getRoom","handleChange","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport items from './data';\nimport axios from 'axios'\n\nconst RoomContext = React.createContext();\n// \n\nclass RoomProvider extends Component {\n    state={\n        rooms: [],\n        sortedRooms: [],\n        featuredRooms: [],\n        loading: true,\n        type:'all',\n        capacity:1,\n        price:0,\n        minPrice: 0,\n        maxPrice: 0,\n        minSize: 0,\n        maxSize: 0,\n        breakfast: false,\n    }\n    componentDidMount(){\n        const self = this;\n        const APITOKEN = 'f3341f2f85860e06446a5e86bfd392';\n        axios({\n            url: 'https://graphql.datocms.com/',\n            method: 'post',\n            data: {\n              query: `\n                allRooms {\n                    name\n                    slug\n                    price\n                    roomtype\n                    size\n                    capacity\n                    breakfast\n                    pets\n                    featured\n                    description\n                    extras\n                    images {\n                      url\n                    }\n                  }\n                `\n            },\n            headers: { 'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': `Bearer ${APITOKEN}`,}\n          })\n        .then(function (response) {\n          // handle success\n          console.log(response)\n          let rooms = self.formatData(response.data.allRooms);\n          let featuredRooms = rooms.filter(room => room.featured === true);\n            let maxPrice = Math.max(...rooms.map(item => item.price));\n            let maxSize = Math.max(...rooms.map(item => item.size));\n            self.setState({\n                rooms,\n                featuredRooms,\n                sortedRooms: rooms,\n                loading: false,\n                price: maxPrice,\n                maxPrice,\n                maxSize\n            })\n          return rooms\n        }).catch(error => {\n            console.log(error)\n        })\n        // let rooms = this.formatData(items);\n        // let featuredRooms = rooms.filter(room => room.featured === true);\n        // let maxPrice = Math.max(...rooms.map(item => item.price));\n        // let maxSize = Math.max(...rooms.map(item => item.size));\n        // this.setState({\n        //     rooms,\n        //     featuredRooms,\n        //     sortedRooms: rooms,\n        //     loading: false,\n        //     price: maxPrice,\n        //     maxPrice,\n        //     maxSize\n        // })\n    }\n    formatData = (items) => {\n        let tempItems = items.data.map(item => {\n            let id = item.id;\n            let images = item.images.map(image => image.url);\n            let room = {...item,images,id};\n            return room;\n        });\n        return tempItems;\n    }\n    getRoom = (slug) => {\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find(room => room.slug === slug);\n        return room;\n    }\n    handleChange = event => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked :\n        target.value\n        const name = event.target.name;\n        this.setState({\n            [name]: value\n        },this.filterRooms)\n        //callback function ^\n    }\n    filterRooms = () => {\n        let {\n            rooms,type,capacity,price,minSize,maxSize,breakfast,pets\n        } = this.state\n        //all the rooms\n        let tempRooms = [...rooms];\n        //transform value\n        capacity = parseInt(capacity);\n        price = parseInt(price);\n        //filter by type\n        if (type !== 'all') {\n            tempRooms = tempRooms.filter(room => room.type === type)\n        }\n        //filter by capacity\n        if (capacity !== 1) {\n            tempRooms = tempRooms.filter(room => room.capacity >= capacity)\n        }\n        //filter by price\n        tempRooms= tempRooms.filter(room => room.price <= price )\n        //filter extras\n        if ( breakfast ) {\n            tempRooms = tempRooms.filter(room => room.breakfast === true)\n        }\n        if ( pets ) {\n            tempRooms = tempRooms.filter(room => room.pets === true)\n        }\n        this.setState({\n            sortedRooms: tempRooms\n        })\n    }\n    render() {\n        return (\n            <RoomContext.Provider \n                value={{\n                    ...this.state,\n                    getRoom: this.getRoom,\n                    handleChange: this.handleChange\n                }}\n            >\n                {this.props.children}\n            </RoomContext.Provider>\n        )\n    }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component) {\n    return function ConsumerWrapper(props) {\n        return <RoomConsumer>\n            {value => <Component {...props} context={value}/>}\n        </RoomConsumer>\n    }\n}\n\nexport{ RoomProvider, RoomConsumer, RoomContext };\n"]},"metadata":{},"sourceType":"module"}