{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/MessageList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nexport default class MessageList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"mapMessages\", messages => {\n      console.log(this.props.messages);\n      messages.map((message, index) => {\n        return __jsx(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, message.senderId), __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, message.text)));\n      });\n    });\n\n    this.state = {\n      messages: this.props.messages\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.messages !== this.props.messages) {\n      this.setState({\n        messages: this.props.messages\n      });\n    }\n  }\n\n  render() {\n    return __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.mapMessages(this.state.messages));\n  }\n\n}","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/MessageList.js"],"names":["Component","MessageList","constructor","props","messages","console","log","map","message","index","senderId","text","state","componentDidUpdate","prevProps","setState","render","mapMessages"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,eAAe,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAC/CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,yCAaJC,QAAD,IAAc;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWC,QAAvB;AACAA,MAAAA,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC7B,eACI;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOD,OAAO,CAACE,QAAf,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIF,OAAO,CAACG,IAAZ,CAFJ,CADJ,CADJ;AAQH,OATD;AAUH,KAzBkB;;AAEf,SAAKC,KAAL,GAAY;AACRR,MAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AADb,KAAZ;AAGH;;AACDS,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAIA,SAAS,CAACV,QAAV,KAAuB,KAAKD,KAAL,CAAWC,QAAtC,EAAgD;AAC5C,WAAKW,QAAL,CAAc;AACVX,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AADX,OAAd;AAGH;AACJ;;AAeDY,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,WAAL,CAAiB,KAAKL,KAAL,CAAWR,QAA5B,CADL,CADJ;AAKH;;AAlC8C","sourcesContent":["import { Component } from 'react'\n\nexport default class MessageList extends Component {\n    constructor(props) {\n        super(props)\n        this.state= {\n            messages: this.props.messages\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.messages !== this.props.messages) {\n            this.setState({\n                messages: this.props.messages\n            })\n        }\n    }\n    mapMessages = (messages) => {\n        console.log(this.props.messages)\n        messages.map((message, index) => {\n            return (\n                <li key={index}>\n                    <div>\n                        <span>{message.senderId}</span>\n                        <p>{message.text}</p>\n                    </div>\n                </li>\n            )\n        })\n    }\n    \n    render() {\n        return (\n            <ul>\n                {this.mapMessages(this.state.messages)}\n            </ul>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}