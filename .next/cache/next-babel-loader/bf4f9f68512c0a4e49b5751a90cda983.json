{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nexport default class ChatList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"switchChat\", event => {\n      this.context.changeWindow(event.target.value);\n    });\n\n    this.state = {\n      activeWindow: ''\n    };\n  }\n\n  componentDidMount() {\n    this.context.changeWindow(this.state.activeWindow);\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(this.props.currentUser !== nuññ);\n\n    if (prevProps.currentUser !== this.props.currentUser && this.props.currentUser !== null && this.props.currentUser) {\n      this.setState({\n        activeWindow: this.props.currentUser.rooms[1].id\n      });\n    }\n  }\n\n  render() {\n    const {\n      currentUser\n    } = this.props;\n    return __jsx(\"ul\", {\n      className: \"chatrooms-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, currentUser ? Object.values(currentUser.rooms).map((room, index) => {\n      if (room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4') {\n        return __jsx(\"li\", {\n          key: room.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          value: room.id,\n          onClick: this.switchChat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, room.id));\n      }\n    }) : 'Loading...');\n  }\n\n}\n\n_defineProperty(ChatList, \"contextType\", RoomContext);","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatList.js"],"names":["Component","RoomContext","ChatList","constructor","props","event","context","changeWindow","target","value","state","activeWindow","componentDidMount","componentDidUpdate","prevProps","console","log","currentUser","nuññ","setState","rooms","id","render","Object","values","map","room","index","switchChat"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAE5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,wCAoBLC,KAAD,IAAW;AACpB,WAAKC,OAAL,CAAaC,YAAb,CAA0BF,KAAK,CAACG,MAAN,CAAaC,KAAvC;AACH,KAtBkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,OAAL,CAAaC,YAAb,CAA0B,KAAKG,KAAL,CAAWC,YAArC;AACH;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWa,WAAX,KAA2BC,IAAvC;;AACA,QAAMJ,SAAS,CAACG,WAAV,KAA0B,KAAKb,KAAL,CAAWa,WAAtC,IAAsD,KAAKb,KAAL,CAAWa,WAAX,KAA2B,IAAjF,IAAyF,KAAKb,KAAL,CAAWa,WAAzG,EAAuH;AACnH,WAAKE,QAAL,CAAc;AACVR,QAAAA,YAAY,EAAE,KAAKP,KAAL,CAAWa,WAAX,CAAuBG,KAAvB,CAA6B,CAA7B,EAAgCC;AADpC,OAAd;AAGH;AACJ;;AAMDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEL,MAAAA;AAAF,QAAkB,KAAKb,KAA7B;AACA,WACI;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIa,WAAW,GACXM,MAAM,CAACC,MAAP,CAAcP,WAAW,CAACG,KAA1B,EAAiCK,GAAjC,CAAqC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClD,UAAKD,IAAI,CAACL,EAAL,KAAY,sCAAjB,EAA0D;AACtD,eACI;AAAI,UAAA,GAAG,EAAEK,IAAI,CAACL,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,KAAK,EAAEK,IAAI,CAACL,EAApB;AAAwB,UAAA,OAAO,EAAE,KAAKO,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoDF,IAAI,CAACL,EAAzD,CADJ,CADJ;AAKH;AACJ,KARD,CADW,GASN,YAXT,CADJ;AAgBH;;AA5C2C;;gBAA3BnB,Q,iBACID,W","sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\n\nexport default class ChatList extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeWindow: ''\n        }\n    }\n\n    componentDidMount() {\n        this.context.changeWindow(this.state.activeWindow)\n    }\n\n    componentDidUpdate(prevProps) {\n        console.log(this.props.currentUser !== nuññ)\n        if ( (prevProps.currentUser !== this.props.currentUser) && this.props.currentUser !== null && this.props.currentUser ) {\n            this.setState({\n                activeWindow: this.props.currentUser.rooms[1].id\n            })\n        }\n    }\n\n    switchChat = (event) => {\n        this.context.changeWindow(event.target.value)\n    }\n\n    render() {\n        const { currentUser } = this.props\n        return (\n            <ul className=\"chatrooms-container\">\n            {\n                currentUser ?\n                Object.values(currentUser.rooms).map((room, index) => {\n                    if ( room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4' ) {\n                        return (\n                            <li key={room.id}>\n                                <button value={room.id} onClick={this.switchChat} >{room.id}</button>\n                            </li>\n                        )\n                    }\n                }) : 'Loading...'\n            }\n            </ul>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}