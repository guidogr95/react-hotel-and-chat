{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\n\nvar ChatList = /*#__PURE__*/function (_Component) {\n  _inherits(ChatList, _Component);\n\n  function ChatList() {\n    _classCallCheck(this, ChatList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChatList).apply(this, arguments));\n  }\n\n  _createClass(ChatList, [{\n    key: \"render\",\n    value: function render() {\n      var currentUser = this.props.currentUser;\n      return __jsx(\"ul\", {\n        className: \"chatrooms-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, currentUser ? _Object$values(currentUser.rooms).map(function (room, index) {\n        if (room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4') {\n          return __jsx(\"li\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 13\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14\n            },\n            __self: this\n          }, room.id));\n        }\n      }) : 'Loading...');\n    }\n  }]);\n\n  return ChatList;\n}(Component);\n\nexport { ChatList as default };","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatList.js"],"names":["Component","ChatList","currentUser","props","rooms","map","room","index","id"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;IAEqBC,Q;;;;;;;;;;;6BACR;AAAA,UACGC,WADH,GACmB,KAAKC,KADxB,CACGD,WADH;AAEL,aACI;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIA,WAAW,GACX,eAAcA,WAAW,CAACE,KAA1B,EAAiCC,GAAjC,CAAqC,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAClD,YAAKD,IAAI,CAACE,EAAL,KAAY,sCAAjB,EAA0D;AACtD,iBACI;AAAI,YAAA,GAAG,EAAED,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAID,IAAI,CAACE,EAAT,CADJ,CADJ;AAKH;AACJ,OARD,CADW,GASN,YAXT,CADJ;AAgBH;;;;EAnBiCR,S;;SAAjBC,Q","sourcesContent":["import { Component } from 'react'\n\nexport default class ChatList extends Component {\n    render() {\n        const { currentUser } = this.props\n        return (\n            <ul className=\"chatrooms-container\">\n            {\n                currentUser ?\n                Object.values(currentUser.rooms).map((room, index) => {\n                    if ( room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4' ) {\n                        return (\n                            <li key={index}>\n                                <p>{room.id}</p>\n                            </li>\n                        )\n                    }\n                }) : 'Loading...'\n            }\n            </ul>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}