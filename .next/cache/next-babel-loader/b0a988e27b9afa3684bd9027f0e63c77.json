{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nexport default function ChatRoomButton(props) {\n  const rawId = props.room.id;\n  const idLength = rawId.length - 9;\n  const Id = rawId.substring(0, idLength);\n  const rawDate = props.room.createdAt;\n  const splitDate = rawDate.split('T');\n  const Date = splitDate[0];\n  const Time = splitDate[1].substring(0, 5);\n\n  const handleChange = async event => {\n    setChecked(!checked);\n    const target = event.target;\n    console.log(target.checked);\n\n    if (target.checked) {\n      console.log('added');\n      props.check(props.room);\n    } else {\n      console.log('deleted');\n      props.uncheck(props.room);\n    }\n  };\n\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false);\n  return __jsx(React.Fragment, null, __jsx(\"li\", {\n    className: \"chat-room\",\n    key: props.room.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: props.room.id,\n    id: \"chat-checkbox\",\n    checked: checked,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(\"h5\", {\n    onClick: props.see,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, Id), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, Date), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, Time), __jsx(\"div\", {\n    className: \"to-chat-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    value: props.room.id,\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \">\"))));\n}","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js"],"names":["useState","ChatRoomButton","props","rawId","room","id","idLength","length","Id","substring","rawDate","createdAt","splitDate","split","Date","Time","handleChange","event","setChecked","checked","target","console","log","check","uncheck","see","onClick"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC1C,QAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,CAAWC,EAAzB;AACA,QAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,GAAe,CAAhC;AACA,QAAMC,EAAE,GAAGL,KAAK,CAACM,SAAN,CAAgB,CAAhB,EAAmBH,QAAnB,CAAX;AAEA,QAAMI,OAAO,GAAGR,KAAK,CAACE,IAAN,CAAWO,SAA3B;AACA,QAAMC,SAAS,GAAGF,OAAO,CAACG,KAAR,CAAc,GAAd,CAAlB;AACA,QAAMC,IAAI,GAAGF,SAAS,CAAC,CAAD,CAAtB;AACA,QAAMG,IAAI,GAAGH,SAAS,CAAC,CAAD,CAAT,CAAaH,SAAb,CAAuB,CAAvB,EAAyB,CAAzB,CAAb;;AAEA,QAAMO,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCC,IAAAA,UAAU,CAAC,CAACC,OAAF,CAAV;AACA,UAAMC,MAAM,GAAGH,KAAK,CAACG,MAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACD,OAAnB;;AACA,QAAIC,MAAM,CAACD,OAAX,EAAoB;AAChBE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACApB,MAAAA,KAAK,CAACqB,KAAN,CAAYrB,KAAK,CAACE,IAAlB;AACH,KAHD,MAGO;AACHiB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACApB,MAAAA,KAAK,CAACsB,OAAN,CAActB,KAAK,CAACE,IAApB;AACH;AACJ,GAXD;;AAaA,QAAM;AAAA,OAACe,OAAD;AAAA,OAAUD;AAAV,MAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AAEA,SACI,4BACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAA0B,IAAA,GAAG,EAAEE,KAAK,CAACE,IAAN,CAAWC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAEH,KAAK,CAACE,IAAN,CAAWC,EAAxC;AAA4C,IAAA,EAAE,EAAC,eAA/C;AAA+D,IAAA,OAAO,EAAEc,OAAxE;AAAiF,IAAA,QAAQ,EAAEH,YAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAI,IAAA,OAAO,EAAEd,KAAK,CAACuB,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BjB,EAA1B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIM,IAAJ,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAJJ,EAKI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAEb,KAAK,CAACE,IAAN,CAAWC,EAA1B;AAA8B,IAAA,OAAO,EAAEH,KAAK,CAACwB,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CALJ,CADJ,CADJ;AAaH","sourcesContent":["import { useState } from 'react'\n\nexport default function ChatRoomButton(props) {\n    const rawId = props.room.id;\n    const idLength = rawId.length - 9;\n    const Id = rawId.substring(0, idLength);\n\n    const rawDate = props.room.createdAt;\n    const splitDate = rawDate.split('T');\n    const Date = splitDate[0];\n    const Time = splitDate[1].substring(0,5);\n\n    const handleChange = async event => {\n        setChecked(!checked)\n        const target = event.target;\n        console.log(target.checked)\n        if (target.checked) {\n            console.log('added')\n            props.check(props.room)\n        } else {\n            console.log('deleted')\n            props.uncheck(props.room)\n        }\n    }\n\n    const [checked, setChecked] = useState(false)\n\n    return (\n        <>\n            <li className=\"chat-room\" key={props.room.id}>\n                <input type=\"checkbox\" name={props.room.id} id=\"chat-checkbox\" checked={checked} onChange={handleChange}/>\n                <h5 onClick={props.see} >{Id}</h5>\n                <p>{Date}</p>\n                <p>{Time}</p>\n                <div className=\"to-chat-btn\">\n                    <button value={props.room.id} onClick={props.onClick}>></button>\n                </div>\n            </li>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}