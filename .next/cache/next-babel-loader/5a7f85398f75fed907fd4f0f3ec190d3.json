{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\n\nvar ChatRoomButton = /*#__PURE__*/function (_Component) {\n  _inherits(ChatRoomButton, _Component);\n\n  function ChatRoomButton(props) {\n    var _this;\n\n    _classCallCheck(this, ChatRoomButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatRoomButton).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState({\n        checked: !_this.state.checked\n      });\n\n      var target = event.target;\n\n      if (target.checked) {\n        _this.props.check(_this.props.room);\n      } else {\n        _this.props.uncheck(_this.props.room);\n      }\n    });\n\n    _this.state = {\n      checked: false\n    };\n    return _this;\n  }\n\n  _createClass(ChatRoomButton, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.checkAll !== this.props.checkAll) {\n        if (this.props.checkAll && this.state.checked) {\n          console.log('activated1');\n        } else if (this.props.checkAll && !this.state.checked) {\n          console.log('activated2');\n          this.setState({\n            checked: !this.state.checked\n          });\n        } else if (!this.props.checkAll && this.state.checked) {\n          console.log('activated3');\n          this.setState({\n            checked: !this.state.checked\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dateRaw = this.props.room.id;\n      var Date = dateRaw.slice(0, 10);\n      var Time = dateRaw.slice(11, 16);\n      var id = this.props.room.id.replace(/\\s/g, '');\n      console.log(id);\n      return __jsx(React.Fragment, null, __jsx(\"li\", {\n        className: this.context.activeWindow === this.props.room.id ? \"chat-room active\" : \"chat-room\",\n        key: this.props.room.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: this.props.room.id,\n        id: id,\n        checked: this.state.checked,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        htmlFor: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"chat-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(\"h5\", {\n        onClick: this.props.see,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.room.name), __jsx(\"p\", {\n        onClick: function onClick() {\n          return console.log(_this2.state.checked);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, Date, \" \", Time)), __jsx(\"div\", {\n        className: \"to-chat-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        value: this.props.room.id,\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \">\"))));\n    }\n  }]);\n\n  return ChatRoomButton;\n}(Component);\n\n_defineProperty(ChatRoomButton, \"contextType\", RoomContext);\n\nexport { ChatRoomButton as default };","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js"],"names":["Component","RoomContext","ChatRoomButton","props","event","setState","checked","state","target","check","room","uncheck","prevProps","checkAll","console","log","dateRaw","id","Date","slice","Time","replace","context","activeWindow","handleChange","see","name","onClick"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\n\nexport default class ChatRoomButton extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            checked: false\n        }\n    }\n\n    handleChange = event => {\n        this.setState({ checked: !this.state.checked })\n        const target = event.target;\n        if(target.checked) {\n            this.props.check(this.props.room)\n        } else {\n            this.props.uncheck(this.props.room)\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.checkAll !== this.props.checkAll) {\n            if ( this.props.checkAll && this.state.checked ) {\n                console.log('activated1')\n            } else if ( this.props.checkAll && !this.state.checked ) {\n                console.log('activated2')\n                this.setState({ checked: !this.state.checked })\n            } else if ( !this.props.checkAll && this.state.checked ) {\n                console.log('activated3')\n                this.setState({ checked: !this.state.checked })\n            }\n        }\n    }\n\n    render() {\n        const dateRaw = this.props.room.id\n        const Date = dateRaw.slice(0,10)\n        const Time = dateRaw.slice(11,16)\n        const id  = this.props.room.id.replace(/\\s/g,'')\n        console.log(id)\n        return (\n            <>\n            <li className={ this.context.activeWindow === this.props.room.id ? \"chat-room active\" : \"chat-room\" } key={this.props.room.id}>\n                <input type=\"checkbox\" name={this.props.room.id} id={id} checked={this.state.checked} onChange={this.handleChange}/>\n                <label htmlFor={id}></label>\n                <div className=\"chat-info\">\n                    <h5 onClick={this.props.see} >{this.props.room.name}</h5>\n                    <p onClick={() => console.log(this.state.checked)}>{Date} {Time}</p>\n                </div>\n                <div className=\"to-chat-btn\">\n                    <button value={this.props.room.id} onClick={this.props.onClick}>></button>\n                </div>\n            </li>\n        </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}