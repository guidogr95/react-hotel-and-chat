{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nexport default class ChatList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"useForceUpdate\", () => {\n      this.setState({\n        update: this.state.update + 1\n      });\n    });\n\n    _defineProperty(this, \"switchChat\", event => {\n      this.context.changeWindow(event.target.value);\n    });\n\n    _defineProperty(this, \"addCheckedChat\", chatRoom => {\n      console.log('added', chatRoom);\n      this.setState({\n        checkedChats: [...this.state.checkedChats, chatRoom]\n      });\n    });\n\n    _defineProperty(this, \"removeCheckedChat\", chatRoom => {\n      const filtered = this.state.checkedChats.filter(room => room.id !== chatRoom.id);\n      console.log(filtered);\n      this.setState({\n        checkedChats: filtered\n      });\n    });\n\n    _defineProperty(this, \"deleteChats\", () => {\n      this.state.checkedChats.map(chat => {\n        this.props.currentUser.deleteRoom({\n          roomId: chat.id\n        }).then(() => {\n          console.log(`Deleted room with ID: ${chat.id}`);\n        }).catch(err => {\n          console.log(`Error deleted room ${chat.id}: ${err}`);\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleCheckAll\", () => {\n      this.setState({\n        checkAll: !this.state.checkAll\n      });\n    });\n\n    _defineProperty(this, \"clearAll\", () => {\n      this.setState({\n        checkedChats: []\n      });\n    });\n\n    _defineProperty(this, \"seeList\", () => {\n      console.log(this.state.checkedChats);\n    });\n\n    this.state = {\n      activeWindow: '',\n      chatRooms: [],\n      checkAll: false,\n      update: 0\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.currentUser.rooms);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.currentUser !== this.props.currentUser && this.props.currentUser !== null && this.props.currentUser.rooms.length > 1) {\n      const chatWindow = this.props.currentUser.rooms.find(room => room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4');\n      this.context.changeWindow(chatWindow.id);\n    }\n\n    if (prevState.update !== this.state.update) {}\n  }\n\n  render() {\n    const {\n      currentUser\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"chat-list-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"checkAll\",\n      id: \"chat-checkbox\",\n      checked: this.state.checkAll,\n      onChange: this.handleCheckAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: this.deleteChats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Delete Chats\")), __jsx(\"ul\", {\n      className: \"chatrooms-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, currentUser ? Object.values(currentUser.rooms).map((room, index) => {\n      if (room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45') {\n        s;\n        return __jsx(ChatRoomButton, {\n          key: index,\n          room: room,\n          see: this.seeList,\n          checkAll: this.state.checkAll,\n          onClick: this.switchChat,\n          update: this.useForceUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        });\n      }\n    }) : 'Loading...'));\n  }\n\n}\n\n_defineProperty(ChatList, \"contextType\", RoomContext);","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatList.js"],"names":["Component","RoomContext","ChatRoomButton","ChatList","constructor","props","setState","update","state","event","context","changeWindow","target","value","chatRoom","console","log","checkedChats","filtered","filter","room","id","map","chat","currentUser","deleteRoom","roomId","then","catch","err","checkAll","activeWindow","chatRooms","componentDidMount","rooms","componentDidUpdate","prevProps","prevState","length","chatWindow","find","render","handleCheckAll","deleteChats","Object","values","index","s","seeList","switchChat","useForceUpdate"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\n\nexport default class ChatList extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeWindow: '',\n            chatRooms: [],\n            checkAll: false,\n            update: 0\n        }\n        \n    }\n\n    componentDidMount() {\n        console.log(this.props.currentUser.rooms)\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        \n        if ( (prevProps.currentUser !== this.props.currentUser) && this.props.currentUser !== null && this.props.currentUser.rooms.length > 1) {\n            const chatWindow = this.props.currentUser.rooms.find(room => room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4' )\n            this.context.changeWindow(chatWindow.id)\n        }\n\n        if ( prevState.update !== this.state.update ) {\n\n        }\n    }\n\n    useForceUpdate = () => {\n        this.setState({update: this.state.update + 1})\n    }\n\n    switchChat = (event) => {\n        this.context.changeWindow(event.target.value)\n    }\n\n    addCheckedChat = (chatRoom) => {\n        console.log('added', chatRoom)\n        this.setState({\n            checkedChats: [...this.state.checkedChats, chatRoom]\n        })\n    }\n\n    removeCheckedChat = (chatRoom) => {\n        const filtered = this.state.checkedChats.filter(room => room.id !== chatRoom.id)        \n        console.log(filtered)\n        this.setState({\n            checkedChats: filtered\n        })\n    }\n\n    deleteChats = () => {\n\n        this.state.checkedChats.map(chat => {\n            this.props.currentUser.deleteRoom({ roomId: chat.id })\n            .then(() => {\n                console.log(`Deleted room with ID: ${chat.id}`)\n            })\n            .catch(err => {\n                console.log(`Error deleted room ${chat.id}: ${err}`)\n            })\n        })\n    }\n\n    handleCheckAll = () => {\n        this.setState({ checkAll: !this.state.checkAll })\n    }\n\n    clearAll = () => {\n        this.setState({ checkedChats: [] })\n    }\n\n    seeList = () => {\n        console.log(this.state.checkedChats)\n    }\n\n    render() {\n        const { currentUser } = this.props\n        return (\n            <div className=\"chat-list-container\">\n                <div>\n                    <input type=\"checkbox\" name=\"checkAll\" id=\"chat-checkbox\" checked={this.state.checkAll} onChange={this.handleCheckAll}/>\n                    <button onClick={this.deleteChats} >Delete Chats</button>\n                </div>\n                <ul className=\"chatrooms-container\">\n\n                {\n                    currentUser ?\n                    Object.values(currentUser.rooms).map((room, index) => {\n                        if ( room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45' ) {s\n                            return (\n                                <ChatRoomButton key={index} room={room} see={this.seeList} checkAll={this.state.checkAll} onClick={this.switchChat} update={this.useForceUpdate} />\n                            )\n                        }\n                    }) : 'Loading...'\n                }\n                </ul>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}