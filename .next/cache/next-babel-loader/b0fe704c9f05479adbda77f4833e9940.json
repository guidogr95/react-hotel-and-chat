{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport UsernameForm from './UsernameForm';\nimport ChatScreen from './ChatScreen';\nimport ChatScreenDisplay from './ChatScreenDisplay';\nimport axios from 'axios';\nimport { RoomContext } from '../context';\nimport format from 'date-format';\nimport { MdChat, MdClear } from \"react-icons/md\";\n\nvar ChatComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ChatComponent, _Component);\n\n  function ChatComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ChatComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatComponent).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (username) {\n      var dateRaw = format.asString(new Date());\n      var date = dateRaw.slice(0, 10);\n      var time = dateRaw.slice(11, 19);\n      axios({\n        url: 'https://express-login.now.sh/chat/users',\n        method: 'POST',\n        data: _JSON$stringify({\n          username: username,\n          date: \"\".concat(date, \" \").concat(time)\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        console.log(res.data.userId);\n        console.log('success');\n\n        _this.setState({\n          currentUsername: username,\n          currentScreen: 'ChatScreen',\n          userId: res.data.userId\n        });\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleModal\", function () {\n      _this.setState({\n        modalShow: !_this.state.modalShow\n      });\n    });\n\n    _this.state = {\n      currentScreen: 'WhatIsYourUsernameScreen',\n      currentUsername: '',\n      userId: '',\n      modalShow: false\n    };\n    return _this;\n  }\n\n  _createClass(ChatComponent, [{\n    key: \"render\",\n    value: function render() {\n      if (this.context.authenticated || this.context.authenticated === null) {\n        return __jsx(\"div\", null);\n      } else {\n        return __jsx(\"div\", {\n          className: \"chat-component chat-icon\"\n        }, __jsx(\"div\", {\n          className: \"chat-component-wrapper\"\n        }, __jsx(ChatScreenDisplay, {\n          show: this.state.modalShow,\n          onSubmit: this.handleSubmit,\n          currentScreen: this.state.currentScreen,\n          currentUsername: this.state.currentUsername,\n          userId: this.state.userId\n        }), __jsx(\"div\", {\n          className: \"chat-icon-wrapper\",\n          onClick: this.toggleModal\n        }, __jsx(\"div\", {\n          className: \"modal-icon\"\n        }, __jsx(MdClear, {\n          className: this.state.modalShow ? \"cross\" : \"cross hide\"\n        })), __jsx(\"div\", {\n          className: \"modal-icon\"\n        }, __jsx(MdChat, {\n          className: this.state.modalShow ? \"chat hide\" : \"chat\"\n        })))));\n      }\n    }\n  }]);\n\n  return ChatComponent;\n}(Component);\n\n_defineProperty(ChatComponent, \"contextType\", RoomContext);\n\nexport { ChatComponent as default };","map":null,"metadata":{},"sourceType":"module"}