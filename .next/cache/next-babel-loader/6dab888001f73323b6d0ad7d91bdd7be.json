{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/pages/chat.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useContext, useEffect } from 'react';\nimport chatImg from '../images/chat.jpg';\nimport loading from '../images/gif/loading-arrow.gif';\nimport axios from 'axios';\nimport { RoomContext } from '../context';\nimport Link from 'next/link';\nexport default function chat() {\n  const context = useContext(RoomContext);\n  const {\n    0: input,\n    1: setInput\n  } = useState({});\n  const {\n    0: btnDisabled,\n    1: setbtnDisabled\n  } = useState(false);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const style = {\n    backgroundImage: \"url(\" + chatImg + \")\",\n    height: 600,\n    width: \"100%\",\n    padding: \"150px 0 150px 0\"\n  };\n\n  const handleChange = event => setInput(_objectSpread({}, input, {\n    [event.target.name]: event.target.value\n  }));\n\n  useEffect(() => {\n    console.log(context);\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setbtnDisabled(true);\n    axios({\n      url: 'http://localhost:8000/api/users/login',\n      method: 'POST',\n      data: JSON.stringify({\n        email: input.email,\n        password: input.password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setbtnDisabled(false);\n      localStorage.setItem('userData', JSON.stringify({\n        userId: res.data.userId,\n        token: res.data.token\n      }));\n      context.updateCredentials(res.data.userId, res.data.token);\n    }).catch(err => {\n      setErrors(_objectSpread({}, errors, {\n        error: \"No se pudo conectar. Revise sus credenciales\"\n      }));\n      setbtnDisabled(false);\n    });\n  };\n\n  const renderForm = () => {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Login to Chat\"), Object.values(errors).map(err => {\n      return __jsx(\"div\", {\n        className: \"login-err\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, err);\n    }), __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Email\"), __jsx(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Password\"), __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      disabled: btnDisabled,\n      className: btnDisabled ? \"btn-primary submit-btn disabled\" : \"btn-primary submit-btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, btnDisabled ? __jsx(\"img\", {\n      className: \"loading-login\",\n      src: loading,\n      alt: \"loading spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }) : \"Loading\")));\n  };\n\n  const renderLoggedin = () => {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"You are logged in\"), __jsx(Link, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Go Home\")));\n  };\n\n  return __jsx(\"div\", {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"log-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, context.authenticated ? renderLoggedin : renderForm));\n}","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/pages/chat.js"],"names":["useState","useContext","useEffect","chatImg","loading","axios","RoomContext","Link","chat","context","input","setInput","btnDisabled","setbtnDisabled","errors","setErrors","style","backgroundImage","height","width","padding","handleChange","event","target","name","value","console","log","handleSubmit","preventDefault","url","method","data","JSON","stringify","email","password","headers","then","res","localStorage","setItem","userId","token","updateCredentials","catch","err","error","renderForm","Object","values","map","renderLoggedin","authenticated"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC3B,QAAMC,OAAO,GAAGR,UAAU,CAACK,WAAD,CAA1B;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACY,WAAD;AAAA,OAAcC;AAAd,MAAgCb,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACc,MAAD;AAAA,OAASC;AAAT,MAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMgB,KAAK,GAAG;AACVC,IAAAA,eAAe,EAAE,SAAQd,OAAR,GAAkB,GADzB;AAEVe,IAAAA,MAAM,EAAE,GAFE;AAGVC,IAAAA,KAAK,EAAE,MAHG;AAIVC,IAAAA,OAAO,EAAE;AAJC,GAAd;;AAMA,QAAMC,YAAY,GAAIC,KAAD,IAAWX,QAAQ,mBACjCD,KADiC;AAEpC,KAACY,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAFE,KAAxC;;AAKAvB,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMmB,YAAY,GAAG,MAAON,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACO,cAAN;AACAhB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAR,IAAAA,KAAK,CAAC;AACFyB,MAAAA,GAAG,EAAE,uCADH;AAEFC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,KAAK,EAAEzB,KAAK,CAACyB,KADI;AAEjBC,QAAAA,QAAQ,EAAE1B,KAAK,CAAC0B;AAFC,OAAf,CAHJ;AAOFC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAPP,KAAD,CAAL,CASCC,IATD,CASMC,GAAG,IAAI;AACT1B,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA2B,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCR,IAAI,CAACC,SAAL,CAAe;AAACQ,QAAAA,MAAM,EAAEH,GAAG,CAACP,IAAJ,CAASU,MAAlB;AAA0BC,QAAAA,KAAK,EAAEJ,GAAG,CAACP,IAAJ,CAASW;AAA1C,OAAf,CAAjC;AACAlC,MAAAA,OAAO,CAACmC,iBAAR,CAA0BL,GAAG,CAACP,IAAJ,CAASU,MAAnC,EAA2CH,GAAG,CAACP,IAAJ,CAASW,KAApD;AACH,KAbD,EAcCE,KAdD,CAcOC,GAAG,IAAI;AACV/B,MAAAA,SAAS,mBACFD,MADE;AAELiC,QAAAA,KAAK,EAAE;AAFF,SAAT;AAIAlC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH,KApBD;AAqBH,GAxBD;;AAyBA,QAAMmC,UAAU,GAAG,MAAM;AACrB,WACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAGIC,MAAM,CAACC,MAAP,CAAcpC,MAAd,EAAsBqC,GAAtB,CAA0BL,GAAG,IAAI;AAC7B,aAAO;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BA,GAA5B,CAAP;AACH,KAFD,CAHJ,EAOI;AAAM,MAAA,QAAQ,EAAElB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAiC,MAAA,EAAE,EAAC,OAApC;AAA4C,MAAA,QAAQ,EAAEP,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAKI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,EAAE,EAAC,UAA1C;AAAqD,MAAA,QAAQ,EAAEA,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI;AAAQ,MAAA,QAAQ,EAAET,WAAlB;AAA+B,MAAA,SAAS,EAAEA,WAAW,GAAC,iCAAD,GAAmC,wBAAxF;AAAkH,MAAA,IAAI,EAAC,QAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIA,WAAW,GACX;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAER,OAApC;AAA6C,MAAA,GAAG,EAAC,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW,GAEX,SAHJ,CANJ,CAPJ,CADJ;AAsBH,GAvBD;;AAwBA,QAAMgD,cAAc,GAAG,MAAM;AACzB,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAFJ,CADJ;AAUH,GAXD;;AAYA,SACI;AAAK,IAAA,KAAK,EAAEpC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQP,OAAO,CAAC4C,aAAR,GACID,cADJ,GAEIJ,UAJZ,CADJ,CADJ;AAWH","sourcesContent":["import { useState, useContext, useEffect } from 'react'\nimport chatImg from '../images/chat.jpg'\nimport loading from '../images/gif/loading-arrow.gif'\nimport axios from 'axios';\nimport { RoomContext } from '../context'\nimport Link from 'next/link';\n\nexport default function chat() {\n    const context = useContext(RoomContext);\n    const [input, setInput] = useState({});\n    const [btnDisabled, setbtnDisabled] = useState(false);\n    const [errors, setErrors] = useState({});\n    const style = {\n        backgroundImage: \"url(\"+ chatImg + \")\",\n        height: 600,\n        width: \"100%\",\n        padding: \"150px 0 150px 0\"\n    };\n    const handleChange = (event) => setInput({\n        ...input,\n        [event.target.name]: event.target.value\n    });\n\n    useEffect(() => {\n        console.log(context)\n    }, [])\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setbtnDisabled(true);\n        axios({\n            url: 'http://localhost:8000/api/users/login',\n            method: 'POST',\n            data: JSON.stringify({\n                email: input.email,\n                password: input.password\n            }),\n            headers: { 'Content-Type': 'application/json'}\n        })\n        .then(res => {\n            setbtnDisabled(false);\n            localStorage.setItem('userData', JSON.stringify({userId: res.data.userId, token: res.data.token}));\n            context.updateCredentials(res.data.userId, res.data.token);\n        })\n        .catch(err => {\n            setErrors({\n                ...errors,\n                error: \"No se pudo conectar. Revise sus credenciales\"\n            })\n            setbtnDisabled(false);\n        })\n    }\n    const renderForm = () => {\n        return (\n            <React.Fragment>\n                <h3>Login to Chat</h3>\n                {\n                Object.values(errors).map(err => {\n                    return <div className=\"login-err\">{err}</div>\n                })\n                }\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={handleChange}/>\n\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={handleChange}/>\n                    <button disabled={btnDisabled} className={btnDisabled?\"btn-primary submit-btn disabled\":\"btn-primary submit-btn\"} type=\"submit\">{\n                        btnDisabled ?\n                        <img className=\"loading-login\" src={loading} alt=\"loading spinner\"/>:\n                        \"Loading\"\n                    }</button>\n                </form>\n            </React.Fragment>\n        )\n    }\n    const renderLoggedin = () => {\n        return (\n            <div>\n                <h3>You are logged in</h3>\n                <Link href=\"/\">\n                    <a className=\"btn-primary\">\n                        Go Home\n                    </a>\n                </Link>\n            </div>\n        )\n    }\n    return (\n        <div style={style}>\n            <div className=\"log-box\">\n                {\n                    context.authenticated ?\n                        renderLoggedin :\n                        renderForm\n                }\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}