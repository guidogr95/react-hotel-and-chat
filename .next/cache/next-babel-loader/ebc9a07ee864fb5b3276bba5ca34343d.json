{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nimport { FormCheckbox } from \"shards-react\";\nexport default class ChatRoomButton extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        checked: !this.state.checked\n      });\n      const target = event.target;\n\n      if (target.checked) {\n        this.props.check(this.props.room);\n      } else {\n        this.props.uncheck(this.props.room);\n      }\n    });\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.checkAll !== this.props.checkAll) {\n      if (this.props.checkAll && this.state.checked) {} else if (this.props.checkAll && !this.state.checked) {\n        this.setState({\n          checked: !this.state.checked\n        });\n      } else if (!this.props.checkAll && this.state.checked) {\n        this.setState({\n          checked: !this.state.checked\n        });\n      }\n    }\n  }\n\n  render() {\n    const dateRaw = this.props.room.id;\n    const Date = dateRaw.slice(0, 10);\n    const Time = dateRaw.slice(11, 16);\n    console.log(this.props.room);\n    return __jsx(React.Fragment, null, __jsx(\"li\", {\n      className: this.context.activeWindow === this.props.room.id ? \"chat-room active\" : \"chat-room\",\n      key: this.props.room.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(FormCheckBox, {\n      name: this.props.room.id,\n      checked: this.state.checked,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"chat-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(\"h5\", {\n      onClick: this.props.see,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.room.name), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, Date, \" \", Time)), __jsx(\"div\", {\n      className: \"to-chat-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      value: this.props.room.id,\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \">\"))));\n  }\n\n}\n\n_defineProperty(ChatRoomButton, \"contextType\", RoomContext);","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js"],"names":["Component","RoomContext","FormCheckbox","ChatRoomButton","constructor","props","event","setState","checked","state","target","check","room","uncheck","componentDidUpdate","prevProps","checkAll","render","dateRaw","id","Date","slice","Time","console","log","context","activeWindow","handleChange","see","name","onClick"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\nimport { FormCheckbox } from \"shards-react\";\n\nexport default class ChatRoomButton extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            checked: false\n        }\n    }\n\n    handleChange = event => {\n        this.setState({ checked: !this.state.checked })\n        const target = event.target;\n        if(target.checked) {\n            this.props.check(this.props.room)\n        } else {\n            this.props.uncheck(this.props.room)\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.checkAll !== this.props.checkAll) {\n            if ( this.props.checkAll && this.state.checked ) {\n\n            } else if ( this.props.checkAll && !this.state.checked ) {\n                this.setState({ checked: !this.state.checked })\n            } else if ( !this.props.checkAll && this.state.checked ) {\n                this.setState({ checked: !this.state.checked })\n            }\n        }\n    }\n\n    render() {\n        const dateRaw = this.props.room.id\n        const Date = dateRaw.slice(0,10)\n        const Time = dateRaw.slice(11,16)\n        console.log(this.props.room)\n        return (\n            <>\n            <li className={ this.context.activeWindow === this.props.room.id ? \"chat-room active\" : \"chat-room\" } key={this.props.room.id}>\n                <FormCheckBox name={this.props.room.id} checked={this.state.checked} onChange={this.handleChange}/>\n                <div className=\"chat-info\">\n                    <h5 onClick={this.props.see} >{this.props.room.name}</h5>\n                    <p>{Date} {Time}</p>\n                </div>\n                <div className=\"to-chat-btn\">\n                    <button value={this.props.room.id} onClick={this.props.onClick}>></button>\n                </div>\n            </li>\n        </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}