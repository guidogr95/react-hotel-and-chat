{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nexport default class ChatRoomButton extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        checked: !this.state.checked\n      });\n      const target = event.target;\n\n      if (target.checked) {\n        this.props.check(this.props.room);\n      } else {\n        this.props.uncheck(this.props.room);\n      }\n    });\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.checkAll !== this.props.checkAll) {\n      if (this.props.checkAll && this.state.checked) {} else if (this.props.checkAll && !this.state.checked) {\n        this.setState({\n          checked: !this.state.checked\n        });\n      } else if (!this.props.checkAll && this.state.checked) {\n        this.setState({\n          checked: !this.state.checked\n        });\n      }\n    }\n  }\n\n  render() {\n    const rawId = this.props.room.id;\n    const idLength = rawId.length - 9;\n    const Id = rawId.substring(0, idLength);\n    const rawDate = this.props.room.createdAt;\n    const splitDate = rawDate.split('T');\n    const Date = splitDate[0];\n    const Time = splitDate[1].substring(0, 5);\n    return __jsx(React.Fragment, null, __jsx(\"li\", {\n      className: \"chat-room\",\n      key: this.props.room.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: this.props.room.id,\n      id: \"chat-checkbox\",\n      checked: this.state.checked,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), __jsx(\"h5\", {\n      onClick: this.props.see,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.room.name), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, Date), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, Time), __jsx(\"div\", {\n      className: \"to-chat-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      value: this.props.room.id,\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \">\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js"],"names":["Component","ChatRoomButton","constructor","props","event","setState","checked","state","target","check","room","uncheck","componentDidUpdate","prevProps","checkAll","render","rawId","id","idLength","length","Id","substring","rawDate","createdAt","splitDate","split","Date","Time","handleChange","see","name","onClick"],"mappings":"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","sourcesContent":["import { Component } from 'react'\n\nexport default class ChatRoomButton extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            checked: false\n        }\n    }\n\n    handleChange = event => {\n        this.setState({ checked: !this.state.checked })\n        const target = event.target;\n        if(target.checked) {\n            this.props.check(this.props.room)\n        } else {\n            this.props.uncheck(this.props.room)\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.checkAll !== this.props.checkAll) {\n            if ( this.props.checkAll && this.state.checked ) {\n\n            } else if ( this.props.checkAll && !this.state.checked ) {\n                this.setState({ checked: !this.state.checked })\n            } else if ( !this.props.checkAll && this.state.checked ) {\n                this.setState({ checked: !this.state.checked })\n            }\n        }\n    }\n\n    render() {\n        const rawId = this.props.room.id;\n        const idLength = rawId.length - 9;\n        const Id = rawId.substring(0, idLength);\n\n        const rawDate = this.props.room.createdAt;\n        const splitDate = rawDate.split('T');\n        const Date = splitDate[0];\n        const Time = splitDate[1].substring(0,5);\n        return (\n            <>\n            <li className=\"chat-room\" key={this.props.room.id}>\n                <input type=\"checkbox\" name={this.props.room.id} id=\"chat-checkbox\" checked={this.state.checked} onChange={this.handleChange}/>\n                <h5 onClick={this.props.see} >{this.props.room.name}</h5>\n                <p>{Date}</p>\n                <p>{Time}</p>\n                <div className=\"to-chat-btn\">\n                    <button value={this.props.room.id} onClick={this.props.onClick}>></button>\n                </div>\n            </li>\n        </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}