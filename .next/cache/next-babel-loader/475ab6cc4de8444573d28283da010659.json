{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatComponent.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport UsernameForm from './UsernameForm';\nimport ChatScreen from './ChatScreen';\nimport axios from 'axios';\nimport { RoomContext } from '../context';\n\nvar ChatComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ChatComponent, _Component);\n\n  function ChatComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ChatComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatComponent).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (username) {\n      axios({\n        url: 'http://localhost:3001/users',\n        method: 'POST',\n        data: _JSON$stringify({\n          username: username\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        console.log(res.data.userId);\n        console.log('success');\n\n        _this.setState({\n          currentUsername: username,\n          currentScreen: 'ChatScreen',\n          userId: res.data.userId\n        });\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChat\", function () {\n      if (_this.state.currentScreen === 'WhatIsYourUsernameScreen') {\n        return __jsx(UsernameForm, {\n          onSubmit: _this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      } else if (_this.state.currentScreen === 'ChatScreen') {\n        return __jsx(ChatScreen, {\n          currentUsername: _this.state.currentUsername,\n          userId: _this.state.userId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      }\n    });\n\n    _this.state = {\n      currentScreen: 'WhatIsYourUsernameScreen',\n      currentUsername: '',\n      userId: ''\n    };\n    return _this;\n  }\n\n  _createClass(ChatComponent, [{\n    key: \"render\",\n    value: function render() {\n      if (this.context.authenticated || this.context.authenticated === null) {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      } else {\n        return __jsx(\"div\", {\n          className: \"chat-component\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, this.handleChat());\n      }\n    }\n  }]);\n\n  return ChatComponent;\n}(Component);\n\n_defineProperty(ChatComponent, \"contextType\", RoomContext);\n\nexport { ChatComponent as default };","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatComponent.js"],"names":["Component","UsernameForm","ChatScreen","axios","RoomContext","ChatComponent","props","username","url","method","data","headers","then","res","console","log","userId","setState","currentUsername","currentScreen","err","state","handleSubmit","context","authenticated","handleChat"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;;IAEqBC,a;;;AACjB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;;AADe,mEASJ,UAACC,QAAD,EAAc;AACzBJ,MAAAA,KAAK,CAAC;AACFK,QAAAA,GAAG,EAAE,6BADH;AAEFC,QAAAA,MAAM,EAAE,MAFN;AAGFC,QAAAA,IAAI,EAAE,gBAAe;AACjBH,UAAAA,QAAQ,EAARA;AADiB,SAAf,CAHJ;AAMFI,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AANP,OAAD,CAAL,CAOGC,IAPH,CAOQ,UAAAC,GAAG,EAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACH,IAAJ,CAASM,MAArB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,cAAKE,QAAL,CAAc;AACVC,UAAAA,eAAe,EAAEX,QADP;AAEVY,UAAAA,aAAa,EAAE,YAFL;AAGVH,UAAAA,MAAM,EAAEH,GAAG,CAACH,IAAJ,CAASM;AAHP,SAAd;AAKH,OAfD,WAeS,UAAAI,GAAG,EAAI;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACH,OAjBD;AAkBH,KA5BkB;;AAAA,iEA8BN,YAAM;AACf,UAAK,MAAKC,KAAL,CAAWF,aAAX,KAA6B,0BAAlC,EAA+D;AAC3D,eAAO,MAAC,YAAD;AAAc,UAAA,QAAQ,EAAE,MAAKG,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,MAEO,IAAK,MAAKD,KAAL,CAAWF,aAAX,KAA6B,YAAlC,EAAiD;AACpD,eAAO,MAAC,UAAD;AAAY,UAAA,eAAe,EAAE,MAAKE,KAAL,CAAWH,eAAxC;AAAyD,UAAA,MAAM,EAAE,MAAKG,KAAL,CAAWL,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ,KApCkB;;AAEf,UAAKK,KAAL,GAAY;AACRF,MAAAA,aAAa,EAAE,0BADP;AAERD,MAAAA,eAAe,EAAE,EAFT;AAGRF,MAAAA,MAAM,EAAE;AAHA,KAAZ;AAFe;AAOlB;;;;6BA+BQ;AACL,UAAK,KAAKO,OAAL,CAAaC,aAAb,IAA8B,KAAKD,OAAL,CAAaC,aAAb,KAA+B,IAAlE,EAAyE;AACrE,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,OAFD,MAEO;AACH,eACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKC,UAAL,EADL,CADJ;AAKH;AACJ;;;;EAjDsCzB,S;;gBAAtBK,a,iBASID,W;;SATJC,a","sourcesContent":["import { Component } from 'react'\nimport UsernameForm from './UsernameForm'\nimport ChatScreen from './ChatScreen'\nimport axios from 'axios'\nimport { RoomContext } from '../context';\n\nexport default class ChatComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state= {\n            currentScreen: 'WhatIsYourUsernameScreen',\n            currentUsername: '',\n            userId: ''\n        }\n    }\n    static contextType = RoomContext;\n    handleSubmit = (username) => {\n        axios({\n            url: 'http://localhost:3001/users',\n            method: 'POST',\n            data: JSON.stringify({\n                username\n            }),\n            headers: { 'Content-Type': 'application/json' }\n        }).then(res => {\n            console.log(res.data.userId)\n            console.log('success')\n            this.setState({\n                currentUsername: username,\n                currentScreen: 'ChatScreen',\n                userId: res.data.userId\n            })\n        }).catch(err => {\n            console.log(err);  \n        })\n    }\n    \n    handleChat = () => {\n        if ( this.state.currentScreen === 'WhatIsYourUsernameScreen' ) {\n            return <UsernameForm onSubmit={this.handleSubmit}/>         \n        } else if ( this.state.currentScreen === 'ChatScreen' ) {\n            return <ChatScreen currentUsername={this.state.currentUsername} userId={this.state.userId} />\n        }\n    }\n    \n    render() {\n        if ( this.context.authenticated || this.context.authenticated === null ) {\n            return (<div></div>)\n        } else {\n            return (\n                <div className=\"chat-component\">\n                    {this.handleChat()}\n                </div>\n            )\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}