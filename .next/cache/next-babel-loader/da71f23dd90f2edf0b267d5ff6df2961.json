{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport Chatkit from '@pusher/chatkit-client'; //Components\n\nimport MessageList from './MessageList';\nimport SendMessageForm from './SendMessageForm';\nimport TypingIndicator from './TypingIndicator';\n\nvar ChatScreen = /*#__PURE__*/function (_Component) {\n  _inherits(ChatScreen, _Component);\n\n  function ChatScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ChatScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatScreen).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var chatManager = new Chatkit.ChatManager({\n        instanceLocator: 'v1:us1:fe088103-8b4d-4e06-a93c-4d2fb3f963be',\n        userId: _this.props.userId,\n        tokenProvider: new Chatkit.TokenProvider({\n          url: 'https://express-login.now.sh/chat/authenticate'\n        })\n      });\n      chatManager.connect().then(function (currentUser) {\n        _this.setState({\n          currentUser: currentUser\n        });\n\n        console.log(currentUser);\n        return currentUser.createRoom({\n          id: currentUser.id,\n          name: currentUser.name,\n          \"private\": true,\n          addUserIds: [currentUser.id, 'guido']\n        }).then(function (room) {\n          _this.setState({\n            currentRoom: room\n          });\n\n          return currentUser.subscribeToRoom({\n            roomId: room.id,\n            messageLimit: 100,\n            hooks: {\n              onMessage: function onMessage(message) {\n                console.log(message);\n\n                _this.setState({\n                  messages: [].concat(_toConsumableArray(_this.state.messages), [message])\n                });\n              },\n              onUserStartedTyping: function onUserStartedTyping(user) {\n                _this.setState({\n                  userTyping: user.name,\n                  isUserTyping: true\n                });\n              },\n              onUserStoppedTyping: function onUserStoppedTyping(user) {\n                _this.setState({\n                  userTyping: user.name,\n                  isUserTyping: false\n                });\n              }\n            }\n          }).then(function () {\n            return _this.state.currentUser.subscribeToRoomMultipart({\n              roomId: '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45',\n              messageLimit: 100,\n              hooks: {\n                onPresenceChanged: function onPresenceChanged(state, user) {\n                  console.log(\"User \".concat(user.name, \" is \").concat(state.current));\n                }\n              }\n            })[\"catch\"](function (err) {\n              return console.log(err);\n            });\n          });\n        })[\"catch\"](function (err) {\n          console.log('error', err);\n        });\n      })[\"catch\"](function (error) {\n        return console.log('Hiiiii', error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sendMessage\", function (text) {\n      _this.state.currentUser.sendSimpleMessage({\n        roomId: _this.state.currentRoom.id,\n        text: text\n      }).then(function (messageId) {\n        return _this.setState({\n          text: ''\n        });\n      })[\"catch\"](function (err) {\n        return console.log('error', err);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sendTypingEvent\", function () {\n      _this.state.currentUser.isTypingIn({\n        roomId: _this.state.currentRoom.id\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    });\n\n    _this.state = {\n      messages: [],\n      currentRoom: {},\n      currentUser: {},\n      userTyping: '',\n      isUserTyping: false\n    };\n    return _this;\n  }\n\n  _createClass(ChatScreen, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"chat-screen\"\n      }, __jsx(MessageList, {\n        messages: this.state.messages,\n        currentUser: this.state.currentUser\n      }), this.state.isUserTyping ? __jsx(TypingIndicator, {\n        userTyping: this.state.userTyping\n      }) : '', __jsx(SendMessageForm, {\n        onSubmit: this.sendMessage,\n        onChange: this.sendTypingEvent\n      }));\n    }\n  }]);\n\n  return ChatScreen;\n}(Component);\n\nexport { ChatScreen as default };","map":null,"metadata":{},"sourceType":"module"}