{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nimport jwt from 'jsonwebtoken';\nimport axios from 'axios';\nimport RSC from 'react-scrollbars-custom';\n\nvar ChatList = /*#__PURE__*/function (_Component) {\n  _inherits(ChatList, _Component);\n\n  function ChatList(props) {\n    var _this;\n\n    _classCallCheck(this, ChatList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"useForceUpdate\", function () {\n      _this.setState({\n        counter: _this.state.counter + 1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"switchChat\", function (event) {\n      _this.context.changeWindow(event.target.value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addCheckedChat\", function (chatRoom) {\n      _this.setState({\n        checkedChats: [].concat(_toConsumableArray(_this.state.checkedChats), [chatRoom])\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeCheckedChat\", function (chatRoom) {\n      var filtered = _this.state.checkedChats.filter(function (room) {\n        return room.id !== chatRoom.id;\n      });\n\n      _this.setState({\n        checkedChats: filtered\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteChats\", function () {\n      var length = _this.state.checkedChats.length;\n      var loop = 0;\n\n      _this.state.checkedChats.map(function (chat) {\n        try {\n          var token = _this.getToken();\n\n          axios({\n            url: \"https://us1.pusherplatform.io/services/chatkit_scheduler/v1/fe088103-8b4d-4e06-a93c-4d2fb3f963be/users/\".concat(chat.createdByUserId),\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"Bearer \".concat(token)\n            }\n          }).then(function (res) {\n            return console.log(res);\n          })[\"catch\"](function (err) {\n            return console.log(err);\n          });\n        } catch (err) {\n          console.log(err);\n        }\n\n        _this.context.currentUser.deleteRoom({\n          roomId: chat.id\n        }).then(function () {\n          console.log(\"Deleted room with ID: \".concat(chat.id));\n\n          _this.setState({\n            checkAll: false\n          });\n\n          loop += 1;\n\n          if (loop === length) {\n            _this.setState({\n              checkedChats: []\n            });\n          }\n        })[\"catch\"](function (err) {\n          console.log(\"Error deleted room \".concat(chat.id, \": \").concat(err));\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCheckAll\", function () {\n      var isCheckAll = !_this.state.checkAll;\n\n      _this.setState({\n        checkAll: !_this.state.checkAll\n      });\n\n      if (isCheckAll) {\n        var allRooms = _this.context.currentUser.rooms.filter(function (room) {\n          return room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45';\n        });\n\n        _this.setState({\n          checkedChats: allRooms\n        });\n      } else {\n        _this.setState({\n          checkedChats: []\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getToken\", function (userId) {\n      var token = jwt.sign({\n        instance: 'fe088103-8b4d-4e06-a93c-4d2fb3f963be',\n        iss: 'api_keys/d6b63c39-9c58-459d-a34b-a8d39eb6124d',\n        sub: userId,\n        su: true\n      }, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=', {\n        expiresIn: '1h'\n      });\n      return token;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"seeList\", function () {\n      console.log(_this.state.checkedChats);\n    });\n\n    _this.state = {\n      activeWindow: '',\n      checkedChats: [],\n      checkAll: false,\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(ChatList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (_Object$keys(this.context.currentUser).length > 0 && !this.state.loaded) {\n        var chatWindow = this.context.currentUser.rooms.find(function (room) {\n          return room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4';\n        });\n        this.context.changeWindow(chatWindow.id);\n        this.setState({\n          loaded: true\n        });\n      }\n\n      if (this.state.checkedChats.length === 0 && this.state.checkAll) {\n        this.setState({\n          checkAll: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var currentUser = this.context.currentUser;\n      return __jsx(\"div\", {\n        className: \"chat-list-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"chat-list-settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: \"checkAll\",\n        id: \"chat-checkbox\",\n        checked: this.state.checkAll,\n        onChange: this.handleCheckAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        htmlFor: \"chat-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        className: \"btn-primary\",\n        onClick: this.deleteChats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Delete Chats\")), __jsx(RSC, {\n        className: \"chatlist-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"chatrooms-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, _Object$keys(currentUser).length > 0 ? _Object$values(currentUser.rooms).map(function (room) {\n        if (room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45') {\n          return __jsx(ChatRoomButton, {\n            key: room.id,\n            room: room,\n            see: _this2.seeList,\n            checkAll: _this2.state.checkAll,\n            onClick: _this2.switchChat,\n            check: _this2.addCheckedChat,\n            uncheck: _this2.removeCheckedChat,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          });\n        }\n      }) : 'Loading...')));\n    }\n  }]);\n\n  return ChatList;\n}(Component);\n\n_defineProperty(ChatList, \"contextType\", RoomContext);\n\nexport { ChatList as default };","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatList.js"],"names":["Component","RoomContext","ChatRoomButton","jwt","axios","RSC","ChatList","props","setState","counter","state","event","context","changeWindow","target","value","chatRoom","checkedChats","filtered","filter","room","id","length","loop","map","chat","token","getToken","url","createdByUserId","method","headers","then","res","console","log","err","currentUser","deleteRoom","roomId","checkAll","isCheckAll","allRooms","rooms","userId","sign","instance","iss","sub","su","expiresIn","activeWindow","loaded","chatWindow","find","handleCheckAll","deleteChats","seeList","switchChat","addCheckedChat","removeCheckedChat"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nimport jwt from 'jsonwebtoken';\nimport axios from 'axios';\nimport RSC from 'react-scrollbars-custom'\n\nexport default class ChatList extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeWindow: '',\n            checkedChats: [],\n            checkAll: false,\n            loaded: false\n        }\n    }\n\n    componentDidUpdate() {\n        \n        if ( Object.keys(this.context.currentUser).length > 0 && !this.state.loaded ) {\n        const chatWindow = this.context.currentUser.rooms.find(room => room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4' )\n        this.context.changeWindow(chatWindow.id)\n        this.setState({loaded:true})\n        }\n\n        if ( this.state.checkedChats.length === 0 && this.state.checkAll ) {\n            this.setState({ checkAll: false })\n        }\n    }\n\n    useForceUpdate = () => {\n        this.setState({counter: this.state.counter + 1})\n    }\n\n    switchChat = (event) => {\n        this.context.changeWindow(event.target.value)\n    }\n\n    addCheckedChat = (chatRoom) => {\n        this.setState({\n            checkedChats: [...this.state.checkedChats, chatRoom]\n        })\n    }\n\n    removeCheckedChat = (chatRoom) => {\n        const filtered = this.state.checkedChats.filter(room => room.id !== chatRoom.id)\n        this.setState({\n            checkedChats: filtered\n        })\n    }\n\n    deleteChats = () => {\n        const length = this.state.checkedChats.length;\n        let loop = 0; \n        this.state.checkedChats.map(chat => {\n            try {\n                const token = this.getToken();\n                axios({\n                    url: `https://us1.pusherplatform.io/services/chatkit_scheduler/v1/fe088103-8b4d-4e06-a93c-4d2fb3f963be/users/${chat.createdByUserId}`,\n                    method: 'put',\n                    headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`,}\n                })\n                .then(res => console.log(res))\n                .catch(err => console.log(err));\n            } catch(err) {\n                console.log(err)\n            }\n            this.context.currentUser.deleteRoom({ roomId: chat.id })\n            .then(() => {\n                console.log(`Deleted room with ID: ${chat.id}`);\n                this.setState({ checkAll: false })\n                loop += 1\n                if ( loop === length ) {\n                    this.setState({ checkedChats: [] })\n                }\n            })\n            .catch(err => {\n                console.log(`Error deleted room ${chat.id}: ${err}`)\n            })\n        })\n    }\n\n    handleCheckAll = () => {\n        const isCheckAll = !this.state.checkAll\n        this.setState({ checkAll: !this.state.checkAll })\n        if (isCheckAll)  {\n            const allRooms = this.context.currentUser.rooms.filter(room => room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45')\n            this.setState({ checkedChats: allRooms })\n        } else {\n            this.setState({ checkedChats: [] })\n        }\n    }\n\n    getToken = (userId) => {\n        const token = jwt.sign({ instance: 'fe088103-8b4d-4e06-a93c-4d2fb3f963be', iss: 'api_keys/d6b63c39-9c58-459d-a34b-a8d39eb6124d', sub: userId, su: true }, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=', { expiresIn: '1h' });\n        return token\n    }\n\n    seeList = () => {\n        console.log(this.state.checkedChats)\n    }\n\n    render() {\n        const { currentUser } = this.context\n        return (\n            <div className=\"chat-list-container\">\n                <div className=\"chat-list-settings\" >\n                    <input type=\"checkbox\" name=\"checkAll\" id=\"chat-checkbox\" checked={this.state.checkAll} onChange={this.handleCheckAll}/>\n                    <label htmlFor=\"chat-checkbox\"></label>\n                    <button className=\"btn-primary\" onClick={this.deleteChats} >Delete Chats</button>\n                </div>\n                <RSC className=\"chatlist-box\">\n                    <ul className=\"chatrooms-container\">\n\n                    {\n                        Object.keys(currentUser).length > 0 ?\n                        Object.values(currentUser.rooms).map(room => {\n                            if ( room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45' ) {\n                                return (\n                                    <ChatRoomButton key={room.id} room={room} see={this.seeList} checkAll={this.state.checkAll} onClick={this.switchChat} check={this.addCheckedChat} uncheck={this.removeCheckedChat}  />\n                                )\n                            }\n                        }) : 'Loading...'\n                    }\n                    </ul>\n                </RSC>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}