{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\n\nvar ChatRoomButton = /*#__PURE__*/function (_Component) {\n  _inherits(ChatRoomButton, _Component);\n\n  function ChatRoomButton(props) {\n    var _this;\n\n    _classCallCheck(this, ChatRoomButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatRoomButton).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState({\n        checked: !_this.state.checked\n      });\n\n      _this.props.update();\n    });\n\n    _this.state = {\n      checked: false\n    };\n    return _this;\n  }\n\n  _createClass(ChatRoomButton, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.checkAll !== this.props.checkAll) {\n        console.log(this.props.checkAll);\n\n        if (this.props.checkAll && this.state.checked) {} else if (this.props.checkAll && !this.state.checked) {\n          this.setState({\n            checked: !this.state.checked\n          });\n          this.props.update();\n        } else if (!this.props.checkAll && this.state.checked) {\n          this.setState({\n            checked: !this.state.checked\n          });\n          this.props.update();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rawId = this.props.room.id;\n      var idLength = rawId.length - 9;\n      var Id = rawId.substring(0, idLength);\n      var rawDate = this.props.room.createdAt;\n      var splitDate = rawDate.split('T');\n      var Date = splitDate[0];\n      var Time = splitDate[1].substring(0, 5);\n      return __jsx(React.Fragment, null, __jsx(\"li\", {\n        className: \"chat-room\",\n        key: this.props.room.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: this.props.room.id,\n        id: \"chat-checkbox\",\n        checked: this.state.checked,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), __jsx(\"h5\", {\n        onClick: this.props.see,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, Id), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, Date), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, Time), __jsx(\"div\", {\n        className: \"to-chat-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        value: this.props.room.id,\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \">\"))));\n    }\n  }]);\n\n  return ChatRoomButton;\n}(Component);\n\nexport { ChatRoomButton as default };","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatRoomButton.js"],"names":["Component","ChatRoomButton","props","event","setState","checked","state","update","prevProps","checkAll","console","log","rawId","room","id","idLength","length","Id","substring","rawDate","createdAt","splitDate","split","Date","Time","handleChange","see","onClick"],"mappings":"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","sourcesContent":["import { Component } from 'react'\n\nexport default class ChatRoomButton extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            checked: false\n        }\n    }\n\n    handleChange = event => {\n        this.setState({ checked: !this.state.checked })\n        this.props.update();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.checkAll !== this.props.checkAll) {\n            console.log(this.props.checkAll)\n            if ( this.props.checkAll && this.state.checked ) {\n\n            } else if ( this.props.checkAll && !this.state.checked ) {\n                this.setState({ checked: !this.state.checked })\n                this.props.update();\n            } else if ( !this.props.checkAll && this.state.checked ) {\n                this.setState({ checked: !this.state.checked })\n                this.props.update();\n            }\n        }\n    }\n\n    render() {\n        const rawId = this.props.room.id;\n        const idLength = rawId.length - 9;\n        const Id = rawId.substring(0, idLength);\n\n        const rawDate = this.props.room.createdAt;\n        const splitDate = rawDate.split('T');\n        const Date = splitDate[0];\n        const Time = splitDate[1].substring(0,5);\n        return (\n            <>\n            <li className=\"chat-room\" key={this.props.room.id}>\n                <input type=\"checkbox\" name={this.props.room.id} id=\"chat-checkbox\" checked={this.state.checked} onChange={this.handleChange}/>\n                <h5 onClick={this.props.see} >{Id}</h5>\n                <p>{Date}</p>\n                <p>{Time}</p>\n                <div className=\"to-chat-btn\">\n                    <button value={this.props.room.id} onClick={this.props.onClick}>></button>\n                </div>\n            </li>\n        </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}