{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nimport jwt from 'jsonwebtoken';\nimport axios from 'axios';\n\nvar ChatList = /*#__PURE__*/function (_Component) {\n  _inherits(ChatList, _Component);\n\n  function ChatList(props) {\n    var _this;\n\n    _classCallCheck(this, ChatList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"switchChat\", function (event) {\n      _this.context.changeWindow(event.target.value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addCheckedChat\", function (chatRoom) {\n      _this.setState({\n        checkedChats: [].concat(_toConsumableArray(_this.state.checkedChats), [chatRoom])\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeCheckedChat\", function (chatRoom) {\n      var filtered = _this.state.checkedChats.filter(function (room) {\n        return room.id !== chatRoom.id;\n      });\n\n      console.log(filtered);\n\n      _this.setState({\n        checkedChats: filtered\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteChats\", function () {\n      _this.state.checkedChats.map(function (chat) {\n        try {\n          var token = _this.getToken();\n\n          axios({\n            url: \"https://us1.pusherplatform.io/services/chatkit_scheduler/v1/fe088103-8b4d-4e06-a93c-4d2fb3f963be/users/\".concat(chat.createdByUserId),\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"Bearer \".concat(token)\n            }\n          }).then(function (res) {\n            return console.log(res);\n          })[\"catch\"](function (err) {\n            return console.log(err);\n          });\n        } catch (err) {\n          console.log(err);\n        }\n\n        _this.props.currentUser.deleteRoom({\n          roomId: chat.id\n        }).then(function () {\n          console.log(\"Deleted room with ID: \".concat(chat.id));\n\n          _this.setState({\n            checkAll: false\n          });\n        })[\"catch\"](function (err) {\n          console.log(\"Error deleted room \".concat(chat.id, \": \").concat(err));\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCheckAll\", function () {\n      var isCheckAll = !_this.state.checkAll;\n\n      _this.setState({\n        checkAll: !_this.state.checkAll\n      });\n\n      console.log(isCheckAll);\n\n      if (isCheckAll) {\n        var allRooms = _this.props.currentUser.rooms.filter(function (room) {\n          return room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45';\n        });\n\n        _this.setState({\n          checkedChats: allRooms\n        });\n      } else {\n        _this.setState({\n          checkedChats: []\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getToken\", function (userId) {\n      var token = jwt.sign({\n        instance: 'fe088103-8b4d-4e06-a93c-4d2fb3f963be',\n        iss: 'api_keys/d6b63c39-9c58-459d-a34b-a8d39eb6124d',\n        sub: userId,\n        su: true\n      }, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=', {\n        expiresIn: '1h'\n      });\n      return token;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"seeList\", function () {\n      console.log(_this.state.checkedChats);\n    });\n\n    _this.state = {\n      activeWindow: '',\n      checkedChats: [],\n      checkAll: false,\n      chatRooms: []\n    };\n    return _this;\n  }\n\n  _createClass(ChatList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props.currentUser);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.currentUser !== this.props.currentUser && this.props.currentUser !== null && this.props.currentUser.rooms.length > 1) {\n        var chatWindow = this.props.currentUser.rooms.find(function (room) {\n          return room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4';\n        });\n        this.context.changeWindow(chatWindow.id);\n        this.setState({\n          chatRooms: _toConsumableArray(this.props.currentUser.rooms)\n        });\n      }\n\n      if (this.state.checkedChats.length === 0 && this.state.checkAll) {\n        this.setState({\n          checkAll: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var currentUser = this.props.currentUser;\n      return __jsx(\"div\", {\n        className: \"chat-list-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: \"checkAll\",\n        id: \"chat-checkbox\",\n        checked: this.state.checkAll,\n        onChange: this.handleCheckAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        onClick: this.getToken,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Delete Chats\"), __jsx(\"button\", {\n        onClick: this.deleteChats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Delete Chats\")), __jsx(\"ul\", {\n        className: \"chatrooms-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, currentUser ? _Object$values(currentUser.rooms).map(function (room, index) {\n        if (room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45') {\n          return __jsx(ChatRoomButton, {\n            key: index,\n            room: room,\n            see: _this2.seeList,\n            clearAll: _this2.clearAll,\n            checkAll: _this2.state.checkAll,\n            onClick: _this2.switchChat,\n            check: _this2.addCheckedChat,\n            uncheck: _this2.removeCheckedChat,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          });\n        }\n      }) : 'Loading...'));\n    }\n  }]);\n\n  return ChatList;\n}(Component);\n\n_defineProperty(ChatList, \"contextType\", RoomContext);\n\nexport { ChatList as default };","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatList.js"],"names":["Component","RoomContext","ChatRoomButton","jwt","axios","ChatList","props","event","context","changeWindow","target","value","chatRoom","setState","checkedChats","state","filtered","filter","room","id","console","log","map","chat","token","getToken","url","createdByUserId","method","headers","then","res","err","currentUser","deleteRoom","roomId","checkAll","isCheckAll","allRooms","rooms","userId","sign","instance","iss","sub","su","expiresIn","activeWindow","chatRooms","prevProps","length","chatWindow","find","handleCheckAll","deleteChats","index","seeList","clearAll","switchChat","addCheckedChat","removeCheckedChat"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,Q;;;AAEjB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;;AADe,iEA4BN,UAACC,KAAD,EAAW;AACpB,YAAKC,OAAL,CAAaC,YAAb,CAA0BF,KAAK,CAACG,MAAN,CAAaC,KAAvC;AACH,KA9BkB;;AAAA,qEAgCF,UAACC,QAAD,EAAc;AAC3B,YAAKC,QAAL,CAAc;AACVC,QAAAA,YAAY,+BAAM,MAAKC,KAAL,CAAWD,YAAjB,IAA+BF,QAA/B;AADF,OAAd;AAGH,KApCkB;;AAAA,wEAsCC,UAACA,QAAD,EAAc;AAC9B,UAAMI,QAAQ,GAAG,MAAKD,KAAL,CAAWD,YAAX,CAAwBG,MAAxB,CAA+B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYP,QAAQ,CAACO,EAAzB;AAAA,OAAnC,CAAjB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,YAAKH,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAEE;AADJ,OAAd;AAGH,KA5CkB;;AAAA,kEA8CL,YAAM;AAEhB,YAAKD,KAAL,CAAWD,YAAX,CAAwBQ,GAAxB,CAA4B,UAAAC,IAAI,EAAI;AAChC,YAAI;AACA,cAAMC,KAAK,GAAG,MAAKC,QAAL,EAAd;;AACArB,UAAAA,KAAK,CAAC;AACFsB,YAAAA,GAAG,mHAA4GH,IAAI,CAACI,eAAjH,CADD;AAEFC,YAAAA,MAAM,EAAE,KAFN;AAGFC,YAAAA,OAAO,EAAE;AAAE,8BAAgB,kBAAlB;AAAsC,gDAA2BL,KAA3B;AAAtC;AAHP,WAAD,CAAL,CAKCM,IALD,CAKM,UAAAC,GAAG;AAAA,mBAAIX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CAAJ;AAAA,WALT,WAMO,UAAAC,GAAG;AAAA,mBAAIZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CAAJ;AAAA,WANV;AAOH,SATD,CASE,OAAMA,GAAN,EAAW;AACTZ,UAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACH;;AACD,cAAK1B,KAAL,CAAW2B,WAAX,CAAuBC,UAAvB,CAAkC;AAAEC,UAAAA,MAAM,EAAEZ,IAAI,CAACJ;AAAf,SAAlC,EACCW,IADD,CACM,YAAM;AACRV,UAAAA,OAAO,CAACC,GAAR,iCAAqCE,IAAI,CAACJ,EAA1C;;AACA,gBAAKN,QAAL,CAAc;AAAEuB,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AACH,SAJD,WAKO,UAAAJ,GAAG,EAAI;AACVZ,UAAAA,OAAO,CAACC,GAAR,8BAAkCE,IAAI,CAACJ,EAAvC,eAA8Ca,GAA9C;AACH,SAPD;AAQH,OArBD;AAsBH,KAtEkB;;AAAA,qEAwEF,YAAM;AACnB,UAAMK,UAAU,GAAG,CAAC,MAAKtB,KAAL,CAAWqB,QAA/B;;AACA,YAAKvB,QAAL,CAAc;AAAEuB,QAAAA,QAAQ,EAAE,CAAC,MAAKrB,KAAL,CAAWqB;AAAxB,OAAd;;AAEAhB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,UAAZ;;AACA,UAAIA,UAAJ,EAAiB;AACb,YAAMC,QAAQ,GAAG,MAAKhC,KAAL,CAAW2B,WAAX,CAAuBM,KAAvB,CAA6BtB,MAA7B,CAAoC,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAY,sCAAhB;AAAA,SAAxC,CAAjB;;AACA,cAAKN,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAEwB;AAAhB,SAAd;AACH,OAHD,MAGO;AACH,cAAKzB,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACH;AACJ,KAnFkB;;AAAA,+DAqFR,UAAC0B,MAAD,EAAY;AACnB,UAAMhB,KAAK,GAAGrB,GAAG,CAACsC,IAAJ,CAAS;AAAEC,QAAAA,QAAQ,EAAE,sCAAZ;AAAoDC,QAAAA,GAAG,EAAE,+CAAzD;AAA0GC,QAAAA,GAAG,EAAEJ,MAA/G;AAAuHK,QAAAA,EAAE,EAAE;AAA3H,OAAT,EAA4I,8CAA5I,EAA4L;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAA5L,CAAd;AACA,aAAOtB,KAAP;AACH,KAxFkB;;AAAA,8DA0FT,YAAM;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKN,KAAL,CAAWD,YAAvB;AACH,KA5FkB;;AAEf,UAAKC,KAAL,GAAa;AACTgC,MAAAA,YAAY,EAAE,EADL;AAETjC,MAAAA,YAAY,EAAE,EAFL;AAGTsB,MAAAA,QAAQ,EAAE,KAHD;AAITY,MAAAA,SAAS,EAAE;AAJF,KAAb;AAFe;AAQlB;;;;wCAEmB;AAChB5B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAW2B,WAAvB;AACH;;;uCAGkBgB,S,EAAW;AAE1B,UAAMA,SAAS,CAAChB,WAAV,KAA0B,KAAK3B,KAAL,CAAW2B,WAAtC,IAAsD,KAAK3B,KAAL,CAAW2B,WAAX,KAA2B,IAAjF,IAAyF,KAAK3B,KAAL,CAAW2B,WAAX,CAAuBM,KAAvB,CAA6BW,MAA7B,GAAsC,CAApI,EAAuI;AACnI,YAAMC,UAAU,GAAG,KAAK7C,KAAL,CAAW2B,WAAX,CAAuBM,KAAvB,CAA6Ba,IAA7B,CAAkC,UAAAlC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAY,sCAAhB;AAAA,SAAtC,CAAnB;AACA,aAAKX,OAAL,CAAaC,YAAb,CAA0B0C,UAAU,CAAChC,EAArC;AACA,aAAKN,QAAL,CAAc;AAAEmC,UAAAA,SAAS,qBAAM,KAAK1C,KAAL,CAAW2B,WAAX,CAAuBM,KAA7B;AAAX,SAAd;AACH;;AAED,UAAK,KAAKxB,KAAL,CAAWD,YAAX,CAAwBoC,MAAxB,KAAmC,CAAnC,IAAwC,KAAKnC,KAAL,CAAWqB,QAAxD,EAAmE;AAC/D,aAAKvB,QAAL,CAAc;AAAEuB,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACH;AACJ;;;6BAoEQ;AAAA;;AAAA,UACGH,WADH,GACmB,KAAK3B,KADxB,CACG2B,WADH;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,EAAE,EAAC,eAA1C;AAA0D,QAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWqB,QAA9E;AAAwF,QAAA,QAAQ,EAAE,KAAKiB,cAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAQ,QAAA,OAAO,EAAE,KAAK5B,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGI;AAAQ,QAAA,OAAO,EAAE,KAAK6B,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,CADJ,EAMI;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGIrB,WAAW,GACX,eAAcA,WAAW,CAACM,KAA1B,EAAiCjB,GAAjC,CAAqC,UAACJ,IAAD,EAAOqC,KAAP,EAAiB;AAClD,YAAKrC,IAAI,CAACC,EAAL,KAAY,sCAAjB,EAA0D;AACtD,iBACI,MAAC,cAAD;AAAgB,YAAA,GAAG,EAAEoC,KAArB;AAA4B,YAAA,IAAI,EAAErC,IAAlC;AAAwC,YAAA,GAAG,EAAE,MAAI,CAACsC,OAAlD;AAA2D,YAAA,QAAQ,EAAE,MAAI,CAACC,QAA1E;AAAoF,YAAA,QAAQ,EAAE,MAAI,CAAC1C,KAAL,CAAWqB,QAAzG;AAAmH,YAAA,OAAO,EAAE,MAAI,CAACsB,UAAjI;AAA6I,YAAA,KAAK,EAAE,MAAI,CAACC,cAAzJ;AAAyK,YAAA,OAAO,EAAE,MAAI,CAACC,iBAAvL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACJ,OAND,CADW,GAON,YAVT,CANJ,CADJ;AAsBH;;;;EAxHiC5D,S;;gBAAjBK,Q,iBACIJ,W;;SADJI,Q","sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nimport jwt from 'jsonwebtoken';\nimport axios from 'axios';\n\nexport default class ChatList extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeWindow: '',\n            checkedChats: [],\n            checkAll: false,\n            chatRooms: []\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props.currentUser)\n    }\n    \n\n    componentDidUpdate(prevProps) {\n        \n        if ( (prevProps.currentUser !== this.props.currentUser) && this.props.currentUser !== null && this.props.currentUser.rooms.length > 1) {\n            const chatWindow = this.props.currentUser.rooms.find(room => room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4' )\n            this.context.changeWindow(chatWindow.id)\n            this.setState({ chatRooms: [...this.props.currentUser.rooms] })\n        }\n\n        if ( this.state.checkedChats.length === 0 && this.state.checkAll ) {\n            this.setState({ checkAll: false })\n        }\n    }\n\n    switchChat = (event) => {\n        this.context.changeWindow(event.target.value)\n    }\n\n    addCheckedChat = (chatRoom) => {\n        this.setState({\n            checkedChats: [...this.state.checkedChats, chatRoom]\n        })\n    }\n\n    removeCheckedChat = (chatRoom) => {\n        const filtered = this.state.checkedChats.filter(room => room.id !== chatRoom.id)        \n        console.log(filtered)\n        this.setState({\n            checkedChats: filtered\n        })\n    }\n\n    deleteChats = () => {\n\n        this.state.checkedChats.map(chat => {\n            try {\n                const token = this.getToken();\n                axios({\n                    url: `https://us1.pusherplatform.io/services/chatkit_scheduler/v1/fe088103-8b4d-4e06-a93c-4d2fb3f963be/users/${chat.createdByUserId}`,\n                    method: 'put',\n                    headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`,}\n                })\n                .then(res => console.log(res))\n                .catch(err => console.log(err));\n            } catch(err) {\n                console.log(err)\n            }\n            this.props.currentUser.deleteRoom({ roomId: chat.id })\n            .then(() => {\n                console.log(`Deleted room with ID: ${chat.id}`);\n                this.setState({ checkAll: false })\n            })\n            .catch(err => {\n                console.log(`Error deleted room ${chat.id}: ${err}`)\n            })\n        })\n    }\n\n    handleCheckAll = () => {\n        const isCheckAll = !this.state.checkAll\n        this.setState({ checkAll: !this.state.checkAll })\n\n        console.log(isCheckAll)\n        if (isCheckAll)  {\n            const allRooms = this.props.currentUser.rooms.filter(room => room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45')\n            this.setState({ checkedChats: allRooms })\n        } else {\n            this.setState({ checkedChats: [] })\n        }\n    }\n\n    getToken = (userId) => {\n        const token = jwt.sign({ instance: 'fe088103-8b4d-4e06-a93c-4d2fb3f963be', iss: 'api_keys/d6b63c39-9c58-459d-a34b-a8d39eb6124d', sub: userId, su: true }, 'l8I+uX85fbJCwMZVSrlyE4z2f7ckYbgbirHv5pfhDgE=', { expiresIn: '1h' });\n        return token\n    }\n\n    seeList = () => {\n        console.log(this.state.checkedChats)\n    }\n\n    render() {\n        const { currentUser } = this.props\n        return (\n            <div className=\"chat-list-container\">\n                <div>\n                    <input type=\"checkbox\" name=\"checkAll\" id=\"chat-checkbox\" checked={this.state.checkAll} onChange={this.handleCheckAll}/>\n                    <button onClick={this.getToken} >Delete Chats</button>\n                    <button onClick={this.deleteChats} >Delete Chats</button>\n                </div>\n                <ul className=\"chatrooms-container\">\n\n                {\n                    currentUser ?\n                    Object.values(currentUser.rooms).map((room, index) => {\n                        if ( room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45' ) {\n                            return (\n                                <ChatRoomButton key={index} room={room} see={this.seeList} clearAll={this.clearAll} checkAll={this.state.checkAll} onClick={this.switchChat} check={this.addCheckedChat} uncheck={this.removeCheckedChat}  />\n                            )\n                        }\n                    }) : 'Loading...'\n                }\n                </ul>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}