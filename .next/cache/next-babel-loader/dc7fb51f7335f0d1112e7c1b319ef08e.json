{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/pages/chat.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useContext, useEffect } from 'react';\nimport chatImg from '../images/chat.jpg';\nimport loading from '../images/gif/loading-arrow.gif';\nimport axios from 'axios';\nimport { RoomContext } from '../context';\nimport Chatkit from '@pusher/chatkit-client';\nimport ChatList from '../components/ChatList';\nimport ChatBoard from '../components/ChatBoard';\nexport default function chat() {\n  var context = useContext(RoomContext);\n\n  var _useState = useState({}),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  var _useState2 = useState(false),\n      btnDisabled = _useState2[0],\n      setbtnDisabled = _useState2[1];\n\n  var _useState3 = useState({}),\n      errors = _useState3[0],\n      setErrors = _useState3[1];\n\n  var _useState4 = useState(null),\n      currentUser = _useState4[0],\n      setCurrentUser = _useState4[1];\n\n  var _useState5 = useState({}),\n      currentRoom = _useState5[0],\n      setCurrentRoom = _useState5[1];\n\n  var _useState6 = useState(false),\n      chatListActive = _useState6[0],\n      setchatListActive = _useState6[1];\n\n  var _useState7 = useState(0),\n      value = _useState7[0],\n      setValue = _useState7[1];\n\n  var style = {\n    minHeight: 600,\n    width: \"100%\",\n    height: \"calc(100vh - 65px)\",\n    background: \"rgba(175, 154, 125,0.5)\"\n  };\n\n  var handleChange = function handleChange(event) {\n    return setInput(_objectSpread({}, input, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var useForceUpdate = function useForceUpdate() {\n    setValue(Math.random);\n  };\n\n  useEffect(function () {\n    context.updateCredentials(true);\n  }, []);\n  useEffect(function () {\n    if (context.authenticated && context.authenticated !== null) {\n      handleChatSession();\n    } else {}\n  }, [context.authenticated]);\n\n  var handleSubmit = function handleSubmit(event) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            setbtnDisabled(true);\n            axios({\n              url: 'https://express-login.now.sh/api/users/login',\n              method: 'POST',\n              data: _JSON$stringify({\n                email: input.email,\n                password: input.password\n              }),\n              headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n              }\n            }).then(function (res) {\n              setbtnDisabled(false);\n              context.updateCredentials(false, res.data.userId, res.data.email, res.data.token);\n            })[\"catch\"](function (err) {\n              setErrors(_objectSpread({}, errors, {\n                error: \"No se pudo conectar. Revise sus credenciales\"\n              }));\n              setbtnDisabled(false);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var setChatListActive = function setChatListActive() {\n    console.log('true');\n    setchatListActive(!chatListActive);\n  };\n\n  var handleChatSession = function handleChatSession() {\n    var chatManager = new Chatkit.ChatManager({\n      instanceLocator: 'v1:us1:fe088103-8b4d-4e06-a93c-4d2fb3f963be',\n      userId: context.chatUserId,\n      tokenProvider: new Chatkit.TokenProvider({\n        url: 'https://express-login.now.sh/chat/authenticate'\n      })\n    });\n    chatManager.connect({\n      onAddedToRoom: function onAddedToRoom() {\n        useForceUpdate();\n      },\n      onRoomDeleted: function onRoomDeleted() {\n        useForceUpdate();\n      },\n      onNewReadCursor: function onNewReadCursor() {\n        useForceUpdate();\n      },\n      onRoomUpdated: function onRoomUpdated() {\n        useForceUpdate();\n      }\n    }).then(function (currentUser) {\n      console.log('updated');\n      context.setCurrentUser(currentUser);\n      return currentUser.subscribeToRoom({\n        roomId: '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45',\n        messageLimit: 100,\n        hooks: {\n          onPresenceChanged: function onPresenceChanged(state, user) {// console.log(`User ${user.name} is ${state.current}`)\n          }\n        }\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    })[\"catch\"](function (error) {\n      return console.log('Hiiiii', error);\n    });\n  };\n\n  var renderForm = function renderForm() {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      className: \"welcome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Welcome\"), _Object$values(errors).map(function (err, index) {\n      return __jsx(\"div\", {\n        key: index,\n        className: \"login-err\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, err);\n    }), __jsx(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Email\"), __jsx(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Password\"), __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      disabled: btnDisabled,\n      className: btnDisabled ? \"btn-primary submit-btn disabled\" : \"btn-primary submit-btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, btnDisabled ? __jsx(\"img\", {\n      className: \"loading-login\",\n      src: loading,\n      alt: \"loading spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }) : \"Enviar\")));\n  };\n\n  var renderLoggedin = function renderLoggedin() {\n    return __jsx(\"div\", {\n      className: \"signed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"chat-window\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, __jsx(ChatList, {\n      active: chatListActive,\n      setChatListActive: setChatListActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), __jsx(ChatBoard, {\n      setChatListActive: setChatListActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })));\n  };\n\n  if (context.authenticated === null) {\n    return __jsx(\"div\", {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"log-box loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      className: \"loading-spinner\",\n      src: loading,\n      alt: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })));\n  }\n\n  return __jsx(\"div\", {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"log-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, context.authenticated ? renderLoggedin() : renderForm()));\n}","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/pages/chat.js"],"names":["useState","useContext","useEffect","chatImg","loading","axios","RoomContext","Chatkit","ChatList","ChatBoard","chat","context","input","setInput","btnDisabled","setbtnDisabled","errors","setErrors","currentUser","setCurrentUser","currentRoom","setCurrentRoom","chatListActive","setchatListActive","value","setValue","style","minHeight","width","height","background","handleChange","event","target","name","useForceUpdate","Math","random","updateCredentials","authenticated","handleChatSession","handleSubmit","preventDefault","url","method","data","email","password","headers","then","res","userId","token","err","error","setChatListActive","console","log","chatManager","ChatManager","instanceLocator","chatUserId","tokenProvider","TokenProvider","connect","onAddedToRoom","onRoomDeleted","onNewReadCursor","onRoomUpdated","subscribeToRoom","roomId","messageLimit","hooks","onPresenceChanged","state","user","renderForm","map","index","renderLoggedin"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from 'react'\nimport chatImg from '../images/chat.jpg'\nimport loading from '../images/gif/loading-arrow.gif'\nimport axios from 'axios';\nimport { RoomContext } from '../context'\nimport Chatkit from '@pusher/chatkit-client'\nimport ChatList from '../components/ChatList'\nimport ChatBoard from '../components/ChatBoard'\n\n\nexport default function chat() {\n    \n    const context = useContext(RoomContext);\n    const [input, setInput] = useState({});\n    const [btnDisabled, setbtnDisabled] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [currentUser, setCurrentUser] = useState(null);\n    const [currentRoom, setCurrentRoom] = useState({});\n    const [chatListActive, setchatListActive] = useState(false)\n    const [value, setValue] = useState(0);\n    const style = {\n        minHeight: 600,\n        width: \"100%\",\n        height: \"calc(100vh - 65px)\",\n        background: \"rgba(175, 154, 125,0.5)\"\n    };\n    const handleChange = (event) => setInput({\n        ...input,\n        [event.target.name]: event.target.value\n    });\n\n    const useForceUpdate = () => {\n        setValue(Math.random);\n    }\n\n    useEffect(() => {\n        context.updateCredentials(true);\n    }, [])\n\n    useEffect(() => {\n        if ( context.authenticated && context.authenticated !== null ) {\n            handleChatSession();\n        } else {\n\n        }\n        \n    }, [context.authenticated])\n    \n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setbtnDisabled(true);\n        axios({\n            url: 'https://express-login.now.sh/api/users/login',\n            method: 'POST',\n            data: JSON.stringify({\n                email: input.email,\n                password: input.password\n            }),\n            headers: { 'Content-Type': 'application/json', 'Accept': 'application/json'}\n        })\n        .then(res => {\n            setbtnDisabled(false);\n            context.updateCredentials(false, res.data.userId, res.data.email, res.data.token);\n        })\n        .catch(err => {\n            setErrors({\n                ...errors,\n                error: \"No se pudo conectar. Revise sus credenciales\"\n            })\n            setbtnDisabled(false);\n        })\n    }\n\n    const setChatListActive = () => {\n        console.log('true')\n        setchatListActive(!chatListActive)\n    }\n\n    const handleChatSession = () => {\n        const chatManager = new Chatkit.ChatManager({\n            instanceLocator: 'v1:us1:fe088103-8b4d-4e06-a93c-4d2fb3f963be',\n            userId: context.chatUserId,\n            tokenProvider: new Chatkit.TokenProvider({\n                url: 'https://express-login.now.sh/chat/authenticate'\n            })\n        })\n\n        chatManager\n            .connect({\n                onAddedToRoom: () => {\n                    useForceUpdate();\n                },\n                onRoomDeleted: () => {\n                    useForceUpdate();\n                },\n                onNewReadCursor: () => {\n                    useForceUpdate();\n                },\n                onRoomUpdated: () => {\n                    useForceUpdate();\n                }\n            })\n            .then(currentUser => {\n                console.log('updated')\n                context.setCurrentUser(currentUser)\n                return currentUser.subscribeToRoom({\n                        roomId: '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45',\n                        messageLimit: 100,\n                        hooks: {\n                            onPresenceChanged: (state, user) => {\n                                // console.log(`User ${user.name} is ${state.current}`)\n                            }\n                        }\n                        \n                }).catch(err => console.log(err))\n            })\n            .catch(error => console.log('Hiiiii', error))\n    }\n\n    const renderForm = () => {\n        return (\n            <React.Fragment>\n                <h3 className=\"welcome\">Welcome</h3>\n                {\n                Object.values(errors).map((err, index) => {\n                    return <div key={index} className=\"login-err\">{err}</div>\n                })\n                }\n                <form className=\"login-form\" onSubmit={handleSubmit}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={handleChange}/>\n\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={handleChange}/>\n                    <button disabled={btnDisabled} className={btnDisabled?\"btn-primary submit-btn disabled\":\"btn-primary submit-btn\"} type=\"submit\">{\n                        btnDisabled ?\n                        <img className=\"loading-login\" src={loading} alt=\"loading spinner\"/>:\n                        \"Enviar\"\n                    }</button>\n                </form>\n            </React.Fragment>\n        )\n    }\n    const renderLoggedin = () => {\n        return (\n            <div className=\"signed\">\n                <div className=\"chat-window\">\n                    <ChatList active={chatListActive} setChatListActive={setChatListActive} />\n                    <ChatBoard  setChatListActive={setChatListActive} />\n                </div>\n                \n            </div>\n        )\n    }\n    if (context.authenticated === null) {\n        return (\n            <div style={style}>\n                <div className=\"log-box loading\">\n                <img className=\"loading-spinner\" src={loading} alt=\"loading\"/>\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div style={style}>\n            <div className=\"log-box\">\n                {\n                    context.authenticated ?\n                        renderLoggedin() :\n                        renderForm()\n                }\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}