{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatComponent.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport UsernameForm from './UsernameForm';\nimport ChatScreen from './ChatScreen';\nimport ChatScreenDisplay from './ChatScreenDisplay';\nimport axios from 'axios';\nimport { RoomContext } from '../context';\nimport { MdChat, MdClear } from \"react-icons/md\";\nexport default class ChatComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", username => {\n      axios({\n        url: 'http://localhost:3001/users',\n        method: 'POST',\n        data: JSON.stringify({\n          username\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        console.log(res.data.userId);\n        console.log('success');\n        this.setState({\n          currentUsername: username,\n          currentScreen: 'ChatScreen',\n          userId: res.data.userId\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n\n    _defineProperty(this, \"toggleModal\", () => {\n      this.setState({\n        modalShow: !this.state.modalShow\n      });\n    });\n\n    this.state = {\n      currentScreen: 'WhatIsYourUsernameScreen',\n      currentUsername: '',\n      userId: '',\n      modalShow: false\n    };\n  }\n\n  render() {\n    if (this.context.authenticated || this.context.authenticated === null) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    } else {\n      return (// <div className=\"chat-component\">\n        //     {this.handleChat()}\n        // </div>\n        __jsx(\"div\", {\n          className: \"chat-component chat-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"chat-component-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, __jsx(ChatScreenDisplay, {\n          show: this.state.modalShow,\n          onSubmit: this.handleSubmit,\n          currentScreen: this.state.currentScreen,\n          currentUsername: this.state.currentUsername,\n          userId: this.state.userId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"chat-icon-wrapper\",\n          onClick: this.toggleModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"modal-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, __jsx(MdClear, {\n          className: this.state.modalShow ? \"cross\" : \"cross hide\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"modal-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, __jsx(MdChat, {\n          className: this.state.modalShow ? \"chat hide\" : \"chat\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        })))))\n      );\n    }\n  }\n\n}\n\n_defineProperty(ChatComponent, \"contextType\", RoomContext);","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatComponent.js"],"names":["Component","UsernameForm","ChatScreen","ChatScreenDisplay","axios","RoomContext","MdChat","MdClear","ChatComponent","constructor","props","username","url","method","data","JSON","stringify","headers","then","res","console","log","userId","setState","currentUsername","currentScreen","catch","err","modalShow","state","render","context","authenticated","handleSubmit","toggleModal"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport UsernameForm from './UsernameForm'\nimport ChatScreen from './ChatScreen'\nimport ChatScreenDisplay from './ChatScreenDisplay'\nimport axios from 'axios'\nimport { RoomContext } from '../context';\nimport { MdChat, MdClear } from \"react-icons/md\";\n\nexport default class ChatComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state= {\n            currentScreen: 'WhatIsYourUsernameScreen',\n            currentUsername: '',\n            userId: '',\n            modalShow: false\n        }\n    }\n    static contextType = RoomContext;\n    handleSubmit = (username) => {\n        axios({\n            url: 'http://localhost:3001/users',\n            method: 'POST',\n            data: JSON.stringify({\n                username\n            }),\n            headers: { 'Content-Type': 'application/json' }\n        }).then(res => {\n            console.log(res.data.userId)\n            console.log('success')\n            this.setState({\n                currentUsername: username,\n                currentScreen: 'ChatScreen',\n                userId: res.data.userId\n            })\n        }).catch(err => {\n            console.log(err);  \n        })\n    }\n\n    toggleModal = () => {\n        this.setState({\n            modalShow: !this.state.modalShow\n        })\n    }\n    \n    render() {\n        if ( this.context.authenticated || this.context.authenticated === null ) {\n            return (<div></div>)\n        } else {\n            return (\n                // <div className=\"chat-component\">\n                //     {this.handleChat()}\n                // </div>\n                <div className=\"chat-component chat-icon\">\n                    <div className=\"chat-component-wrapper\">\n                        <ChatScreenDisplay show={this.state.modalShow} onSubmit={this.handleSubmit} currentScreen={this.state.currentScreen} currentUsername={this.state.currentUsername} userId={this.state.userId}/>\n                        <div className=\"chat-icon-wrapper\" onClick={this.toggleModal}>\n                            <div className=\"modal-icon\">\n                                <MdClear className={this.state.modalShow ? \"cross\" : \"cross hide\"} />\n                            </div>\n                            <div className=\"modal-icon\">\n                                <MdChat  className={this.state.modalShow ? \"chat hide\" : \"chat\"} />  \n                            </div>\n                            \n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}