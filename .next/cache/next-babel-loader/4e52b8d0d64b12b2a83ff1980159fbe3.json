{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/context.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport jwt from 'jsonwebtoken';\nvar RoomContext = React.createContext(); // \n\nvar RoomProvider = /*#__PURE__*/function (_Component) {\n  _inherits(RoomProvider, _Component);\n\n  function RoomProvider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RoomProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RoomProvider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      roomtype: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      PUBLICTOKEN: 'f3341f2f85860e06446a5e86bfd392',\n      authenticated: null,\n      chatUserId: 'guido',\n      activeWindow: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatData\", function (items) {\n      var tempItems = items.map(function (item) {\n        var id = item.id;\n        var images = item.images.map(function (image) {\n          return image.url;\n        });\n\n        var room = _objectSpread({}, item, {\n          images: images,\n          id: id\n        });\n\n        return room;\n      });\n      return tempItems;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRoom\", function (slug) {\n      var tempRooms = _toConsumableArray(_this.state.rooms);\n\n      var room = tempRooms.find(function (room) {\n        return room.slug === slug;\n      });\n      return room;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeWindow\", function (window) {\n      _this.setState({\n        activeWindow: window\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"logOut\", function () {\n      localStorage.removeItem('userData');\n\n      _this.setState({\n        authenticated: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateCredentials\", function (refresh, userId, email, token) {\n      // const userData = JSON.parse(localStorage.getItem('userData'));\n      // const decoded = jwt.decode(userData.token, {complete:true});\n      // console.log(userData)\n      // console.log(decoded)\n      if (refresh === true) {\n        var userData = JSON.parse(localStorage.getItem('userData'));\n\n        if (userData && userData !== null) {\n          axios({\n            url: 'http://localhost:8000/api/users/refresh',\n            method: 'POST',\n            data: _JSON$stringify({\n              email: userData.email\n            }),\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"Bearer \".concat(userData.token)\n            }\n          }).then(function (res) {\n            localStorage.setItem('userData', _JSON$stringify({\n              userId: res.data.userId,\n              email: res.data.email,\n              token: res.data.token\n            }));\n\n            _this.setState({\n              authenticated: true\n            });\n          })[\"catch\"](function (err) {\n            localStorage.removeItem('userData');\n\n            _this.setState({\n              authenticated: false\n            });\n          });\n        } else {\n          _this.setState({\n            authenticated: false\n          });\n        }\n      } else {\n        localStorage.setItem('userData', _JSON$stringify({\n          userId: userId,\n          email: email,\n          token: token\n        }));\n\n        _this.setState({\n          authenticated: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = event.target.name;\n\n      _this.setState(_defineProperty({}, name, value), _this.filterRooms); //callback function ^\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"filterRooms\", function () {\n      var _this$state = _this.state,\n          rooms = _this$state.rooms,\n          roomtype = _this$state.roomtype,\n          capacity = _this$state.capacity,\n          price = _this$state.price,\n          minSize = _this$state.minSize,\n          maxSize = _this$state.maxSize,\n          breakfast = _this$state.breakfast,\n          pets = _this$state.pets; //all the rooms\n\n      var tempRooms = _toConsumableArray(rooms); //transform value\n\n\n      capacity = _parseInt(capacity);\n      price = _parseInt(price); //filter by type\n\n      if (roomtype !== 'all') {\n        tempRooms = tempRooms.filter(function (room) {\n          return room.roomtype === roomtype;\n        });\n      } //filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(function (room) {\n          return room.capacity >= capacity;\n        });\n      } //filter by price\n\n\n      tempRooms = tempRooms.filter(function (room) {\n        return room.price <= price;\n      }); //filter extras\n\n      if (breakfast) {\n        tempRooms = tempRooms.filter(function (room) {\n          return room.breakfast === true;\n        });\n      }\n\n      if (pets) {\n        tempRooms = tempRooms.filter(function (room) {\n          return room.pets === true;\n        });\n      }\n\n      _this.setState({\n        sortedRooms: tempRooms\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(RoomProvider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      axios({\n        url: 'https://graphql.datocms.com/',\n        method: 'post',\n        data: {\n          query: \"{\\n                allRooms {\\n                    id\\n                    name\\n                    slug\\n                    price\\n                    roomtype\\n                    size\\n                    capacity\\n                    breakfast\\n                    pets\\n                    featured\\n                    description\\n                    extras\\n                    images {\\n                      url\\n                    }\\n                  }\\n                }\"\n        },\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': \"Bearer \".concat(this.state.PUBLICTOKEN)\n        }\n      }).then(function (response) {\n        // handle success\n        var rooms = self.formatData(response.data.data.allRooms);\n        var featuredRooms = rooms.filter(function (room) {\n          return room.featured === true;\n        });\n        var maxPrice = Math.max.apply(Math, _toConsumableArray(rooms.map(function (item) {\n          return item.price;\n        })));\n        var maxSize = Math.max.apply(Math, _toConsumableArray(rooms.map(function (item) {\n          return item.size;\n        })));\n        self.setState({\n          rooms: rooms,\n          featuredRooms: featuredRooms,\n          sortedRooms: rooms,\n          loading: false,\n          price: maxPrice,\n          maxPrice: maxPrice,\n          maxSize: maxSize\n        });\n        return rooms;\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(RoomContext.Provider, {\n        value: _objectSpread({}, this.state, {\n          getRoom: this.getRoom,\n          handleChange: this.handleChange,\n          updateCredentials: this.updateCredentials,\n          logOut: this.logOut,\n          changeWindow: this.changeWindow\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return RoomProvider;\n}(Component);\n\nvar RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return __jsx(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, function (value) {\n      return __jsx(Component, _extends({}, props, {\n        context: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }));\n    });\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/context.js"],"names":["React","Component","axios","jwt","RoomContext","createContext","RoomProvider","rooms","sortedRooms","featuredRooms","loading","roomtype","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","PUBLICTOKEN","authenticated","chatUserId","activeWindow","items","tempItems","map","item","id","images","image","url","room","slug","tempRooms","state","find","window","setState","localStorage","removeItem","refresh","userId","email","token","userData","JSON","parse","getItem","method","data","headers","then","res","setItem","err","event","target","value","type","checked","name","filterRooms","pets","filter","self","query","response","formatData","allRooms","featured","Math","max","size","error","console","log","getRoom","handleChange","updateCredentials","logOut","changeWindow","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken';\n\nconst RoomContext = React.createContext();\n// \n\nclass RoomProvider extends Component {\n    state={\n        rooms: [],\n        sortedRooms: [],\n        featuredRooms: [],\n        loading: true,\n        roomtype:'all',\n        capacity:1,\n        price:0,\n        minPrice: 0,\n        maxPrice: 0,\n        minSize: 0,\n        maxSize: 0,\n        breakfast: false,\n        PUBLICTOKEN: 'f3341f2f85860e06446a5e86bfd392',\n        authenticated: null,\n        chatUserId: 'guido',\n        activeWindow: ''\n    }\n    componentDidMount(){\n        const self = this;\n        axios({\n            url: 'https://graphql.datocms.com/',\n            method: 'post',\n            data: {\n              query: `{\n                allRooms {\n                    id\n                    name\n                    slug\n                    price\n                    roomtype\n                    size\n                    capacity\n                    breakfast\n                    pets\n                    featured\n                    description\n                    extras\n                    images {\n                      url\n                    }\n                  }\n                }`\n            },\n            headers: { 'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': `Bearer ${this.state.PUBLICTOKEN}`,}\n          })\n        .then(function (response) {\n          // handle success\n          let rooms = self.formatData(response.data.data.allRooms);\n          let featuredRooms = rooms.filter(room => room.featured === true);\n            let maxPrice = Math.max(...rooms.map(item => item.price));\n            let maxSize = Math.max(...rooms.map(item => item.size));\n            self.setState({\n                rooms,\n                featuredRooms,\n                sortedRooms: rooms,\n                loading: false,\n                price: maxPrice,\n                maxPrice,\n                maxSize\n            })\n          return rooms\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n    formatData = (items) => {\n        let tempItems = items.map(item => {\n            let id = item.id;\n            let images = item.images.map(image => image.url);\n            let room = {...item,images,id};\n            return room;\n        });\n        return tempItems;\n    }\n    getRoom = (slug) => {\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find(room => room.slug === slug);\n        return room;\n\n    }\n\n    changeWindow = (window) => {\n        this.setState({\n            activeWindow: window\n        })\n    }\n\n    logOut = () => {\n        localStorage.removeItem('userData');\n        this.setState({authenticated: false}) \n    }\n\n    updateCredentials = (refresh, userId, email, token) => {\n        // const userData = JSON.parse(localStorage.getItem('userData'));\n        // const decoded = jwt.decode(userData.token, {complete:true});\n        // console.log(userData)\n        // console.log(decoded)\n        if (refresh === true) {\n            const userData = JSON.parse(localStorage.getItem('userData'));\n            if (userData && userData !== null) {\n                axios({\n                    url: 'http://localhost:8000/api/users/refresh',\n                    method: 'POST',\n                    data: JSON.stringify({\n                        email: userData.email\n                    }),\n                    headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${userData.token}`}\n                })\n                .then(res => {\n                    localStorage.setItem('userData', JSON.stringify({userId: res.data.userId, email: res.data.email, token: res.data.token}));\n                    this.setState({authenticated: true})\n                })\n                .catch(err => {\n                    localStorage.removeItem('userData');\n                    this.setState({authenticated: false})    \n                })\n            } else {\n                this.setState({authenticated: false})\n            }\n        } else {\n            localStorage.setItem('userData', JSON.stringify({userId: userId, email: email, token: token}));\n            this.setState({\n                authenticated: true\n            })\n        }\n    }\n    \n\n    handleChange = event => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked :\n        target.value\n        const name = event.target.name;\n        this.setState({\n            [name]: value\n        },this.filterRooms)\n        //callback function ^\n    }\n    filterRooms = () => {\n        let {\n            rooms,roomtype,capacity,price,minSize,maxSize,breakfast,pets\n        } = this.state\n        //all the rooms\n        let tempRooms = [...rooms];\n        //transform value\n        capacity = parseInt(capacity);\n        price = parseInt(price);\n        //filter by type\n        if (roomtype !== 'all') {\n            tempRooms = tempRooms.filter(room => room.roomtype === roomtype)\n        }\n        //filter by capacity\n        if (capacity !== 1) {\n            tempRooms = tempRooms.filter(room => room.capacity >= capacity)\n        }\n        //filter by price\n        tempRooms= tempRooms.filter(room => room.price <= price )\n        //filter extras\n        if ( breakfast ) {\n            tempRooms = tempRooms.filter(room => room.breakfast === true)\n        }\n        if ( pets ) {\n            tempRooms = tempRooms.filter(room => room.pets === true)\n        }\n        this.setState({\n            sortedRooms: tempRooms\n        })\n    }\n    render() {\n        return (\n            <RoomContext.Provider \n                value={{\n                    ...this.state,\n                    getRoom: this.getRoom,\n                    handleChange: this.handleChange,\n                    updateCredentials: this.updateCredentials,\n                    logOut: this.logOut,\n                    changeWindow: this.changeWindow\n                }}\n            >\n                {this.props.children}\n            </RoomContext.Provider>\n        )\n    }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component) {\n    return function ConsumerWrapper(props) {\n        return <RoomConsumer>\n            {value => <Component {...props} context={value}/>}\n        </RoomConsumer>\n    }\n}\n\nexport{ RoomProvider, RoomConsumer, RoomContext };\n"]},"metadata":{},"sourceType":"module"}