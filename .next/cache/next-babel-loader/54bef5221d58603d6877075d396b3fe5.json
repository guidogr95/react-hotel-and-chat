{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\nexport default class ChatList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"switchChat\", event => {\n      this.context.changeWindow(event.target.value);\n    });\n\n    _defineProperty(this, \"addCheckedChat\", chatRoom => {\n      this.setState({\n        checkedChats: [...this.state.checkedChats, chatRoom]\n      });\n    });\n\n    _defineProperty(this, \"removeCheckedChat\", chatRoom => {\n      const filtered = this.state.checkedChats.filter(room => room.id !== chatRoom.id);\n      console.log(filtered);\n      this.setState({\n        checkedChats: filtered\n      });\n    });\n\n    _defineProperty(this, \"deleteChats\", () => {\n      this.state.checkedChats.map(chat => {\n        this.props.currentUser.deleteRoom({\n          roomId: chat.id\n        }).then(() => {\n          console.log(`Deleted room with ID: ${chat.id}`);\n        }).catch(err => {\n          console.log(`Error deleted room ${chat.id}: ${err}`);\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleCheckAll\", () => {\n      const isCheckAll = !this.state.checkAll;\n      this.setState({\n        checkAll: !this.state.checkAll\n      });\n      console.log(isCheckAll);\n\n      if (isCheckAll) {\n        const allRooms = this.props.currentUser.rooms.filter(room => room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45');\n        this.setState({\n          checkedChats: allRooms\n        });\n      } else {\n        this.setState({\n          checkedChats: []\n        });\n      }\n    });\n\n    _defineProperty(this, \"seeList\", () => {\n      console.log(this.state.checkedChats);\n    });\n\n    this.state = {\n      activeWindow: '',\n      checkedChats: [],\n      checkAll: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentUser !== this.props.currentUser && this.props.currentUser !== null && this.props.currentUser.rooms.length > 1) {\n      const chatWindow = this.props.currentUser.rooms.find(room => room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4');\n      this.context.changeWindow(chatWindow.id);\n    }\n\n    if (this.state.checkedChats.length === 0) {\n      this.setState({\n        checkAll: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      currentUser\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"chat-list-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"checkAll\",\n      id: \"chat-checkbox\",\n      checked: this.state.checkAll,\n      onChange: this.handleCheckAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: this.deleteChats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Delete Chats\")), __jsx(\"ul\", {\n      className: \"chatrooms-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, currentUser ? Object.values(currentUser.rooms).map((room, index) => {\n      if (room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45') {\n        return __jsx(ChatRoomButton, {\n          key: index,\n          room: room,\n          see: this.seeList,\n          clearAll: this.clearAll,\n          checkAll: this.state.checkAll,\n          onClick: this.switchChat,\n          check: this.addCheckedChat,\n          uncheck: this.removeCheckedChat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      }\n    }) : 'Loading...'));\n  }\n\n}\n\n_defineProperty(ChatList, \"contextType\", RoomContext);","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatList.js"],"names":["Component","RoomContext","ChatRoomButton","ChatList","constructor","props","event","context","changeWindow","target","value","chatRoom","setState","checkedChats","state","filtered","filter","room","id","console","log","map","chat","currentUser","deleteRoom","roomId","then","catch","err","isCheckAll","checkAll","allRooms","rooms","activeWindow","componentDidUpdate","prevProps","length","chatWindow","find","render","handleCheckAll","deleteChats","Object","values","index","seeList","clearAll","switchChat","addCheckedChat","removeCheckedChat"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAE5CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,wCAqBLC,KAAD,IAAW;AACpB,WAAKC,OAAL,CAAaC,YAAb,CAA0BF,KAAK,CAACG,MAAN,CAAaC,KAAvC;AACH,KAvBkB;;AAAA,4CAyBDC,QAAD,IAAc;AAC3B,WAAKC,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,YAAf,EAA6BF,QAA7B;AADJ,OAAd;AAGH,KA7BkB;;AAAA,+CA+BEA,QAAD,IAAc;AAC9B,YAAMI,QAAQ,GAAG,KAAKD,KAAL,CAAWD,YAAX,CAAwBG,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,QAAQ,CAACO,EAA5D,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,WAAKH,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAEE;AADJ,OAAd;AAGH,KArCkB;;AAAA,yCAuCL,MAAM;AAEhB,WAAKD,KAAL,CAAWD,YAAX,CAAwBQ,GAAxB,CAA4BC,IAAI,IAAI;AAChC,aAAKjB,KAAL,CAAWkB,WAAX,CAAuBC,UAAvB,CAAkC;AAAEC,UAAAA,MAAM,EAAEH,IAAI,CAACJ;AAAf,SAAlC,EACCQ,IADD,CACM,MAAM;AACRP,UAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBE,IAAI,CAACJ,EAAG,EAA7C;AACH,SAHD,EAICS,KAJD,CAIOC,GAAG,IAAI;AACVT,UAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBE,IAAI,CAACJ,EAAG,KAAIU,GAAI,EAAlD;AACH,SAND;AAOH,OARD;AASH,KAlDkB;;AAAA,4CAoDF,MAAM;AACnB,YAAMC,UAAU,GAAG,CAAC,KAAKf,KAAL,CAAWgB,QAA/B;AACA,WAAKlB,QAAL,CAAc;AAAEkB,QAAAA,QAAQ,EAAE,CAAC,KAAKhB,KAAL,CAAWgB;AAAxB,OAAd;AAEAX,MAAAA,OAAO,CAACC,GAAR,CAAYS,UAAZ;;AACA,UAAIA,UAAJ,EAAiB;AACb,cAAME,QAAQ,GAAG,KAAK1B,KAAL,CAAWkB,WAAX,CAAuBS,KAAvB,CAA6BhB,MAA7B,CAAoCC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAY,sCAAxD,CAAjB;AACA,aAAKN,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAEkB;AAAhB,SAAd;AACH,OAHD,MAGO;AACH,aAAKnB,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACH;AACJ,KA/DkB;;AAAA,qCAiET,MAAM;AACZM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWD,YAAvB;AACH,KAnEkB;;AAEf,SAAKC,KAAL,GAAa;AACTmB,MAAAA,YAAY,EAAE,EADL;AAETpB,MAAAA,YAAY,EAAE,EAFL;AAGTiB,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH;;AAEDI,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAE1B,QAAMA,SAAS,CAACZ,WAAV,KAA0B,KAAKlB,KAAL,CAAWkB,WAAtC,IAAsD,KAAKlB,KAAL,CAAWkB,WAAX,KAA2B,IAAjF,IAAyF,KAAKlB,KAAL,CAAWkB,WAAX,CAAuBS,KAAvB,CAA6BI,MAA7B,GAAsC,CAApI,EAAuI;AACnI,YAAMC,UAAU,GAAG,KAAKhC,KAAL,CAAWkB,WAAX,CAAuBS,KAAvB,CAA6BM,IAA7B,CAAkCrB,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAY,sCAAtD,CAAnB;AACA,WAAKX,OAAL,CAAaC,YAAb,CAA0B6B,UAAU,CAACnB,EAArC;AACH;;AAED,QAAK,KAAKJ,KAAL,CAAWD,YAAX,CAAwBuB,MAAxB,KAAmC,CAAxC,EAA4C;AACxC,WAAKxB,QAAL,CAAc;AAAEkB,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACH;AACJ;;AAkDDS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEhB,MAAAA;AAAF,QAAkB,KAAKlB,KAA7B;AACA,WACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,EAAE,EAAC,eAA1C;AAA0D,MAAA,OAAO,EAAE,KAAKS,KAAL,CAAWgB,QAA9E;AAAwF,MAAA,QAAQ,EAAE,KAAKU,cAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADJ,EAKI;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGIlB,WAAW,GACXmB,MAAM,CAACC,MAAP,CAAcpB,WAAW,CAACS,KAA1B,EAAiCX,GAAjC,CAAqC,CAACJ,IAAD,EAAO2B,KAAP,KAAiB;AAClD,UAAK3B,IAAI,CAACC,EAAL,KAAY,sCAAjB,EAA0D;AACtD,eACI,MAAC,cAAD;AAAgB,UAAA,GAAG,EAAE0B,KAArB;AAA4B,UAAA,IAAI,EAAE3B,IAAlC;AAAwC,UAAA,GAAG,EAAE,KAAK4B,OAAlD;AAA2D,UAAA,QAAQ,EAAE,KAAKC,QAA1E;AAAoF,UAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWgB,QAAzG;AAAmH,UAAA,OAAO,EAAE,KAAKiB,UAAjI;AAA6I,UAAA,KAAK,EAAE,KAAKC,cAAzJ;AAAyK,UAAA,OAAO,EAAE,KAAKC,iBAAvL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AACJ,KAND,CADW,GAON,YAVT,CALJ,CADJ;AAqBH;;AA9F2C;;gBAA3B9C,Q,iBACIF,W","sourcesContent":["import { Component } from 'react'\nimport { RoomContext } from '../context';\nimport ChatRoomButton from './ChatRoomButton';\n\nexport default class ChatList extends Component {\n    static contextType = RoomContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeWindow: '',\n            checkedChats: [],\n            checkAll: false\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        \n        if ( (prevProps.currentUser !== this.props.currentUser) && this.props.currentUser !== null && this.props.currentUser.rooms.length > 1) {\n            const chatWindow = this.props.currentUser.rooms.find(room => room.id !== '992194b2-feaa-4842-a546-5c3482ae69c4' )\n            this.context.changeWindow(chatWindow.id)\n        }\n\n        if ( this.state.checkedChats.length === 0 ) {\n            this.setState({ checkAll: false })\n        }\n    }\n\n    switchChat = (event) => {\n        this.context.changeWindow(event.target.value)\n    }\n\n    addCheckedChat = (chatRoom) => {\n        this.setState({\n            checkedChats: [...this.state.checkedChats, chatRoom]\n        })\n    }\n\n    removeCheckedChat = (chatRoom) => {\n        const filtered = this.state.checkedChats.filter(room => room.id !== chatRoom.id)        \n        console.log(filtered)\n        this.setState({\n            checkedChats: filtered\n        })\n    }\n\n    deleteChats = () => {\n\n        this.state.checkedChats.map(chat => {\n            this.props.currentUser.deleteRoom({ roomId: chat.id })\n            .then(() => {\n                console.log(`Deleted room with ID: ${chat.id}`)\n            })\n            .catch(err => {\n                console.log(`Error deleted room ${chat.id}: ${err}`)\n            })\n        })\n    }\n\n    handleCheckAll = () => {\n        const isCheckAll = !this.state.checkAll\n        this.setState({ checkAll: !this.state.checkAll })\n\n        console.log(isCheckAll)\n        if (isCheckAll)  {\n            const allRooms = this.props.currentUser.rooms.filter(room => room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45')\n            this.setState({ checkedChats: allRooms })\n        } else {\n            this.setState({ checkedChats: [] })\n        }\n    }\n\n    seeList = () => {\n        console.log(this.state.checkedChats)\n    }\n\n    render() {\n        const { currentUser } = this.props\n        return (\n            <div className=\"chat-list-container\">\n                <div>\n                    <input type=\"checkbox\" name=\"checkAll\" id=\"chat-checkbox\" checked={this.state.checkAll} onChange={this.handleCheckAll}/>\n                    <button onClick={this.deleteChats} >Delete Chats</button>\n                </div>\n                <ul className=\"chatrooms-container\">\n\n                {\n                    currentUser ?\n                    Object.values(currentUser.rooms).map((room, index) => {\n                        if ( room.id !== '765b61eb-ad46-4c8b-bd31-2e4d4acc6f45' ) {\n                            return (\n                                <ChatRoomButton key={index} room={room} see={this.seeList} clearAll={this.clearAll} checkAll={this.state.checkAll} onClick={this.switchChat} check={this.addCheckedChat} uncheck={this.removeCheckedChat}  />\n                            )\n                        }\n                    }) : 'Loading...'\n                }\n                </ul>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}