{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/guido/Documents/GitHub/react-resort/components/ChatComponent.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport UsernameForm from './UsernameForm';\nimport ChatScreen from './ChatScreen';\nimport ChatScreenDisplay from './ChatScreenDisplay';\nimport axios from 'axios';\nimport { RoomContext } from '../context';\nimport { MdChat, MdClear } from \"react-icons/md\";\n\nvar ChatComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ChatComponent, _Component);\n\n  function ChatComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ChatComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatComponent).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (username) {\n      var dateRaw = new Date();\n      var date = dateRaw.toString().slice(8, 24);\n      console.log(date);\n      axios({\n        url: 'https://express-login.now.sh/chat/users',\n        method: 'POST',\n        data: _JSON$stringify({\n          username: username,\n          date: date\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        console.log(res.data.userId);\n        console.log('success');\n\n        _this.setState({\n          currentUsername: username,\n          currentScreen: 'ChatScreen',\n          userId: res.data.userId\n        });\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleModal\", function () {\n      _this.setState({\n        modalShow: !_this.state.modalShow\n      });\n    });\n\n    _this.state = {\n      currentScreen: 'WhatIsYourUsernameScreen',\n      currentUsername: '',\n      userId: '',\n      modalShow: false\n    };\n    return _this;\n  }\n\n  _createClass(ChatComponent, [{\n    key: \"render\",\n    value: function render() {\n      if (this.context.authenticated || this.context.authenticated === null) {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      } else {\n        return __jsx(\"div\", {\n          className: \"chat-component chat-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"chat-component-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, __jsx(ChatScreenDisplay, {\n          show: this.state.modalShow,\n          onSubmit: this.handleSubmit,\n          currentScreen: this.state.currentScreen,\n          currentUsername: this.state.currentUsername,\n          userId: this.state.userId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"chat-icon-wrapper\",\n          onClick: this.toggleModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"modal-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, __jsx(MdClear, {\n          className: this.state.modalShow ? \"cross\" : \"cross hide\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"modal-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, __jsx(MdChat, {\n          className: this.state.modalShow ? \"chat hide\" : \"chat\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        })))));\n      }\n    }\n  }]);\n\n  return ChatComponent;\n}(Component);\n\n_defineProperty(ChatComponent, \"contextType\", RoomContext);\n\nexport { ChatComponent as default };","map":{"version":3,"sources":["/home/guido/Documents/GitHub/react-resort/components/ChatComponent.js"],"names":["Component","UsernameForm","ChatScreen","ChatScreenDisplay","axios","RoomContext","MdChat","MdClear","ChatComponent","props","username","dateRaw","Date","date","toString","slice","console","log","url","method","data","headers","then","res","userId","setState","currentUsername","currentScreen","err","modalShow","state","context","authenticated","handleSubmit","toggleModal"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport UsernameForm from './UsernameForm'\nimport ChatScreen from './ChatScreen'\nimport ChatScreenDisplay from './ChatScreenDisplay'\nimport axios from 'axios'\nimport { RoomContext } from '../context';\nimport { MdChat, MdClear } from \"react-icons/md\";\n\nexport default class ChatComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state= {\n            currentScreen: 'WhatIsYourUsernameScreen',\n            currentUsername: '',\n            userId: '',\n            modalShow: false\n        }\n    }\n    static contextType = RoomContext;\n    handleSubmit = (username) => {\n        const dateRaw = new Date();\n        const date = dateRaw.toString().slice(8,24);\n        console.log(date)\n        axios({\n            url: 'https://express-login.now.sh/chat/users',\n            method: 'POST',\n            data: JSON.stringify({\n                username,\n                date\n            }),\n            headers: { 'Content-Type': 'application/json' }\n        }).then(res => {\n            console.log(res.data.userId)\n            console.log('success')\n            this.setState({\n                currentUsername: username,\n                currentScreen: 'ChatScreen',\n                userId: res.data.userId\n            })\n        }).catch(err => {\n            console.log(err);  \n        })\n    }\n\n    toggleModal = () => {\n        this.setState({\n            modalShow: !this.state.modalShow\n        })\n    }\n    \n    render() {\n        if ( this.context.authenticated || this.context.authenticated === null ) {\n            return (<div></div>)\n        } else {\n            return (\n                <div className=\"chat-component chat-icon\">\n                    <div className=\"chat-component-wrapper\">\n                        <ChatScreenDisplay show={this.state.modalShow} onSubmit={this.handleSubmit} currentScreen={this.state.currentScreen} currentUsername={this.state.currentUsername} userId={this.state.userId}/>\n                        <div className=\"chat-icon-wrapper\" onClick={this.toggleModal}>\n                            <div className=\"modal-icon\">\n                                <MdClear className={this.state.modalShow ? \"cross\" : \"cross hide\"} />\n                            </div>\n                            <div className=\"modal-icon\">\n                                <MdChat  className={this.state.modalShow ? \"chat hide\" : \"chat\"} />  \n                            </div>\n                            \n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}